what is synchronization
What is regular expression
Rest API automation concepts
How to close 7th or 8th browser
JDBC - how to execute the query
how to find if particular value is alphanumic or numeric - inbuilt methodsjavascript

real time example of method overloading
Why we use abstract in Selenium


Interview Questions:
=====================

Edureka - Selenium interview questions
--------------------------------------
https://www.edureka.co/blog/interview-questions/selenium-interview-questions-answers/?utm_campaign=Email%20Marketing%20April%202019&utm_
source=hs_email&utm_medium=email&utm_content=72113601&_hsenc=p2ANqtz-_QOoI3mg1CjmfgFjbPILQ2BKzgnO_t2yB_seZCbweMnA6zPiTRvRoC6RfR4y5Mk2EHuL4
54QTCrwhWPjuIJq6sSfMX8g&_hsmi=72113601

Edureka - Java interview questions
----------------------------------
https://www.edureka.co/blog/interview-questions/java-interview-questions/?utm_campaign=Email%20Marketing%20April%202019&utm_
source=hs_email&utm_medium=email&utm_content=72113601&_hsenc=p2ANqtz-_QOoI3mg1CjmfgFjbPILQ2BKzgnO_t2yB_seZCbweMnA6zPiTRvRoC6R
fR4y5Mk2EHuL454QTCrwhWPjuIJq6sSfMX8g&_hsmi=72113601


1. What is JDK

JDK - Java development kit is a software development evironment used for java development 
JDK includes:
JRE - Java runtime environment
Java - Interpreter/Loader
Javac - compiler
Jar - an archiver

2. What is JRE - is set of software tools for development of java applications. Owned by Oracle

3. What is Java - Javais a programming language. Fast,secure and reliable

4. Advantage of Java
	1. Simple
	2. Platform independent
	3. Architectural Neutral - it can run on any processors. no matter what the development environment
	4. Robust - Able to handle run time error
	5. Secure - Code is converted to bytes after compilation.
	6. OOP
	7. Netorked - Can be used for network based application using J2EE

5. What is variable - Reserve area in memory
	1. local variable
	2. instance variable, global variable, public variable
	3. static variable

public class Test{
int a=10;   //global variable
static int b=20;   //static

public void test1(int c){
int d=20;   //local variable
}}

6. What is data type - Represents different types of values stored

Primitive datatype - boolean, byte, short, int, long, double, char

Non primitive - Class Type
	String s1;
	Employee ee;

7.Java switch statement

switch(3)
case1:
break;
case2:
break;
case3:
break;


8. For loop - used for iteration, if no.of iteration fixed

9. while - when no.of iterations not fixed.

while(condition)
{
}
10. do while - execute at least once

do{
}while(condition)


11. break and Continue

12. Comments - Line //
		/*   */

13. What is class 
It is template or blue print of objects, otherwise indicate group of objects with similar behavior
ex: HUman being

14. What is object?
Which has properties and behavior
Ex: Ram

15. What is method?
Behavior/actions of object is called Method

16. Naming convention
Class - Start with uppercase
Intefrace - Start with uppercase
Method - Starts with lowercase
Variable - Starts with lowercase
package - Starts with lowercase
Constants - Starts with uppercase


17. Why constructor
Constructor is similar to method that is called when instance of an object is created

1. Constructor doesnot have return type
2. Name of constructor is same as class name
3. Unlike methods, constructor is not considered as class member
4. constructor is called when an instance of object is created

cow c = new cow();   //new cow() is object, instance of object is c. When this is created cow constructor is called

public class cow{
public cow(){
---
---
}
public cow(int a){
---
---
}}

18. Types of construcotr
1. Default constructor
2. Paramterized constructor


19. Is it possile to create object of  default constructor when we paramerized constructor in class
No

20. This in Java?
1. This can be used to refer to global variable in current class

public class cow{
int speed=5;

public cow(){
}
public cow(int a, int b){
this.speed =speed
}}
o/p = 5;  this will reassign speed with global variable value

2. This() can be used to invoke current class construcotr. Suppose there is one default and parameterized constructor. In paramterized constructor
if this() is called. It will invoke default constructor

public cow(){   //default constructor
}
public cow(int a, int b)
this()  ;  //this keyword will invoke the above default constructor
}

3. this can be used to return current class object

public Cow walk(Cow w)
return this;

4. this can be passed as argument in method
walk(this)


21 Static member
Static member is accessed by class name and is a class member
Non static member is accessed by object. Non static member is a object member


public class Example1{

int i=5;
static int j=10;

public void test1();
public static void test2();
	

Example1 ex=new Example1();

ex.test1();
Example1.test2();
Example1.j;  

}


22. return type

public example1 test7(){
return new example1;   //returning object obj, Example1 obj = new Example1();
}


23. Local and Global variable
local variable - within a method is local variable; cannot be accessed outside. Cannot be access by object reference
global variable - outside method, can be access by other methods

24. Access modifier
			same class 			same pkg subclass			outside package(through inheritance)   outside pkg(no inheritance)
public 			Yes				Yes								Yes			Yes
private			Yes				No								No			 No
protected		Yes				Yes								Yes			 No
default			Yes				Yes								No			 No


25. Method overloading
1. allow us to create more than one methods with same by changing argument type.
2. known as compile time polymorphism

Arguments can be different like
public void test();
public void test(int a, int b);
public void test(double a, double b);


25.1 Compile time polymorphism
Is method overloading, while compiling java knows which method is being accessed


26. Method overriding?
1. allows us to create same method in both parent class and child class with the same set of arguments
2. known as runtime polymorphism
3. Methodoverriding happens only with inheritance, when child class extends parent class
4. we have parents class and child class extends parent class. If object of child class is created, the method of child class is called

26.1 dynamic polymorphism
Is method overriding, only while running the program which method should be accessed
suppose reference of super class is pointing to new object, method from parent class is accessed
if reference of sub class is pointing to new object, overriden method in child class is accedssed


21. Inheritance in Java
Through inheritance child class can access all non static members of parent class
we cannot inherit Static members, private and Final


22. Interface
Interface has only unimplemented methods
by default methods and variables in interface are - public static final
we call interface as 100% abstract
multiple interface is possible
we cannot create object of interface or constructor of interface since it is unimplemented
keyword is implements

	
23. Abstract class
abstract class has both implemented and unimplemented methods
cannot create object or constructor of abstract
we can create reference of abstract class
abstract class abstract in the name
remember keyword is extend as we are extending class and not interface


public abstract class abstract1{  					public subclass implements abstract1{
										@Override	
public abstract void test();	
									public void test(){
publiv void test1(){										syso("ddd)
}}											}
											@override
											public void test1(){
											syso("aaa");
											}
										abstract1 abc = new subclass();
										abc.test();
										abc.test1()
										}


24. Difference between abstract and interface@findby@

Abstract
1.methods, members can be of any visibility like public,private,protected,default
2. inheriting an abstract class, should create concreate methods in subclass
3. class extends abstract class, can lower the visibility lke from default to public



Interface
1. methods , members should be public by default 
2. class inherits interface need to implement all methods
3. interface A implements interface B - not required to implement all methods
4. class extends another single class , class implements multiple interfaces
5. class implements interface, should have the same visibility for the methods and members

publlic class class1 implements interfaceA, interfaceB, interfaceC


25. Exception handling
its an event that disrupts normal flow of instructions

Object --> Throwable class --> Exception or Error   ---> Check and Unchecked Exceptions

1. Exception - i.) Checked exception - Compile time exceptions   - extends throwable class
			IO Exception	
			SQL Expception
			Clasnotfoundexception

	       ii.) Unchecked Exception - Runtime exception         -the class that extends runtime exceptions
			Arithmetic Exception
			Arrayindexoutofbound exception
			Null pointer exception

2. Error - error comes program will terminate  - AssertionError, outofmemory


26. Arithmetic exception - 9/0

27. Nullpointerexception - usually comes due to variables not initalized properly

28. Outofmemory error - is when the array variable is infinite loop  or assigning more space to a data type more than it can take

29. Numberformatexception - when trying to convert String value to integer,double,float etc

30. Filenotfoundexception -> when path is not correct

31. classnotfoundexception -> trying to register a class and it is not availabel, class.forname("class1") 

32. arrayindexoutofbound - if array index is more than what is declared

34. Nullpointerexception - trying to supply null vlue as argument will throw nullpointerexceptions  (Fileinputstream fs = new fileinputstream(null))

35. illegalstateexception - if it is closed and again used to go nextline. then we get illegalstateexceptions
	Scanner sc = new Scanner();
	sc.nextLine();
	sc.close();
	sc.nextline();


36. interruptedexception - when we write thread.sleep(100) in between which iterrupts the code we get this exceptions

37. How to handle exception -  by using try catch block

38. is it possible to catch particular exception in catch block?
Yes

39. Is it possible to write multiple catch blocks?
Yes

40. Exception e
e.printstacktrace();

41. Need to write exception e at the end, catch other exceptions before exceptions

42. Throw in Java - if we need to delivberately throw exceptions

throw new skip exception("sss");

43. Throws - method is capable of throwing exceptions
public void test(int age) throws arithmeticexception


44. Finally block -  Always be executed at the end , afte try catch block

45. Finally will be executed even if you have return statment in try block

46. Collection framework - Combincation of class and interface

Iterable  --> Collections (interface)  -->   i.) Set (interface)   -> Hashset, linked hashset  (class)
				
				
					     ii.) List (Interface) -> Array list, Linked list  (class)

				
				             iii.) Queue (Interface) -> priority queue  (class)



ArrayList:
1. Dynamic array - it can grow and shrink as per need
2. Allows to store duplicate values
3. store value is indexed
4. daata retrieval is fast

List list = new ArrayList[][];

list.add("aaa");

47. Linked list is same as array list, only thing data retreival is slow

48. What is Iterator?
Iterator is an interface
It is used to iterate through the data
3 methods in Iterator, it.hasnext(), next(), remove()

49. List iterator is same Iterator. But can go backwords. has 2 additional methods hasprevious() and previos()

50. Set class will take only integer data
Set<> set = new Hashset<>();

No duplicate records will be in set, no insertion order maintained

51. Linked Hashset is same as Set, but only difference is it will maintain insertion order.


52. HashMap - Store data in key value pair. No duplicate data will be stored

Map<> map = new Hashmap<>();
map.put(City, london);

53. LinkedHashmap same as Hashmap. Only difference is insertion order is maintained

54. Treemap will store data in ascending order

55. Diffeernce between Hashtable and Hashmap - Hashtable is thread safe.(it can take null value)


56. Difference between == and .equals()
== opertaor checks for the reference
.equals() compairs the content

String s1 = new String("HELLO");
String s2 = new String("HELLO");

s1==s2;       -> compares the reference of object and it is not same and hence return false
s1.equals(s2) -> compars the content Hello


57. Clas type comparison

compares the content in object reference,

Thread t1 = new Thread();
Thread t2 = new Thread();
Thread t3=t1;

String s1= new String("New");
String s2 = new String("New");

syso(t1==t3);   // true as reference is equal 
syso(t2==t1);  //false as reference is not equeal
t1.equals(t2);  //false as no content to compare
s1.equals(s2); //true as content matches


58. Data type comparision and variables - 

== acts like content comparison, just like .equals() in class type comparison

10==20 ;   false
'a'=='b';  false
'a'==97.0;   true  it checks for content and 'a' ascii value is 97
true==true; true  



59. String is immutable, Stringbuffer is mutable. We can use append method to add string value using Stringbuffer

60. Stringbuilder class is mutable and is thread safe. multiple operations on this class will not throw error.


61. 

----------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------Interview Naveen Selenium---------------------------------------------------------------------

1. What is Automation testing?
Process of testing the source using Automation tool and finding bugs. (Stress the point finding bugs)

2. What are the benefits of Automation testing?
1. Saving time and cost
2. Resuability of code
3. Easy reporting
4. Lo cost maintenance
5. Compatibility testing canbe automated.
6. Used for regression testing

3. What type of	tests you have automated?
1. Regression testing
2. Smoke and Sanity testing
3. E2E possible for few projects


4. How many testcases have you automated per day so far?
Avg 2-5 test scenarios, sometimes if complexity and steps are more, Have automated 1 tc per day

5. What is a framkework?
Is a set of rules or best practices created in Automation testing an application. By provisioning for different components like
test cases, data, properties file, Reporting and other utility files
ex: Hybrid framework, Data driver, keyword framework

6. Have you created any Framework
Yes I have created frameoworks from scratch. I ahve also contributed in redesigning existing frameworks

7. Why do you prefer Selenium Automation tool?
1. Free and Open source
2. Support communities
3. Supports cross browser testing
4. Supports different platforms
5. Supports different languages
6. Easily integrated with Maven, ANT, Jenkins, Auto IT


9. What is Selenium?


10. Disadvantages with Selenium
1. No Webservice testing
2. No mobile testing
3. No window based application testing


11.What are various components in Selenium
1. Selenium IDE
2. Seleium RC
3. Selenium webdriver
4. Selenium Grid

12. What is selenese?
Language used to wrtie test scripts in  SeleniumIDE

13. Which is the browser supported by Selenium IDE
Firefox

14. What is selenium Webdriver?
Selenium 2 or 3 used to automate browsers

15. What is selenium grid?
Execute scripts in parallel mode in remote machines

16. When to use selenium grid?
1. For cross browser testing
2. Parallel testing


17. What are the advantages of Selenium
1. Support multi browser testing
2. Supports testing in different platform


18. What is hub in selenium grid?
Hub is the master machine which controls the executions on different nodes

19. What is node in selenium grid?
Node is connected to hub which executes the scripts. One hub can be connected to multiple nodes

20. Different types of webdriver api
Firefoxdriver
Chrome driver
InternetExplorer driver
HTMLUNIT driver
Opera driver
Safari Driver

21. Which webdriver implementation claims to be fastest?
HTMLUNIT driver

22. What are the different programming languages supported by Selenium?
Java
C#
Python
Ruby
Perl 
PHP

23. OS supported by Selenium?
Windows, Linux, Apple

24. What are the Open source frameowrks supported by Selenium?
Test Driven Development TDD - JUNIT, TESTNG
Behavior Driven Development BDD - Cucumber

25. What are the different locators in Selenium?
There are 8 locators (stress)
ID
Classname
Name
Tagname
Xpath
CSS selector
LinkText - If there are multiple elements with the same link text then the first one will be selected
Partial Link Text - same as above, but need to select with partial text. then we use partial link text


26. What is xpath?
Xpath is the address of a webelement. Used to identify Text, Button, Checkbox, image

27. What is the difference between / and // in xpath
/ - for creation absolute xpath - /html/div[1]/div[3]/..
// - relative xpaths - //a[@ID='abc']

28. What is the difference between absolute and relative xpath?
Asolute - Starts from the root till the desired element node
Relative xpath - Starts in between on the html and till the last element of the desired webelement

29. What is the difference between verify and assert?
Assert: Assert condition is false, then execution is halted
Verify: Used in RC, if true or false the excution flow is not interrupted

30. What are soft assert and hard assert?
Soft assertion - Collects all errors and fail the testcase at the end. Will not interrupt the execution
Hard Assertion - Failed hard asert will stop the execution flow and moves on to next @Test.It will throw assertexception for failed tc.	


31. What are verfification points in Selenium?
No default verfication points in Selenium. We use Assertion from TestNG to verify certain page titles or field text

32. How to launch browser using Selenium webdriver.
Driver = new Firefoxdriver(); stress the point to add system.setproperty("webdriver.gecko.driver",path of exe) for Selenium >2.53, no gecko driver in Selenium <=2.53
driver = new chromedriver();
driver =InternetExplorerdriver();
driver = new Safaridriver(); // need to download the extension

33. Is the firefoxdriver a class or Interface
Firefoxdriver is a class, all driver classes implements Interface Webdriver. This is called dynamic polymorphism

driver = object reference and not the object

34. What is the super interface of Webdriver?
supercontext

35. Explain line of code Webdriver driver = new Firefoxdriver();
Webdriver is an interface and driver is the object reference referring to the object created for the class Firefoxdriver, object is new Firefoxdriver();
Class implements the interface. 

Concept is called  dynamic polymorphism or dynamic binding

36. Why do we write this way

Webriver driver = new Firefoxdriver(); instead of Firefoxdriver driver = new Firefoxdriver();
Creating reference object driver for webdriver will support cross browser testing dynamically, no need to rewrite code for different browsers
We can write multiple if else condition with single webdriver reference variable driver
This concept is dynamic polymorphism.

37. What are the different exceptions you have faced in Selenium Webdriver?

Java exception or specifci to seleniumexception
1. Webdriverexception  - browser is not launched properly.
2. Timeoutexception   - if explicit wait or implicit wait time is passed. then it gives this exception
3. NoAlertPresentException
4. Nosuchwindowexception
5. Nosuchelementexception - xpath or id is not valid
6. Staleelementreferenceexception -when dom is changed or not loaded properly
7. Illegalstateexception - writing Webdriver driver = new Firefoxdriver() with out writing system.setproperty with driver exe path or donot mention gecko driver etc


38.  How to login to any site if it is showing authentication popup for username and password?
If username and password is asked in the alert then

syntax: http://username:passwords@url
Ex. http://mubeen85:high@accenture.com


39.What are the waits available in Selenium?

Implicit waits - global wait applies to driver instance
Explicit waits - specific wait for specifc element
Fluent waits -   mechanism of polling
Thread.sleep  - static wait, used for debugging purpose
Pageloadtimeout

40. What is webdriverwait?
applied to specifc element until certain conditions are met

41. What is fluent wait?
advance version of explicit wait, it can poll frequenty to see if the condition is satisified

43. how to input text box using selenium webdriver?
 by using sendkeys()

44. how to input text box with out calling sendkeys()?

Javascriptexecutor js = (javascriptexecutor)driver;  type case or convert driver to javascriptexecutor
js.executescript("document.getelementbyid('user').value=test.com")


45. how to clear specific field? 

driver.findelement(by.xpath(//dd).clear());

46. how to get text of a webelement?
getText() method



47. how to get attribute of 
driver.findelement(by.xpath).getattribute("user")

Attributes - type, class, name

48. how to click on hyperlink
driver.findelement(BY.linktext("link")).click()
We can also use partial link text


49. how to submit a form using selenium webdrivers?
driver.findelement(By.xpath()).submit(); or use .click();

50. how to press enter a text box?
driver.findelement(By.xpath()).sendkeys(KEYS.ENTER);  allkeyword options are available with KEYS

51. How to pause a test execution for 5 seconds at a specific point?
Thread.sleep(5000);  //static wait

52. Is selenium server required to run selenium webdriver script?
For selenium grid we need selenium server, if to execute in local. Then no need any servers

53. What is the alternative to driver.get("url")?

driver.navigate.to("url")

54. difference between driver.get and driver.navigate.to()?

Driver.get() - Will wait till whole page is loaded, doesnot store history
driver.navigate.to() - will not wait for whole page to load, it stores history

55. Can i navigate to back and forward in a browser?
this can be used navigate method

driver.navigate.forward()
driver.naviagte.back()
driver.naviagte.refresh()
driver.navigate.to(url)


57. How to fetch current page url?
driver.getCurrentUrl();

58. How to maximize browser window
driver.manage().window().maximize();

59. How to delete all cookies in Selenium?
driver.manage().deleteAllCookies();


60. What are the different ways to refresh a browser using driver?

All below methods will refresh the page
1. driver.navigate.refresh();
2. driver.getCurrenturl();
3. driver.navigate.to(url);
4. driver.navigate.to(driver.getCurrenturl())
5. use .sendkeys(KEYS.F5);  


62.What is the difference between driver.getwindowhandle() and driver.getwindowhandles();

driver.getwindowhandle() - It returns unique id of current page window
driver.getwindowhandles(); - To get all window id's, returns Set object

63. What is the difference between driver.close() and driver.quit();

driver.close() - To close current webdriver instance
driver.quit() - To close all windows in a browser


64. What is the difference between driver.findelement() and driver.findelements()?

driver.findelement() - Returns single webelement, return type is Webelement
driver.findelements() - When we need to interact with multiple similar elements, Returns all webelements in a locator in the form List, return type is List<WebElement>

65. How to find whether an element isdisplayed()  on a web page?

1. isDisplayed() - returns the presence of webelement with in the page, return type is Boolean. Used for all kinds of webelements
2. isEnabled() - Verify if particular webelemtn is enabled or disabled. Used for Button webelemtn
3. isSelected() - verify if particular webelement is selcected or not. Used in webelements like radio, checkbox, dropdowns

66. How to select a value in dropdown?
We use Select class

Webelement selectelement = driver.findelement(by.id());
Select s = new Select(selectelement);
s.SelectbyIndex(Index);
s.selectbyvisibletext(Text);
s.selectbyvalue(value)


67. How to capture screenshot inSelenium webdriver();

By using screenshot interface and .getscreenshotas() method and copy to required location using FileUtil class


68. How to mouse hover on a webelement using Webdriver?
Webelement ele = driver.findelement(By.xpath());
Actions act = new Actions(driver);
act.movetoelement(ele).build().perform();

69. How to handle webbased popus?
driver.switchto.window(); using driver.windowhandle() or windownhandles()


70. How to handle windoe based popup?
Window  based popup can be handled using AutoIT or Sikuli, seleniu doesnot support

71. How to handle hidden elements in Selenim Webdriver?
 Need to use Javascriptexecuter

javascriptexecutor js = (javascriptexecutor)driver;
js.executescript("return document.getelementclassname(locator).click()");


72. How to find broken links in webpage?
/?


73. How do you read data from excels?
Apache POI API

74. Is it possible to automate captcha?
No

75. List some scenarios which cannot be automated using selenium?
1. Bitmap  comparison, image comparisons, pdf comparison, image validations, doc validations
2. CAptcha images cannot be automated
3. Windows OS based popups
4. Barcode validations cannot be performed
5. Third party componenets like Calenders

78. What is object repository in Selenium webdriver?
No default object repository in selenium, it is available in QTP

We can create object repositories with the help of properties file.

79. How can use recovery scenario in Selenium?>
try catch block

80. How to upload file in selenium?
Use sendkeys(path of file) or use AUTO IT
this will work if the Browser button has - type attribute "file"

81. How to run Selenium Webdriver Test from command line?

ans: to run Class A from CLI
cd projct path
javac A.java
java A.java

82. How to run Testng from CLI?

java org.TestnG.TEstng "path of testng.xml"

82. How to switch between frames
driver.switchto().frame(frameid);
driver.switchto().frame(index);
driver.switchto().frame(names);

83. How to connect to database?

Provide the URL, Username and Password, database name
Set the connection
create statements and preparedstatements

84. How to resize browser window? To change size of browser window

Use dimensions class

Dimension d = new Dimensions(480,360);
driver.manage().window().setSize(d)

85. How to scroll webpage down or up using Selenium?
use javascriptexecutor with scrollintoview method to the element that needs to be clicked


86. How to rightclick?

Actions act = new Actions(driver);
act.contextclick(driver.findelement(By.xpath)).build().perform();

Rememebr we use context click for right click

87. How to perform double click?
Action class

88. How tp perform drag and drop
Use Action class


Actions act = new Actions(driver);
act.clickandhold(driver.findelement(By.xpath('draggable')).movetoelement(driver.findelement(By.xpath('droppable'))).release().build().perform();


89. How to highlight element using Selenium?

Using javascriptexecutor


90. Tell me about yourself
Hey, this is mubeen here. I have 9 years of experience and worked all 9 years in QA. Past few years I am involved in automation testing along with Manual and Db testing
Explain project - Good exposure on deisgning frameworks from scratch and also work on existing frameworks.Used selenium webdriver 3.7.0
Good exposure on TDD frameowrks like TestnG, devops tools GIT,Jenkins
Roles and Responsibilites - 



91. What is TestNG?
TestNG(Test next generation) is a framework to write test cases from unit testign to integration testing used with Java.


92. What are the advantages of TestNG?
1. Parallel execution of test methods
2. Allows dependonmethod, dependency can be created between test cases
3. Allows to assign priorities
4. Assertions can be used to compare Actuals and Expected
5. Can use @parameter to testcases
6. Can perform data driven testing using @DataProvider
7. Detailed HTML Reporting
8. Testng listeners to generate custom logs


93. Annotations in TestNG
Prequisites and post condition annotations

@After, @Before, @Test, @DataProvider


94. Structure of Testng.xml

Define xml version and DOCTYPE suite needs to be defined on top
Listeners
Suite
Test
Classes
Class
Methods

95. How to define testng.xml

Create file and copy the xml tags 

96. What is importance of testng.xml?
Heart of TestNG
It is also called runner class
Can pass the parameters
Exclude testcases
Parallel execution


97. What is Assert?
It is verifcation point to check if testcase is pass or fail

Assert.assertequal(ExpectedResult,"abc");


98. What is expectedexception in TestNG?
We can use this keyword to not fail any testcases because of expected exception

99. Disable a testcase in TestnG
@Test(Enable=false)


100. Difference between Abstract and Interface

1. Need to implement unimplemented methods in Abstract class
2. Need to use extend keywords
3. Partial abstraction, will have both implemented and unimplemented methods.
4. Creating object of hdfcbank can access all methods in abstract class and self
5. Bank B = new HDFCbank(); , abstract class reference B can access all its method which are implemented in HDFC.
6. New method in hdfc cannot be accessed by abstract class Bank B, cannot access non abstract class
7. Cannot crate object of abstract class

Code1:
public abstract class Bank{

public abstract void loan(); //abstract method

public void credit(){
syso("ac");
}
public void debit(){
syso("abc");
}
}

Code2:
public class hdfc extends bank{

@Override
public void loan(){
syso("");
}
public void funds(){  //non abstract method cannot be access by Bank B
syso("");
}
}


Interface
1. In Interface, only method declaraion, no implementation for any methods
2. In implementing class, it is mandatory to implement all abstract classes
3. Cannot create object of Car Interface.
4. IN interface, it only have final and static variables.
5. BMW implementing INterface Car, can have non overridden methods too
6. Car c = new BMW(); is possible, but Car c can access only its methods implemented in BMW, cannot access extra methods created in BMW




COde1:

public interface Car{

public void start();
public void stop();
public void refuel();

}
Code2:

public class BMW implements car{
@Override
public void start(){
syso(abc);
}
@Override
public void stop(){
syso(abc);
}
@Override
public void refuel(){
syso(abc);
}}



101. Constructors

1. Constructor name should be same Class name
2. It is not a method
3. Constructor doesnot have return type
4. 

Selenium Architecture: 
														------http server---->
Selenium Client Library  ------send request via-->  JSON Wire Protocol  ------>   Browser Drivers(initialized)          		  Real browseers(line by line all commands executed)
 Rest webservice API's for		<-----------resposne with error or pass-------------------------	<---http server--------
 Ruby	
 C#
 Java
 PHP
 Perl
 node.js




102. Can we overload Main method

Yes, Main method can be overloaded by it is important to have below method for JVM to run the program

public static void main(String[] args){
}

Concept1: multiple main method in same Class
-------------------------------------------

public class MainOverload{

public static void main(String[] args){
system.out.println("Main method1");
main("Testing");
main(1);
}

public static void main(String args){
system.out.println("Main method2");
}

public static void main(int a){
system.out.println("Main method3");
}
public static void main(int a, int b){
system.out.println("Main method4");
}

}

o/p -
Main method1
Main method2
Main method3

Note: Main method4 will not be called since in main(String[] args), main(1,2) similar method not called
It is important to have the patter (String[] args) for JVM to start the program

Concept2: Calling a main method in Class A to main method in Class B
---------------------------------------------------------------------

public Class A{

public static void main(String[] args){
system.out.println("Main Method1");
B.main(args);
}}

public Class B{
system.out.println("Main Method2");
}

o/p - 
Main method1
Main method2


103. Why is String Immutable and FInal?

Strings are Final and Immutable, values cannot be changed

Reason 1:
1. If Strings are mutable then suppose
 String s1 ="java";
 String s2 = "java";

Later,
 s2="C++";

then s1,s2 will change. Hence String is made Immutable and Final so that values do not change

Reason2:
2. Security: For security reason, String cannot be changed. Suppose hacker tries to change the authentication string value.
This is a risk, hence made String Immutable

Reason3:
3. Class loading mechanism:
VAlue cannot be changed

4. Optimization and performance:
When String is assigned a value then a hashcode is generated. If String was mutable, then it would internally created multiple
hashcodes. To avoid this String is immutable hence only one hashcode is required.


104. Why is String Final

String is Final, so that values will not be inherited when method overriding or overloading happens


105. What are wrapper classes?
Integer, Long, Double, Float are wrapper classes

106. Are wrapper classed immutable and final like String?
Yes, they are immutable too

107. What is the difference between jdk 1.5 and new version?
1. Strings and other wrapper classes were not immutable in jdk 1.5 and lesser
2. JDK 1.5 and lesser version was non generic, however newer versions are generic

Generic - when we create an object of ArrayList(), we declare the data type also so that only that particular data types can be 
added. This was not available in older version

Non Generic - jdk 1.5
---------------------
For ex: ArrayList arr = new ArrayList();
	arr.add(10);
	arr.add("abc");

Generic - jdk 1.8
-------------------
For ex: ArrayList<Integer> arr = new ArrayList<Integer>();
	arr.add(10);
	arr.add(20);
Note: Only integer type can be adde

Non Generic - jdk 1.8
----------------------

if we try to create object of arraylist in non generic type, then it will show a warning but still we can do it



108. More infor on  why String is Immutable.

String s1 = "java"
String s2 = "java"
String s2 = "Selenium"
Both s1 and s2 will have same id. s3 will have different id

String s1 = "java"
String s2 = "jira"
s2 will have different id when compared to s1. That is why strings are immutable. If it had been mutable then when s2 values changes
automatically s1 value also would have changed


109.  Why WebDriver driver = new ChromeDriver()?
This concept is dynamic polymorphism. If we had written driver for each browser driver class separately then we should write the driver code
multiple times. Inorder to avoid this we use Why WebDriver driver = new ChromeDriver()?

FirefoxDriver driver1 = new FirefoxDriver();
ChromeDriver driver2 = new ChromeDriver();    ----these 2 lines are wrong practice



110. What is the difference between Sanity Testing and Smoke Testing/Shakedown testing

Ans:

Smoke Testing:
1. When a new build is deployed, this activity is performed by testing High priority testcases to ensure that build is testable.
This is similar to Shakedown testing

Sanity Testsing:
1. When any fixes are deployed, sanity testing is performed which is a high level regression tetsing to make sure the new
code fix did not break any existing functionality. Usually no separate testcases are involved in Sanity test


111. Important
Can we override a static method?

No we cannot override a static method, we can overload a static method. Suppose child class extends a parent class and one of the method in parent
class is static, it cannot be overriden in child class because of "Method Hidding" concept where the static method is hidden from child class
Only non static method can be accessed.


112. What is difference between String Buffer and String Builder

String Builder and String Buffer both are used to make String mutable, as String is immutable

String Builder - Not Synchronized, hence fast, not threadsafe
String Buffer - Synchronized, hence slow, but thread safe

Syntax:
StringBuilder sb = new StringBuilder("mubeen");
sb.append("ali");
o/p-mubeenali

sb.replace(1,2,"nn");
o/p-munnenali  //index 1 and 2 will be replaced

sb.deleteChartAt(0);  //deletes first character
sb.indexOf("m");      //o/p-->0

sb.reverse();  //will reverse string
sb.delete(2,3); //will delete chart at index 2 and 3


------------------------------------------------------------------------By Ashish-------------------------------------------------------------------


Interview Questions:
---------------------

1. Difference between equals() and ==?


== is used to compare two variables or data types
equals() is used to compare two object reference and it values

A s1=new A()
A s2=new A()

s1.equals(s2);


2. Diff between Char[] array and String[]?

String array can hold Strings, Char array can hold only charectors


3.What is Static?
Static is common for all objects

4. Advantage of Static function?
Static function is called when something need not be changed and canbe called using class name

5.Is null a keyword? Yes

6. What is class level variable in Java?
Global variable or Class level variable - declared on top of class, it can be used anywhere with in class
Local variable - declared inside function, can be used only with in function


7. What is default value in boolean
default value is false
static boolean b; output is false


8. What is default value in variable
int i;
output is 0

9.What is default value in object
Comparison c;
output is null

10.Difference between string and string buffer class?
String creates new object each time a change happens to it
String buffer appends values, it doesnot change the object 


String s="hello"
s=s.substring(0,1);

StringBuffer buff=new StringBuffer();
buff.append("A");
buff.append("B");
syso(buff);

o/p - AB



11.What is final
final int i=0;

Value of i can never be changed

Variable, function and class can be final

12.differnce between throw and throws
throw is used to deliberately throw an exception

throw new SkipException("Skipping");

throws -  Thread.sleep(5000); should be put inside try and catch block, if you dont need to do it. We can add throws which says it is capable of throwing
exception


13. Class.forName(driver). It creates an object for driver. Used in jdbc

14. When using FileInputStream, what is written in Finally block?

FileInputStream connection needs to be closed in finally block
if in jdbc, the connection needs to be closed in finally block

15. Abstraction and Interface -> Abstract class can be extended and completed

1. Interface Clss is 100% abstract
2.a Abract class implements Interface class,and  not all functions are built completly.
2.b Class implements intergace class if all functions in Interface class is built
3. Class extends the 2.a or 2.b and also functions are complete

Interface: Phone class
ClassA: Landline implements Phone class
ClassB: Samsunglandline extends CLass A


public interface phone(){   //100% abstract

public void call();
public void text();
public void internetconn();
}


public abstract class landline implements phone{    //partially abstract
@Override
public void call(){
syso("calling")
}
@Override
public void text(){
syso("texting")
}

}


public class samsunglandline extends landline{
public void call(){
syso("calling")
}
public void text(){
syso("texting")
}
public void internetconn(){
syso("internet")
}
}


public clas client{

Phone p1=new Samsunglandline();
p1.call();
p1.text();
p1.internetcon();

}
}


o/p
p1.call();  - from landline
p1.text();  - from landline
p1.internetcon(); - from samsunglandline will be executed


We cannot create object of abstract class, we can create object of class which is completely built.


In selenium

Interface ->  Abstract class1 ->  Abstract class2 ->  Abstract class2  -> finally fully implemented class




15. Overloading -> one function with different arguments

public a(){

}

public a(int a){
}

16. Difference between Abstract and Interface
Interface is completely abstract, Abstract class is incomplete, it will have both implmeneted and not implements functions.


17. WHat is collections?
Arraylist, List, Sets, Hash, Hashmap,Map are collection. It acts as bags to store data. This can store infinite values unlike Arrays
in which we need to provide the maxlimit

Arraylist can hold duplicate elements
Hashset can hold only unique values, same is Set

Hashtable used for key,value pairs
Hashtable<String,String> ht= new Hashtable<String,String>();
ht.put("name","sele");


Hashmap
Hashtable<String,String> hm= new Hashmap<String,String>();
hm.put("name","sele");

18. Difference between Arraylist and Array

Arraylist is dynamically growing, but array cannot.

19. Difference between Hashset and Arraylist
Arraylist can hold duplicate elements, but hashset will hold unique elements

Arraylist has order, hashset has not order

20. What is generic concept in collections
If string is declared in while creating object, then no need to typecast it later. So we declared the data type initally


Arraylist<String> al = new Arraylist<String>();
al.add("bc");
String a = al.get(0);   //no type cast required

Arraylist al = new Arraylist();
al.add("bc");

String a = (String)al.get(0);  //need to type cast if generic concept is not used



21.What is testng?

Testng is centralized controller to do below tasks

1. To run test cases in order
2. To skip test cases
3. To read data from external source
4. Genertae reports
5. Logs and Screenshots during execution



22. what is annotation
predefined metadata attached to function.

@BeforeSuite
@Beforetest
@Beforemethod
@Test
@AfterSuite
@Aftertest
@Aftermethod
@Dataprovider


23.Differnce between verify and assert
If assertion fails > flow stops
we can validate actual vs expected value and pass/fail accordingly

If verfy fails > flow doesnot stop


24. Tell me login page script

1. create a login test case in testng
2. create a data provider with parameters username,password and browser type
3. assign the data provider to test case.


25. what are issues in Testng
index.html reports are not impressive, so we need to use ant or maven to create makexslt report/surefire reports

26. Execution order in Testng

For multiple test cases in one class,
1. Based on alphabetic order of function name.
2. This can be reorderd based on setting priority


If test cases in different classes,
1. Testng.xml file should be updated in order of which test class should executre in order


27. Difference between include and exlude in testng?

In testng.xml,
we can add methods like <include name>="test1"
we can add methods like exclude name>="test2"

Based on this, test cases will be executed. Else we can use Skip exceptioon to exlucde few test cases

28. How to run single test case in testng.xml
We can use the include function in testng.xml. Or play around with run mode in xls file


29. What is difference between packages and classes
class resides inside package

30. What is the difference between @parameters and @dataproviders

In testng.xml
<parameter name="myname" value="mozilla"/>

this parameter can be declared in testcase

@Test
@paramter("myname")
public void test(String myname){
}

Alternative method to Dataprovider

not preferable

31. Differnce between Seleniumand QTP

1. QTP is paid and selenium is free
2. Selenium only for webbased, QTP is windows and webbased
3. QTP can run from any step, not available in Selenium


32. Selenium is not supporting mobile app, need to use appium

33.Limitation of IDE
1. Only work on mozilla
2. No reports
3. can be used only for simple web app


Webdriver limitation
1. Only works on fresh browser
2. 

33. Differnce between Selenium1.0 and Selenium2.0
Selenium 2.0 -> Webdriver
Selenium1.0 -> RC Uses Server


34. What is webdriver?
Webdriver is an interface

Firefoxdriver, Chromedriver classes implements the interface

35. Architecture of WebDriver?
1. Webdriver is an interface
Firefoxdriver, Chromedriver classes implements the interface


2. Has major functions like findelement and webelement

Findelement helps to find the element
Webelement function can be used to click, clear, getattribute, gettext, getsize etc

3. Actions class to similutate mouse

4. Javascriptexecutor -> This interface can help in execute javascripts directly


36. how to identify elements

We use command. driver.findelement
to indetify elements - We use BY class. Id, tagname, name, xpath,classname, css selector


37. Whent to go for xpath?
when you cant find id or names

38. Differnece between id and name?
different locators


39. How to handle dynamic objects in selenium?

if xpath changes use other ways

1. Use other attributes
2. Use patterns in xpath
3. Sometimes id has a pattern, use starts-with or contains funtion in xpath



40. Locators in Selenium

Id, xpath, name, css selectors are part of BY class which are known as locators

41. default timeout for selenium?
close to 0. Need to give implicit or explicit waits to over come this issue

42. when to use implicit and explicit

implicit wait - global time out - used for driver.findelements
explicit wait -  for speacial pupose, until page is loaded or selenium recognizes the element



43. How to handle Ajax based application in webdriver?  //Ajax is growing dropdown while searching in google


1.Need to use explicit waits
2. Sometimes selecting from dropdown does not refresh page, so we need to sendkeys(KEYS.ENTER) to refresh page


44. How to handle multiple windows
1 Every window has unique window id. Use Sets iterator to switch to windows and close the unwanted windows


45Difference between findelement and findelements/
1.findelement finds the first element based on given criteria
2. findelements wil extract all of the elements and put in a list


46. How to handle alerts
Alert al = driver.switchTo().alert();
al.accept();
al.close();



47. How to take screenshot in selenium
There is a class TakeScreenshot

File screenshotfile = (TakeScreenshot)driver. getScreenshotas(Output.file);
Fitleutils.copyfile(screenshotfile , path)



48. How to handle bitmaps in Selenium?
not possible in Selenium


49. How to upload/download files in Selenium?
downlaod file - watch mod15/16
Upload file - driver.findelement(By.xpath("uploadbutton"))Sendkeys("path of file")

50. How to check if checkbox is checked or not.

driver.findelement(BY.xpath(checkbox)).getattribute("checked")
True means it is checked
null means not checked


51. How to get value written in text fields

driver.findelement(BY.xpath(textfield)).getattribute("value")

52. How to handle captcha
cannot be handled with Selenium


53. How to run eclipse scripts from cmd by Ant?
need Build.xml with targets of compile  and run

Ant compile run


54. How to execute same script in different browser
open browser dynamically


55. How to check if element is visible to human eye?
driver.findelement(By.xpath()).isDisplayed();



56. What is the difference between isElementpresent and isDisplayed()
Function isElementpresent was in RC. not there now.


57. How to test flash images in Selenium?
Yes,

58. How to check if element is present in multiple page

Use isElementpresent function, which checks the size of list of elements. if size greater than 0 then element is present


59. How to select 3rd value from dropdown

Select s=new Select(driver.findelement(by.id));
s.selectByindex(3)


60. Selenium supports https protocal
Yes

61. How to get columns from table?
USe webtable concept

62. Difficulties faced in project?

1. Object identification
2. Ajax components - use explicit waits
3. Xpaths
4. Changing requirements - use properties file to tackle
5. Adding new test under current project - need to update testng.xml, use proper frameworks



63. Which driver allows headless mode?
htmlunitdriver - in this browser is not opened but script is executed and output is displayed
HtmlUnitDriver ht = new HtmlUnitDriver();
ht.get("https://google.com")


64. Drag and drop in Web
Use Action class

65. how many types of frameoworks

Data driven   - if Web app is unstable, use this framework
Datadriven and Hybrid  -if  Web app is stable, use this
POM   - if all pages in web app is similar , use this like the amazon.in
Cucumber BDD


66. How to connect db to Selenium?
Use jdbc

67. Tool used for reporting
xslt reports with testng


68. Why did you choose selenium

1. It is open source
2. platform independednt
3. can be integrated with jenkins
4. Support available 
5. Stable
6. Can execute scripts parallely


69. Difference between JS and Java
JS is understood by browser
Java is compiled language, it gets converted to class file and class file gets executed
Core of selenium is made in JS


70. Data Driven Framework Explanation


					Testng.xml

	Suite A								Suite B
	Test1								Test3
	Test2								Test4


			GetData()		Check Runmode()

	Test Data in xls							Runmodes(Yes/No) in xls



Getdata is a function to get data from Test Data in xls and CheckRunmode is also a function which checks the Runmode in the xls or any other place




71. Hybrid Framework Explanation

XXXXXXXXXXXXXXXXXX 


					Testng.xml

					Keyword class    <---- Keyword xls

	Suite A								Suite B
	Test1								Test3
	Test2								Test4


			GetData()		Check Runmode()

	Test Data in xls							Runmodes(Yes/No) in xls





72. POM Framework explanation

XXXXXXXXXXXXXXXXXXXXXXXXxx




73. Exceptions in Selenium

				Runtime Excepton
					|
				Webdriver Exception
				|							|
		Staleelementreference exception 				NoAlertpresent
		Timeoutexception						Nosuchelement - unable to identify the emlement
		Unreachable browser exception					Nosuchframe exception
		Connection closed exception					Nosuchwindow exception
		IllegalStateException						Elementnotvisible - element not visible
										Elementnotselectable - element is visible but disabled
										Invalidselectorexception - say xpath is not correct and doesnot return webelement
										Nosuchwindow exception
										
				
Staleelementreference exception - element no longer present in current dom
sessionnotfound - webdriver performing action immeiately after the browser is closed
timeoutexception - command did not complete on time, element dint display
webdriver exception - driver performs action immediately after closing the brpwser								
IllegalStateException -  When browser driver exe path is not set using System.setproprty
				

=============================================================================END OF INTERVIEW================================================================

===========================================================================Core Java==========================================================================================

Naveen Automation Labs - Core Java Videos

03092019 - Corejava
----------------------

1. Public is access modifier

2. Is string a data type or class? 
	String is not a datatype like integer,double and boolean. String is a wrapper class which can hold any size of data unlike
float,int, double, char etc. So that is why String is a non primitive data type. But string can be used as a data type

3. Primitive data type - integer, double, char and boolean which can hold specific data size

4. non primitve data type: Array, class (String) etc

5. syso+cntrl space - short for system.out.println()

6. Concatenation is from left to right 

	a=hello
	b=workd
	c=100		
	d=200
	system.print.outln(a+b+c+d)
	o/p - helloworld100200

7. = is the assignment operator, == comparison operator

8. static array 
int i[] = new int[4];
boolean b[] = new boolean[2];

limitation of static array
1. fixed range - to overcome this we use collections, arraylist, hashtable, called dynamic array
2. similar data type - to overcome this we use object array

Object is a class like String
Object is a super class

so,
Object obj[] = new Object[5];

9.2D Array
to see the lenght of rows and columns

	int x[][] = new int[3][5];
	x.length = o/p 3
	x[0].length or x[1].length = o/p=>5


10. What is class?
Class is an entity with different properties, variables and methods that defines the class

11. Class and Object explanation with examples

  In below code, new Car() is the object and 'a' is the reference to the object 
a is object reference variable pointing to the new Car() object created with the class Car

like, human is class, object is body, mubeen is object reference variable to my body

Code:
Class Car{

int mod;
int wheel;

public static void main(String args[]){

Car a = new Car();			
Car b = new Car();

a.mod = 2015;
a.wheel = 4;

b.mod = 2016;
b.wheel = 4;
}}


12. Object reference explanation

Suppose,
a,b,c are object reference variable to objects O1,O2,O3

a--> O1		b--> O2 	c--> O3   //here O is the object

a=b;

a--x--> O1	b and a--> O2

b=c;

a--x--> O1	a--> O2		b and c --> O3

c=a;

a--x--> O1	a and c--> O2		b  --> O3  //O1 has no refernce at all


a.mod=10;
system.out.println(a.mod);
c.mod=20;
system.out.println(a.mod);
system.out.println(c.mod);

O/P =>
10,20,20

13. Functions - Non static

  When created an object of a class, the object gets a copy of all nonstaic methods created in the class which
can be accessed by object reference dot method name

   if obj.test() will return a value it can be assigned like below
    int a =obj.test();

Syntax:
public class NonFunc{

public static void main(String args[]){

NonFun obj = new NonFunc();  //this object gets a copy of all nonstatic methods in the class NonFunc
obj.test();
int l = obj.test1(); 		//this is how you assign obj.test1() the value that got returned
system.out.println(l);
int n = obj.test2(2,3);
system.out.println(n);
}

public void test(){
system.out.println("test method");
}

public int test1(){
system.out.println("test1 method");
int a=10;
int b=20;
int c=a+b;
return c;
}

public int test2(int i, int j){
system.out.println("test2 method");
int k=i*j;
return k;
}

}

O/P =>
test method
30
6


14. Global variable vs Local variable

	Global Variable									Local Variable
	----------------								---------------

1. Global variable is initialized inside class                                  1. Inititalized within main method/local method

2. main() method can access global variable by 					2. Scope of local variable limited within main/local method
creating a object of the class, when object is created
it creates a copy of all non static methods 
and variables within the class

3. Scope of global variable through out program, 				3. Scope of local variable only with in main method/local method
										where ever it is defined. 



Syntax:
public class LocVsGlob{

int a=10;  //global variable

public sttaic void main(String args[]){

LocVsGlob obj =new LocVsGlob();
system.out.println(obj.a);  //this is how to access global variabl
obj.test();  //o/p = 10

}

public void test(){
int j=10;
system.out.println(j)
}
}

15. Method overloading - creating methods with same name, different parameter with in same class

Features of method overloading:
1. Methods with same name but should not have same no.of arguments
2. Methods with same name are created within the class
3. Methods with same name and same no.of parameters with different data type is allowed
4. IMPORTANT: EVEN MAIN() METHOD CAN BE METHOD OVERLOADED IF IT USES DIFFERENT PARAMETERS. (NOT USED BUT FOR INTERVIEW QUESTION)


public class methodoverloading{

public static void main(String args[]){
methodoverloading obj = new  methodoverloading();
obj.test();
obj.test(10);
obj.test(10,20);
}

public void test(){
system.out.println("Method with no param");
}

public void test(int i){
system.out.println("Method with 1 param");
}

public void test(int i, int j){
system.out.println("Method with 2 param");
}}


16. What is Static and Non Static

Static variables and functions can be accessed 
			i.) by its name directly or classname.variable or classname.staticmthodname
			ii.) has separate memory location in class and can be access directly.
			iii.) also by object reference variable, but it is not good practice	 
			iv.) No need to create object and use object reference variable to access those variables and
			 methods unlike non static method/variables

Syntax:
static int i=10;
classname obj = new classname();
obj.i; //can be access like this..but not good practice better to call directlyS

Code:
public class staticvsnonstatic{

int i=10;
static int j=20;

public static void main(String args[]){
staticvsnonstatic obj = new staticvsnonstatic();

system.out.println(obj.i);
obj.test();

system.out.println(j); or system.out.println(staticvsnonstatic.j);
test2(); or staticvsnonstatic.test2();

obj.test2(); //THIS IS POSSIBLE , BUT NOT GOOD PRACTICE INTERVIEW QUESTION
}

public void test(){
system.out.println("Non static method");
}

public static void test2(){
system.out.println(" static method");
}}


17. Wrapper Class - Integer, SHort, String are wrapper class which are objects with more memory than primitive data types like int,char,double,short
Wrapper class objects used for data type conversions and also used in collections api
Ex. in collections, ArrayList<Integer> i = new ArrayList<Integer>(); is used

Below are static classes
Integer, String, Boolean, Double

String i="100";
int j = Integer.parseint(i);

String k="100.13";
double l = Double.parsedouble(k);

String x="true";
boolean y = Boolean.parseboolean(x);

int a=100;
String a1 = String.valueof(a);  //note:-different method from others

String i1="100A";
Integer.parseint(i1);   //will give NUMBERFORMAT EXCEPTION BECAUSE IT IS ALPHANUMERIC AND CANNOT BE CONVERTED TO INTEGER - INT3ERVIEW QUESTION


19. What is callbyvalue and callbyreference

Call by value								Call by reference
--------------								-------------------			
1.Call by Value means calling a method with a parameter as value. 	While Call by Reference means calling a method with a parameter as a reference. 
2.Through this, the argument value is passed to the parameter.		Through this, the argument reference is passed to the parameter.
the modification done to the parameter passed 				the modification done to the parameter passed are persistent and 
does not reflect in the caller's scope					changes are reflected in the caller's scope.
3. Java uses call by value only

callbyvalue 
-----------
public class CallyByValue{


public static void main(String args[]){

int x=10;
int y=20;
CallyByValue obj = new CallyByValue();
obj.test(x,y);
system.out.println("x and y value doesnot change"+x+""+y); //x and y value not changed because only a copy of x and y is send to method as parameter
								and any change inside method is not going to affect x and y					

}

public void test(int a, int b){

a = 30;
b= 40;
return a+b;
}

}

o/p -
10,20 - no change

CallByreference
----------------	
public class CallyByReference{

int p=10;
int q=20;

public static void main(String args[]){


CallyByReference obj = new CallyByReference();
system.out.println(obj.p +""+obj.q); 
obj.swap(obj);

system.out.println(obj.p +""+obj.q); 
								
}

public void swap(CallyByReference t){

int temp = t.p;
t.p= t.q;
t.q = temp;
}}

o/p 
10,20
20,10


20. Inheritance
Child class can inherit properties of Parent or super class but not vice versa. Also child can inherit properties
of grand parent class - All by using extend keyword

21. Method overriding or Polymorphism - 
Same method name with same no.of arguments in Child and Parent. An object of Child created
will take method from Child and not parent. this is method overriding


public car{

public void start(){
system.out.println("Car class start");
}
public void stop(){
system.out.println("Car class stop");
}
}
-------
public bmw extends car{

public void start(){
system.out.println("BMW class start");
}
public void theftsafety(){
system.out.println("theftsafety");
}
}
------
public class test{

public static void main(String args[]){

bwm b =new bmw();
b.start();

}
}

o/p - Start method from child class takes precedence.

Above is also known as compile time polymorphism or static polymorphism


----------------------------

Dynamic polymorphism or Run time polymorphism: Also called Top Casting
----------------------------------------------------------------------
Even parent class can inherit only overriden properties from child class by creating object of child class and referring to it

Car c1 = new BMW();
c1.start();
c1.stop();
*** c1.theftsafety is not possible***

Parent class can access overriden properties of child class, but not exclusive properties of child class


note: down casting is not possible like  BMW b1 = new Car();  it will give exception

22 - Interface
----------------


USBank(interface) 		UKBank(Interface)    		IndianBank(Interface)
   |		
   |				   | 					|
   |				   |					|
   |----Implements--------------HDFC Bank(class)-------Implements-------

HDFC bank can implement multiple International banks
It should implement all methods from Interface, but child can define the body by itself

Description: Unlike Inheritance, Interface is child class can inherit from multiple parent classes using implements keyword

public Interface ABC(

int a=10;

public void test();
public void testA();
public void testB();
}


Important Features of Interface:
--------------------------------
1. In Interface - Only method declaration
2. Interface is 100% abstract in nature
3. no method body
4. All methods are non static in nature, as Interface is part of Object oriented programming and refering object is non staitc
5. Variables declared always static in nature, not required to use static keyword for variables
6. no main method in Interface
7. Child class implementing interface is mandatory to define all methods in Interface
8. Variable in Interface is default Static, it cannot be changed once defined.

Point: Variables are static and methods in interface are nonstatic by default.

Code:
-------

public Interface USBank(
int a=10;  //Static
public void credit();
public void debit();
}

----------
public Class HDFCBank implements USBank(

public void credit(){
system.out.println("credit");
}
public void debit(){
system.out.println("debit");
}

public void carloan(){
system.out.println("carloan");
}

public void transfermoney(){
system.out.println("transfermoney");
}}

---------------

public class testbank{

public static void main(String args[]){
HDFCBank HB = new HDFCBank();

HB.credit();
HB.debit();
HB.carloan();
HB.transfermoney();

//all above is compile time plymorphism


USbank UB  = new HDFCBank();  //USBank interface can refer to child class - This is dynamic polymorphism
UB.credit();
UB.debit(); 		//UB cannot access carloan and transfer, it can only access the overriden methods in child class


system.out.println(USBank.a);  //Static in nature, call the variable with Interface name, cannot change value. This is static
 
}}

Dynamic Polymorphism and Compile time polymorphism
---------------------------------------------------
1. Dynamic polymorphism is in child class inherits parent class and parent class can access overriden methods in child class
2. Compile time polymorphism is when a class implemnts an interface and interface can access overriden methods in implemnted class


How to implement two interfaces:
-----------------------------------

public class HDFCBank implements USBank, UKBank{

}

--------------------------------------------------------------------------------------------------------------------------------

							Overview of Collection Framework
						      ------------------------------------

Collection is frameowrk in Java to store and manipulate objects

Opertions: searching, deletion, manipulation, sorting


Popular Interfaces and Classes:
-------------------------------
Interfaces in collection API = Set, List, Queue, Dequeue,SortedSet
Classes = ArrayList, Vector, LinkedList, HashSet, TreeSet,PriorityQueue


These are present in Collection Api ready made, no need to write code from beginning for searching, deletion, manipulation, sorting

Java.Util package containes all collection API's

						   Collections: Architecture:
						  ---------------------------
a
							Iterable Interface
								^
								|					
							Collection Interface				//collection interface implementing Iterable
								^								
	                         -------------------------------|------------------------------------------			
				|				|				          |	

			List Interface	         	 Queue Interface			          Set Interface  //interface implementing Collection
  														
													    ^	^	^
				^			   ^	^					    |	|	|	
				|			   |	|					    |	|   HashSet Class
							   |	---------------- 			    |	LinkedHashSet Class
			Array LIst Class		   |		  Priority Queue Class 		    |
//Array, LinkedList					   |		(implement Queue Interface)         |
& Vector implements	LinkedList Class------------       |						    |	
List Interface					    |      |						    |	
			Vector Class		    ---->Dequeue Interface  (Implements Queue Interface)     ---SortedSet Interface
			     ^					^							^				
			     |					|							|
								|						  TreeSet Class
//stack extends vector	Stack Class  			ArrayDequeue Class
							(ArrayDequeu class extends Dequeue)
							(linkedlist also implements Dequeue interface) 



Note:
Class to Class - Extends
Interface to Interface - Extends
Class to Interface - Implements

-----------------------------------

Collections in Details::
------------------------

ArrayList Concepts:
==================

Arraylist can store any number of values with out limit and also of any data type

ArrayList ar = new ArrayList();  //here any datatype can be stored

ar.add("Mubeen");
ar.add(123);
ar.add('M');

system.out.println(ar.size());
system.out.println(ar.get(1));


To limit only 1 data type can be stored using array list
--------------------------------------------------------

ArrayList<String> ar = new ArrayList<String>();
ar.add("Mubeen");

ar.remove(0);
will remove data in 0 index


Static array is size is fixed
int a[] = new int[4];  //if we try to add 5th element, it will throw arrayoutofboundexception

Dynamic Array - Array list

Properties of ArrayList:
--------------------------
1. it can contain duplicate values
2. No limit, any number of data can be stored
3. Maintains insertion order, index is based on how data is added
4. It is not synchronized, (that is why it is slow compared to other collections)
5. Allows random access of values in any index
6. Implements List Interface
7. ArrayList is slower when the size increases





To print all values in ArrayList:
------------------------------------

1. For loop
2. Using Iterator

for(int i=0; i<ar.size();i++){
system.out.println(ar.get(i));

}

Generic vs Non Generic Concepts
-----------------------------------
In JDK 1.5 and greater, we have generic and non generic concepts, before JDK1.5 Generics was not supported

ArrayList ar = new ArrayList();

ar.add("mubeen");  it will show a yellow line warning. this is non generic because data type is not defined


ArrayList<String> ar1 = new ArrayList<String>();
ar1.add("ali");   //no yellow line warning, this is generic as data type is defined as String


How to use iterator and class objects in Array List
------------------------------------------------------

public class Employee{
String name;
int age;
String dept;

Employee(String name,int age, String dept){		/constructor
this.name = name;
this.age = age;
this.dept = dept

}}
---------------------

public class Arralistconcept{

public static void main(String args[]){

Employee e1 = new Employee("Mubeen",33,"QA");
Employee e2 = new Employee("Ali",32,"Test");
Employee e3 = new Employee("Munnu",34,"KP");

ArrayList<Employee> ar = new ArrayList<Employee>();			//data type is class object type

ar.add(e1);
ar.add(e2);
ar.add(e3);

Iterator it = ar.iterator();

while(it.hasNext()){

Employee emp = it.next();
system.out.println(emp.name);
system.out.println(emp.age);
system.out.println(emp.dept);

}}
}
---------------------


AddAll() Method in array list
-------------------------------

To add all the data in one array list to another arraylist

ArrayList a1 = new ArrayList();
a1.add("mubeen");
a1.add(21);

ArrayList a2 = new ArrayList();
a2.add("munnu");
a2.add(31);

a1.addAll(a2);

all values in a2 arraylist will go to a1


removeAll() Method:
---------------------
ALl ar2 data from ar1 will be removed

ArrayList a1 = new ArrayList();
a1.add("mubeen");
a1.add(21);

ArrayList a2 = new ArrayList();
a2.add("munnu");
a2.add(31);

a1.removeAll(a2);


retainAll() Method:
-------------------

TO see the common data between 2 array list


ArrayList a1 = new ArrayList();
a1.add("mubeen");
a1.add(21);

ArrayList a2 = new ArrayList();
a2.add("munnu");
a2.add("mubeen");
a2.add(31);

a1.retainALl(a2);

O/p => only common daata will be printed, in this case it is mubeen





----------------------------------------------

LinkedList Concepts:-
=====================

LinkedList is a class which implements List Interface and Dequeue Interface, refer architecture above


Singly Linked List:
-------------------

Contains Head, data/next, 


	 Head
	  |
	  V
	Data|next ----------->	Data|next  ---------> Data|next---------|[[ null			//last next points to null


Sample:


	 Head
	  |
	  V
	10 |next ----------->	20|next  ---------> 30|next---------|[[ null
	node1			node2		    node3

Each and every element stores the reference of next element, not the reference of previous element - it is called singly lined list


Coding:
--------
Features
1. add data in first and last using addfirst() and addlast() method
2. remove data in first and last using addfirst() and addlast() method
3. we can set data using set method
4. we can get data using get method with index
5. use object reference to print the data

LinkedList<String> ll = new LinkedList<String>();

ll.add("qtp");
ll.add("selenium");
ll.add("uft");

system.out.println(ll);

o/p -> [qtp,selenium,uft]

ll.addfirst("RPA");
ll.addlast("GIT");

system.out.println(ll);

o/p -> [RPA,qtp,selenium,uft,GIT]

ll.set(2,"Jenkins");
ll.get(2) 

o/p-> Jenkins

ll.removefirst();
ll.removelast();

ll.remove(2);

//how to iterate in LinkedList
--------------------------------

1. Using forloop
2. Using advanced forloop
3. Using iterator


1. Using for loop

for(int n=0;n<ll.size();n++){
system.out.println(ll.get(n));
}


2. Using advanced forloop //foreach concept

for(String str : ll){
system.out.print(ll);
}

3. Using Iterator

Iterator<String> it = ll.iterator();
while(it.hasnext()){
String st = it.next();
system.out.println(st);
}

----------------------

								Map Interface in Collections
								-----------------------------

In Map, data is stored informat of <Key, Value>

Map<String, String> m = new Map<String, String>();
m.put("name","mubeen");
m.get("name");
o/p - Mubeen

								Map Architechture
								-----------------

					  ---------------Map Interface-------------------------------------
					|			|					  |
					|			|				SortedMap Interface
					|			---------------------			  |
					|					    |			  ----------------------------
					|					    |						     |
				HashTable Class*				HashMap Class* 				Navigable Map Interface
										      |						    |
										      |						Tree Map class
									     Linked HashMap Class


Example of Maps:
1. Error codes
2. Map of zip codes
3. Map of managers and employee
4. Test data storage
5. Config/Environment variables


Methods in Map
1. put()
2. putAll()
3. get(key)
4. containsKey(key) -----> to search if specfic key of not.return boolean
5. remove(key);
6. keySet();	------->return a setview containing all the keys
7. entrySet();  -------> return set view containing all keys and values



HashMap Class
------------

1. Stores value in Key, Value pair
2. it contains only unique elements
3. it can have only 1 null key and multiple null values
4. it maintains no order
5. HashMap is non synchronized.   //very important, if used in multi threading. HashMap objects can be accessed by all objects
					hashmap is used in fast accessing systems
					//not thread safe


What is synchronized and non synchronized
-------------------------------------------

Suppose there is a HashMap that contains key, value pair as 1,A. Multiple objects can access this hash map. Each object accessing the map is called a
thread. So if thread T1 is accessing the Map, until it is released thread T2 cannot access the Map. this is called synchronized. Only Hashtable is 
synchronized. Whereas HashMap
is not synchronized. Because multiple threads can access the hashmap at the same time. Support thread T1 modifies or removes the value. At the same time T2
access the object. This is called Fail Fast  condition or concurrent modification exception. Very important interview question.


HashMap - Non Syncrhonized
Hashtable - Syncrhonized

Problem with HashMap:
-------------------

1. Fail Fast condition or concurrent modification exception**
2. Because HashMap is non synchronized unlike Hashtable
3. Since hashmap is not synchronized, suppose there is hashmap object with key value pair 1,A. And if thread1 tries to access 1,A and tries to remove
the value A. Same time thread2 is trying to access the same object. It will throw concurrent modification exception or called fail fast condition.
This would not happen if it was thread safe or synchronized like hashtable.



Syntax:  
HashMap<Integer, String> m = new HashMap<Integer, String>();
m.put(1,"Selenium");
m.put(2,"UFT");

system.out.println(m.get(1));
system.out.println(m.get(3));  ---> returns null

for(Entry m1 : m.entrySet()){					//in HashMap data is not stored in index, so we need to use entry
system.out.print(m1.getKey()+m1.getValue());
}

system.out.println(m);  			//will show full key value pairs
m.remove(2);   //will remove the record with key 2



CODING for HashMap:
-------------------
Class1:

public class Employee{
int age;
String name, dept;

Employee(String name, int age, String dept){			//constructor
this.name = name;
this.age = age;
this.dept = dept;

}}

Class2:

public class HashMap1{

public static void main(String args[]){

Employee e1 = new Employee("mubeen",25,"QA");
Employee e2 = new Employee("febi",26,"IT");
Employee e3 = new Employee("naz",27,"DEV");

HashMap<Integer, Employee> hm = new HashMap<Integer, Employee>();
hm.put(1,e1);
hm.put(2,e2);
hm.put(3,e3);

for(entry<Integer,Employee> m : hm.entrySet()){

int key = m.getKey();
Employee e = m.getValue(key);
system.out.println(key);
system.out.println(e.name+" "+e.age+" "+e.dept)

}}}


HashTable:
-----------

1. Similar to HashMap
2. but Synchronized
3. Sores in key value pair
4. Key stored inform of object, each key has unique hashcode
5. Hashcode is java object number which is unique, 32bit intger number
6. Hashtable stores value on the basis of the hashcode of the key
7. Hashcode is generated for an object, if we clone exactly same object again it will get the same hashcode
8. Only unique values can be stored, if tried to add value twice. it will take only 1 value
9. No null key and null value

if h.put(name,mubeen) it is like h.put(23322221,mubeen) where 23322221 is the hashcode

Syntax:

Hashtable h1 = new Hashtable();
h1.put(1,"mubene");
h1.put(2,"ali");

Hashtable h2 = new Hashtable();

h2 = (Hashtable)h1.clone();   //it will clone all the vallues in h1 to h2

system.out.println(h1);				//it will display 1 mubeen and 2 ali
system.out.println(h2);				//it will display 1 mubeen and 2 ali

h1.clear();
system.out.println(h1);				//null
system.out.println(h2);				//it will display 1 mubeen and 2 ali


//containsvalue()
Hashtable st = new Hashtable();

st.put(1,"mubeen");
st.put(2,"ali");


if(st.containsValue(mubeen))
system.out.println("Value found")



How to print elements in Hashtable
-----------------------------------

Hashtable st = new Hashtable();

st.put(1,"mubeen");
st.put(2,"ali");

Enumeration e = st.elements();

while(e.hashmoreelements()){
system.out.println(e.nextElement())

}


or print using entry set
---------------------------

Set s =  st.entrySet()){
system.out.println(s);


How to check if both hashtables are equal or not:
-------------------------------------------------
Hashtable st = new Hashtable();

st.put(1,"mubeen");
st.put(2,"ali");

Hashtable st1 = new Hashtable();

st1.put(1,"mubeen");
st1.put(2,"ali");

if(st.equals(st1)
system.out.ptintln("both are equal")


how to get value from Key in hashtable
--------------------------------------
st.get(key)

how to get hashcode hashtable object
--------------------------------------------------
st.hashcode();



Note: All uses generic concept over non generic, where sepecific data type can be stored

Arraylist
1. Unlimited data can be stored
2. Follow indexing
3. Not synchronized

Linkedlist
1. unlimited data can be stored
2. can add data in first and last
3. can access data with index


HashMap
1. Can store only unique key,value
2. not synchornized
3. can access key and value using keyset and entryset
4. Can store 1 null value in key and multuple nulls in value


Hashtable
1. Synchronized, because it uses hash code
2. only store unique value in key,value


HashTree:
displays in sorted format

HashMap h = new HashMap<>();
h.put("b",1);
h.put("a",2);
for(Entry e : h.entrySet()){
e.getKey();
}
o/p - b,a

Hashtree ht = new Hashtree<>(h);
for(Entry e : ht.entrySet()){
e.getKey();
}

o/p - a,b //it will be sorted


----------------------------------------------------------------Advance Collections - Google-------------------------------------------------------------
========================================================================================================================================================


Advanced Interview Questions in Arraylist:
----------------------------------------------

1. How to remove duplicates from ArrayList
-----------------------------------------
Use set, as set cannot hold duplicates. it will remove duplicates from arraylist using below code

Code:

	ArrayList<String> arr = new ArrayList<String>();
		
arr.add("mubeen");
arr.add("ali");
arr.add("mubeen");
arr.add("naznin");
arr.add("naznin");
arr.add("munnu");

//System.out.println(arr.get(0));

Set<String> set = new HashSet<String>(arr);

//arr.clear();
//arr.addAll(set);

Iterator it = set.iterator();
while(it.hasNext()){
	System.out.println(it.next());
}

}
}

o/p - 
naznin
mubeen
munnu
ali


2. How to reverse an arraylist
-----------------------------
Use Collections.reverse(Arraylist)

Code:
ArrayList<Integer> arr  = new ArrayList<>();
arr.add(1);
arr.add(2);
arr.add(3);
arr.add(4);
for (Integer int1 : arr) {
	System.out.println(int1);
	
}

Collections.reverse(arr);


3. What is the difference between Array and ArrayList:
------------------------------------------------------

1. Array is static and ArrayList is dynamic, the size of arraylist can be increased but size of array cannot be changed once set
2. ArrayList uses generics, but array does not use generics
3. Arraylist uses size() where as array uses length();
4. Arraylist cannot store primitives, it can store only objects whereas Array can store both primitives and objects. (int is primitive, integer is object)
5. ArrayList uses add() to simiply add data


4. How to synchronize ArrayList:
-------------------------------

Arraylist and Linkedlist are not synchronized, inorder to synchronize we use external synchronization methor Collections.synchronizedlist()

Code:
	arr= (ArrayList<Integer>) Collections.synchronizedList(arr);
	
	synchronized(arr){
		
		Iterator<Integer> it = arr.iterator();
		while(it.hasNext()){
			System.out.println(it.next());
		}


5. What is the similarity between ArrayList and Linked List:
----------------------------------------------------------

1. Both ArrayList and Linked List implements List interface
2. Both are not synchronized
3. Both maintains insertion order
4. Both can hold duplicates and null


6. What is the difference between ArrayList and Linked List:
------------------------------------------------------------

1. ArrayList is backed by an Array, Linked list is backed by Linked List
2. Apart from implementing List interface, Linked List implements dequeue interface
3. Removing elements from a position in ArrayList is O(n) and in LinkedList is O(n/2) (shortest distance from front or back)
4. Iterating over elements is O(n) in ArrayList and in LinkedList


7.What is similarity between ArrayList and HashSet
---------------------------------------------------

1. Both uses iterator() to traverse
2. Both are not synchronized
3. ArrayList and Hashset are fail-fast, both throws concurrentmodificationexception, when the structure altered in a thread.


8.Difference between ArrayList and HashSet
--------------------------------------------
1. ArrayList implements List interface whereas HashSet implements Set interface
2. HashSet doesnot contain duplicates whereas ArrayList contains duplicate
3. ArrayList maintains insertion order, data can beretrived using get(index) whereas set does not maintain any order
4. Arraylist is backed by Array, HashSet is backed by HAshMap


9.How to traverse through data in ArrayList
-----------------------------------------

1. Using for loop
2. foreach
3.iterator() with While loop


10. What is similarity between ArrayList and Vector
---------------------------------------------------

1. Both Vector and ArrayList implements List interface
2. Both follows insertion order
3. Both ArrayList and Vector is backed by Array

11. What is the difference between ArrayLIst and Vector
--------------------------------------------------------

1. ArrayList is not synchronized whereas Vector is Synchronized
2. Vector is slower than ArrayList because vector is synchronized
3. Vector was initially not part of Collection. Only from java1.4 it is part of collections


12. What is the similarity between ArrayLIst and HashMap

1. Both ArrayLIst and HashMap are not synchronized
2. Both can store duplicate values
3. Both are fail fast type, throws concurrentmodificationexception


13. What is the difference between ArrayLIst and HashMap
1. ArrayList implements List, HashMap implement Map
2. ArrayList stores multiple nulls, HashMap store one null key and multiple null values
3. ArrayLIst uses get(index) to get data, HashMap uses get(key) method
4. HashMap stores value in Key,Value pair unlike ArrayLIst
5. 

14. What is Sublist in ArrayList?
----------------------------------

if we need to list only 1,4 out 6 elements of arrayList then we use SubList

ArrayList arr = new ArrayList<>();
arr.add(1);
arr.add(2);
arr.add(3);
arr.add(4);
arr.add(5);
arr.add(6);

arr.sublist(1,4);

o/p - 1,2,3,4

15.What is difference between size() and length()
---------------------------------------------

Size() uses ArrayList and length() uses Array


16.How to make arraylist read only
--------------------------------------

Collections.unmodifiableCollection()

17.How to swap 2 elements in ArrayList
-----------------------------------------
Collections.swap(arr,1,4);


Advanced HashMap interview questions:
------------------------------------------

1. Retreiving value from HashMap
HashMap<Integer,String> map = new HashMap<>();

map.get(key);


2. How to iterate in HashMap
HashMap<Integer,String> map = new HashMap<>();
Iterator it = map.keySet().iterator();
while(it.hasNext()){
Integer key = it.next();
syso(map.get(key));
}


3. How to get Size and clear HashMap
map.size();
map.clear();

4. HashMap is Synchronized or Not synchronized
HahsMap is not synchronized but HashTable is synchronized and slower


5. How to synchronize HashMap
Collections.syncronizeMap(map);


6. How to check if the key or value is available in HashMap?
Boolean b = map.containskey(21);
Boolean b = map.containsValue("mubeen");


7. How to sort HashMap?
HashMap<Integer,String> unsortedmap = new HashMap<>();
TreeMap sortedtreemap = new TreeMap(unsortedmap);

8.How to remove key
map.remove(key);  //this will remove the record

9. Check if hashMap is empty
Boolean b = map.IsEmpty();

10. what is time taken to fetch value from HashMap
O(1)

11. Important points on how HashMap works
1. Hashmap works on Hashing principle
2. If we know the key, it take O(1) constant time to retreive the value.
3. Data is retreived by get(key) method
4. map.put() method is called, calls hashcode() method and finds a bucket location to store value using the hashcode value
5. HashMap stores vallue in Map.Entry which contains both jkey and value
6. when get(key) method is called, again it generates hashcode and get the associated value from bucket Map.Entry


11. What is Collision in HashMap
When HashMap keeps storing key/value using hashing function, at one point the hashcode will be same for 2 keys. This is called collision.
In such cases data is stored in linkedlist to next node.

12. How to retrive value when collision occurs and 2 keys are having same hashcode
uses keys.equals() method. If key matches, then associated value is picked from Map.Entry bucket
for example, key A and B has same hashcode 12345. Then use keys.equals("A"). Then associated value is pulled from bucket


13. What happens if HashMap is full?
It does rehashing where the new HashMap is created double the size, all values in old HashMap is copied to new HashMap

14. Why is String, Integer good candidate for keys
They are wrapper classes and also immutable. So the valuue of key cannot be changed. hence this will not interrupt in generating the hashcode() function
from the key

15. How null key handled in HashMap?
HashMap uses one null key, hashcode() or equals() method is not used in null. But one null is acceptable in HashMap

16. Will HashMap store null value?
HashMap can store as many null values as required

17. Does HashMap contains duplicate keys?>
No HashMap doesnot contain duplicate key, it will override previous key. You can get all keys using keySet() method
which returns a Set where there is no duplicate key

18. Is HashMap thread safe?
No HashMap is not thread safe as it is not synchronized

19. what happens if multithreaded application uses HahsMap?
it can corrupt the keys and may not fetch the correct data

20. How to remove key in HashMap?
using remove method

code:
HashMap<Integer,String> map = new HashMap<>();
Iterator it = map.KeySet().iterator();
while(it.hashNext()){
Map.Entry list= it.next();

if(list.getKey().equals("mubeen")){
it.remove();
}

}


21. How to iterate in HashMap?
Method1: KeySet()

HashMap<Integer,String> map = new HashMap<>();
Iterator it = map.KeySet().iterator();
while(it.hashNext()){
String key = it.next();
syso(map.get(key));

}


Method2: Using EntrySet

HashMap<Integer,String> map = new HashMap<>();
for(Entry entry : map.EntrySet()){
syso(entry.getkey()+entry.getValue())
}

Method3: Use foreach loop
HashMap<Integer,String> map = new HashMap<>();
for(String key : map.KeySet()){
syso(map.get(key));
}


20. is HashMap Sorted?
No, there is no order in HashMap but we can use treemap and source HashMap inside it to sort it

HashMap<Integer,String> map = new HashMap<>();
TreeMap sortedtreemap = new TreeMap(map);

21. What is load factor in HashMap
It is .75, if the map is 75% then it will rehash


Similarity between HashSet and TreeSet
--------------------------------------

1. Both implements Set interface
2. Bith are not synchronized
3. both are fail fast, throws concurrentmodificationexception



Difference between HashSet and TreeSet
----------------------------------------

1. HashSet is faster than TreeSet
2. HashSet has no ordering, but for sorting we should use TreeSet
3. HashSet accepts null but not treeset
4. HashSet is backed by HashMap and TreeSet is backed by TreeMap
5. 

===============================================================End of Collections===========================================================================

Final vs finally vs finalize
---------------------------

Final:
------
1. Variable -When variable is final, data cannot be modified.
2. Class - When a class is final, no child class can extend the final class.
3. Method - when method is final, it cannot be overridden

1.
final int i=10;


2.
public final class parentclass{

{
public class childclass extends parentclass{

//this will throw error, cannot extend parent when it is final
{


3. When method is final, then cannot override the method

public class parentclass{


public final void start(){

}

{

public class childclass extends parentclass{

public void start(){

}
//cannot override start method, because start method is final in parent class
{


o/p - //cannot override start method, because start method is final in parent class


------------------

Finally:
--------

Finally keyword used with try catch block, finally will be executed after try and catch is executed

public class exception{

public static void main(String args[]){

test();

}
public static void test(){

try{
system.out.println("inside try");
throw new exception("test");

}
catch(Exception e){
system.out.println("inside catch block");
}
finally{
system.out.println("inside finally block");
}
}

}

IMportant interview question on finally
------------------------------------------

suppose exception thrown by try, exception is not able to catch it, try will still execute and throw exception error and then
finally will execute

for example, suppose arithmetic exception if we are trying to catch in nullpointer exception, it will throw the exceptioin
without catching it and then finally will be executed

----------------------

Finalize:
---------

Garbage collector:- clean up memory processing

Suppose there are objects created with no reference, garbage collector will destroy such objects. So finalize method
is a method that runs just before garbage collector destroy all unused objects


public class finalizeconcept{

public void finalize(){
system.out.println("finlize method called before garbage collection")
}

public static void main(String args[]){

finalizeconcept f1 = new finalizeconcept();
finalizeconcept f2 = new finalizeconcept();

f1=null;
f2 = null;
System.gc();
}}


This and Super:
--------------

Constructor - looks like a function, but not a function. It cannot return any value. Constructor name
should be same as class name

Constructor is defining class features while creating an object for the class


Default Constructor or Hidden Constructor:
---------------------

public class constructor1 {

public constructor1(){
system.out.println("Default COnstructor")
}

}


Parameterized Constructor:
---------------------

public class constructor1 {

public constructor1(int i){
system.out.println("single Param COnstructor")
}


public constructor1(int i, int j){
system.out.println("two Param COnstructor")
}

publci static void main(String args[]){
constructor1 obj = new constructor1();   //default constructor is called
constructor1 obj = new constructor1(10);   //single param constructor is called
constructor1 obj = new constructor1(10,20);   //two param constructor is called
}

}



Interview Q: Can we overload a constructor - Yes, we can overload a constructor

How to call a constructor: Constructor willbe called immediately when the object is created


Default constructor is also hidden, so even if we dont write a default constructor it will by default generate

No hidden constuctor for parameterized constructor



Constructor with This keyword:
------------------------------

This keyword is used to initialize class variables(global variable) with the value in local variable by using This keyword

Code:
public class constructorwiththiskeyword {

String name;
int age;


public constructor1(String name, int age){
this.name = name;    //local variable name will be given to global variable name using this keyword
this.age = age;    //local variable age will be given to global variable age this keyword
system.out.println(name,age);
}

publci static void main(String args[]){
constructorwiththiskeyword obj = new constructorwiththiskeyword ("mubeen",33); 

}

}


How constructors are called in Parent/Child classes:
------------------------------------------------------

public class A{

public A(){
system.out.println("parent class constructor");
}
}


public class B extends A{

public B(){
system.out.println("child class constructor");
}

publci static void main(String args[]){
B obj = new B(); 

}

}

o/p-
parent class constructor
child class constructor

What happens the moment object is created for Class B, it will go to B constructor, but before executing B constructor
it sees there B extends A, so it will go check for any constructor in A. Then A constructor executes first and then B constructor


Super keyword: Used to call parameterized parent class constructor
------------------------------------------------------------------

1. Super keyword should be written in child constructor
2. it should be the first statement in the child constructor
3. Super keyword is used to call the constructor in Super class or Parent class
4. only 1 super keyword possible, because super keyword should be always 1st line of code in child constructor

public class A{

public A(){
system.out.println("parent class constructor");
}

public A(int i){
system.out.println("parent class constructor with value"+i);
}
}

---------a

public class B extends A{

public B(){
super(10);
system.out.println("child class constructor");
}

public static void main(String args[]){
B obj = new B(); 

}}


o/p:->

parent class constructor with value 10
child class constructor

1. When object for B class created, goes to B constructor, sees super keyword, goes to A class with the same oparamter,
executes the constructor in A, then comes back to B and execcutes B class constructor

2. first super(10) executes in Class A, then Class B constructor

3. Super gets the importance, 


-------------------------------------------------------------------------

What is Method and Method Overloading
--------------------------------------

1. Cannot create Method inside Main method
2. Cannot create a method inside another method
3. Main method is void because we dont write return statement in Main
4. When program executed, Main method is auto called by JVM
5. Object cannot hold any static method
6. Two method with same name, same params not allowed 
7. Two methods with same name , different params is allowed - This concept called method overloading
8. Method overloading - In same class, functions having different params is called method overloading


------------------------------------------------------------

Difference between Abstract and Interface
------------------------------------------

1. To define abstract class, use abstract keyword
2. In Abstract class, atleast 1 method should be abstract in nature
3. Abstract method, only prototype and no method body
4. Whenever you extend a abstract class, then child class should define the abstract class
5. Not compulsory for child class to redefine again any normal methods in abstract class, only define the abstract method in child class
6. In abstract class, if we have few abstract and few normal methods. then it is partial abstraction
7. A abstract class is 100% abstratc if all methods are abstract
8. Abstraction means hiding implementing logic of a method
9. Abstract class can have abstract methods and non abstratc methods
10 Cannot create object of abstract class
	ex: Bank is Abstract class Bank B = new Bank();  Not allowed


Class1:

public abstract class Bank{

public abstract void loan();  //abtract method. No method body

public void credit() {			//no abstract method
system.out.println("Bank credit");
}

public void debit() {			//no abstract method
system.out.println("Bank debit");
}

}
------------

Class2:
public class HDFCBank extends Bank{

//overriding
public void loan(){
system.out.println("HDFC loan");
}

public void funds(){
system.out.println("HDFC funds");
}


}

--------------

Class3:

public class testBank{

public sttatic void main(String args[]){

HDGCBank hb = new HDFCBank();
hb.credit();
hb.debit();
hb.loan();
b.funds();

Bank b = new HDFCBank();
b.credit();
b.debit();
b.loan();
not possible --> b.funds();

}
}	

--------------------------------

Interface:
----------

1. Interface should be 100% Abstract
2 Cannot create object of Interfaceclass
	ex: Bank is Abstract class Car c = new Car();  Not allowed

3. in Interface Final and static variables only can be defined
4. Even if we dont write final and static, still it is final and static
5. all abstarct methods in interfce is non static



public interface Car{

int wheels = 4;  by default it will be final and static


public void start();
public void stop();
public void refuel();
}


public class BWM implements Car{

@Override
public void start(){
system.out.println("BWM Start");
}

@Override
public void stop(){
system.out.println("BWM Stop");
}

@Override
public void refuel(){
system.out.println("BWM refuel");
}

public void theftsafety(){
system.out.println("BWM safety");


}

------------

public class testCar{

public static void main(String args[]){

BMW b = new BWM();
b.start();
b.stop();
b.refuel();
b.theftsafety(); 

Car c = new BMW(); // top casting or dynamic polymorphism
c.start();
c.stop();
c.refuel();
c.theftsafety(); --> not allowed

}

}


-----------------------------------------------------------

Can we overload a Main method:
-------------------------------


1. String args[] is in main method is String array param
2. public static void main(String args[])
3. Method overloading is allowed with Main method where there will be Main method with different params
4. only Main method wuith String args[] will execute by JVM
5. To call other main methods, then call other main methods using class name since it is static in nature



public class Main1{

public static void main(String args[]){
system.out.println("");
main("Testing");
main(10);
main(10,20);

}

public static void main(String args){
system.out.println("");
}

public static void main(int a){
system.out.println("");
}

public static void main(int a, int b){
system.out.println("");
}

}


-----------------------

Class1 :

public class A{

public static void main(String args[]){

system.out.println("A Main method")
}}

Class2 :

public class B{

public static void main(String args[]){

system.out.println("B Main method");
A.main(args);

}}

o/P
B main method
A Main Method


----------------------------------------------------------------------------------------------

Why is String immutable and Final   ---> came after jdk 1.5
-------------------------------------

1. String pool in Method Area
2. String pool
3. What is immutable - Cannot change the value of strings

s1------> Java <------------s2   //value java created in memory and both s1 and s2 points to it

Reason1:
Suppose String is Mutable:

s1="Java"
s2="Java"

then later when, 
s2="C++"

if s2 changes value then s1 also changes. In order to avoid this made them immutable and final


Reason2: Security
if hacker change db name, or path file. That is why string is immutable

Reason3: Class loading mechanism


Reason4: Optimzation and performance
no need to have separate hash code and value each time a string is created

s1 = "Java"
s2 = "Java"

will have same id in memory, it wont create separate hashcode and value in memory. s1 and s2 will share it

String is final: So that value cannot be inherited in other class

Interview question
Integer, Long, Double, Float,  - Wrapper Class are also immutable and final

-----------------------------------

Exception Handling
-------------------

				      Object			
					|
					V
     		  
	            ------>    Throwable Class  (Super Class)    <-------
   		  |							|
		Error Class						Exception Class


Catch(Exception E) or Catch(Throwable E)    --->throwable will catch both exception and error



Difference between Throw and Throws
----------------------------------

Throw an exception deliberately, immeditaley need to catch this exception

Throws used in front of method name incase expcetion will be throwed by method. Throws is not resolved as it is not caught anywhere using catch


Code for Throw:
--------------------
public class throwexception{


public static void main(String args[]){

}

system.out.println("AbC");

try{
Throw new Exception("new exception");   //name is new exception
}Catch(Exception E){
e.prinstacktrace();

}}

--------------

Code for Throws:

public class throwsexception{

public static void main(String args[]) throws arithmeticexception{
throwsexception obj = new throwsexception();
obj.sum();
}

public void sum()throws arithmeticexception{
div();
}
public void div() throws arithmeticexception{
int i = 9/0
}

}}

o/p

no catch in throws
from div throws go to sum, from sum it goes to main

---------------------------------------------------------------------------------------------------------


Prime Number:
-------------

Number divisible by itself is prime number, 2 is smallest prime. 1 and 0 is not primem.


public statuc boolean isprimenumber(int num){
if(num<=1){
return false
}

for(int i=2;i<num;i++){

if(num % i ==0){
return false
}
}
return true}

}



Palindrome 
---------------

int num;
int r=0;
int sum=0;
int t = num;

while(num>0){

r=num%10;
sum=(sum*10)+r;
num=num/10;

}

Armstrong -
---------------
Summation of cube of number will be same as number

1 = 1*1*1
370 - 3*3*3+7*7*7+0 - 343+27 - 370




while(num>0){

r=num%10;
num=num/10;
cube = cube+r*r*r
}

-----------------------------------------------------------------------------------------------------------------------------------------------------------

=======================================================================Java - TutorialPoint===============================================================
----------------------------------------------------------------------------------------------------------------------------------------------------------

Java Platform?
1. JAVA SE - Standalone Edition SE8
2. JAVA EE - Enterprise edition for multi tier, scalable application built over JAVA SE
3. JAVA ME - Micro Edition - To deploy, built embedded application

Primitive and non Primitive:
Primitive  - int, short, double, float, boolean - data size is known
Non primitive - String, array and Classes - data size is not sure

Data Type:
byte - 8 bits
short - 16bits
int - 32bits
float - 32bits
long - 64bits
double - 64bits
boolean - 1byte

Escape Sequences:
\n - new line
\t - tab
syso("\n The name is\t mubeen")


Operators:
1. Arithmetic Operator: +,-,*,/,%,++
2. Relational Operator: ==,!=, >,<,>=,<=
3. Bitwise Operator: 
a= 	0011 1100
b= 	0000 1101
a&b =   0000 1100
a|b =   0011 1101
a^b =   0011 0001  //XOR, 1 if either is 1, if both 0 or both 1, then o/p0
c=~a = 1100 0011 //opposite of a
<<{leftshft} = 1111 00
>>{right shift} = 1111
>>{zero right shigt} = 0000 1111
c = a & b = 0000 1100   (12)

4. Logical Operator = && and ||
5. Assignment Operator = =,+=,-=, 
6. Miscallaneous Operator = 
	i.)instanceof operator -to check if the object is of a particular type
                String name = "monica"
                boolean result = name instanceOf String
		OR
		Car a  = new Vehicle();
		boolean b = a instanceof Vehicle

       ii). precedence operators x=7+3*2 = 13 //operator with high precedence will operate first
            multiplication and division is abve add and subtract


Continue statement:
if in a loop, encouters continue stattement, it will skip rest of the block of codes to excecute and goes to "condition" inside forloop or while


Instannce of Global Variable:
scope of variable is throughout the program
it is non static variable
default value is 0 and false



Static Variable or Class Variable:
1. variable with static keyword
2. it can be used to declare constants
3. public static final PI=3.14;
4. static variable can be called by a static or non static method

static String sum="Sum is "
public static void main(){
int a=10;
int b=20;
int c= a+b;
syso(sum+c);
o/p- Sum is 30

}

Modifiers:
---------
1. Access modifier - public, private, protected, no modifier
2. Non Access modifier - static, final , abstract, synchronized - for threading, volatile
3. default access modifier - for class or global variable we did not give any keyword, this is default access modifier


Access Modifiers:
---------------------
1. Private - member, methods, variable, constructors cannot be access outside class
2. Public -  member, methods, variable, constructors should be accessible by java world
3. Protected - member, methods, variable, constructors should be accessible within class, within package, outside package of child class
4. Default or no modifer - member, methods, variable, constructors can be access with in class and with in package

Non Access Modifiers:
---------------------
1. static - 
	i.static variables or methods can be called with Class Name
	ii.static variables - ex; static int age=10;
	iii. Static variables can be accessed by static and non static methods, instance variable(non static) can be access by non static method only
	iv. static variable value can be changed only by static method accessing the variable
	v. static method - cannot access non static variable, it will use the variables passed through parameters
	vi.) static method - cannot use this and super keyword


2. non static - non static variable cannot be called by static method 


3. final  - 
	i. final int age=0 or final static int age=10;
	ii. cannot change value of the variable
	iii. if variable is only initialized like static final int, then static method can only assign the value to static final variable
	iv. if class is final, then variables, properties of this cannot be inherited to other class
	v. if variable in Class A is final, then inherited Class b can access the final variable but cannot modify the valyue

4, abstract
	1. Only method is declared, but not defined
	2. the abstract class is defined in the implemented class
	3. Class B implement CLass A, then class b should implemnt all abstract methods in class A
	4. Sample abtract method: public abstract sample();


Threading:
5. synchronized - for threading
	1. Synchronized keyword says the methods can be access by 1 thread at a time
	2. Synchronized can be used with any access modifier
	3. Sample: public synchronized void method1(){
		}
	4. That method will be locked by 1 thread, until it is completed resources cannot be used by any other methods
	5. 


6. Transient Modifier - Only for instance variable(non static)
	1. Transient keyword used with instance variable, then that particular variable will be excluded by JVM until it is deserialized
	2. What is serialization, when JVM runs program all values will be stored in a stream.
	3. Transient keyword cannot be used with Static keyword
	4. Transient can be used only with nonstatic or instance variable

Threading:
6. volatile: Only for Static variable
	1. when multiple threads access a variable, then we use volatile


Arrays:
---------
	1. Value will be stored in indexes
	2. Syntax: dataType[] data or 			//preferred
		   dataType data[]			//not preferred
	3. Ex: double[] db
	4. OR int[] arr = new int[10];
	5. OR int[] arr = {1,2,3,4};
	6. Length of array -> 0 to arr.length-1
		
	7.	int[] arr = new int[10];
		arr[0] = 1;


Sample Code:
package collections;

public class ArraySample {

	public static void main(String[] args) {
	
		
		int[] arr3 = {1,2,13,4,5};
		
		//print all numbers in array
		for (int i : arr3) {
			System.out.print(i);
		}
		System.out.println();
		//add all numbers in array
		int total = 0;
		for(int i=0;i<arr3.length;i++){
			total = total+arr3[i];
			
		}
		System.out.println("Total of array"+total);
	
		//find max in array
		int max = Integer.MIN_VALUE;
		
		for(int i=0;i<arr3.length;i++){
			
			if(arr3[i]>max){
				max =arr3[i];
			}
		
		}
		System.out.println("Max number of array  "+max);
	
	    }

}

O/p
121345
Total of array25
Max number of array  13


Array as Method parameter
--------------------------
public class ArraySample3 {

	public static void main(String[] args) {
		int[] a = new int[]{1,2,3};
		print(a);
		
	}
	
	public static void print(int[] b){
		System.out.println(b[1]);
		
	}
	
	}


Array with Return:-
-------------------

public class ArraySample3 {

	public static void main(String[] args) {
		int[] a = new int[]{1,2,3};
		
		int b2[] = reverse(a);
		
		for(int i=0;i<b2.length;i++){
			System.out.print(b2[i]);
		}
	}
	public static int[] reverse(int[] b){
		int j =b.length;
		int[] b1 = new int[j];
		for(int i=0;i<b.length;i++){
			
			b1[j-1] = b[i];
			j--;
		}
		return b1;
		}

o/p - 321;



Constructor:
------------
1. No return type like method
2.

Sample:
public class Constructor {
int x;
	public static void main(String[] args) {
		
		Constructor c  = new Constructor(10);
		System.out.println(c.x);

	}
	
Constructor(int x){
	this.x = x;
}

}

Finalise method:

Finalise method is called to close any object for ex:that hold a connection. Certain actions can be defined in this method so that
object is not abruptly destroyed by the garbage collector before the program ends.


public void finalise(){
//action
} 


Number Class:
--------------

primitive data types like int, long, float are converted to non promitive data type like Integer,Double, Float etc. This is boxing.
Converting from non primitive to primitive from Integer to int is unboxing. Some times we dont know how big the value is in that case we use
non primitive data type like Integer so that it can hold more data.

For performing mathematical function or convert to Integer we non primitive data types:

Integer i = 10;

Integer.parseint()
Math.ceil(i);
Math.random();

"The value of e is %.4f%n",Math.E
O/ p - 2.7212


Character Class:
--------------------

Character.isLowerCase('c');
Character.toString('c');

String Class:
---------------
String is a wrapper class, so no need to convert to Object like Char or int
str1.compareTo(str2);
str1.compareToIgnoreCase(str2); ---> o or +/- value
str1.contentEquals(str2) ; boolena value
str1.endswith("ng"); --. bolleans


Date CLass and Time:
--------------------

Date date = new Date();
syso(date.toString());


Formatted Date and Time:
-------------------------
package collections;

import java.text.SimpleDateFormat;
import java.util.Date;

public class SimpleDate {

	public static void main(String[] args) {
	
		Date now = new Date();
	//	System.out.println(now);
		
		SimpleDateFormat dnow = new SimpleDateFormat("E yyyy:mm:dd 'at'  hh:mm:ss a zzz");   //E is day of week
				System.out.println(dnow.format(now));
				
				
		//OR display data and time using $ sign
		
			System.out.printf("%1$s %2$tB %2$td %2$ty %3$s","Due date",now,"Time format");
		
		
	}

}

O/p-
Sun 2019:37:09 at  06:37:23 PM PDT
Due date June 09 19 Time format


Points to remember:
--------------------
1. Use printf to print dates using $ sign
2. for any data format to displate use t with % and $
3. %1$s  - means first string
4. %2$tY - means second argument that is date in above case, diplaye the year



Variable Arguments:
------------------

We can pass multiple arguments or no arguments in a method using dotdotdot ...

For ex: Sample Code:
----------------------

public class vararguments{

static void display(String... values){

for(String s : values){
syso(s)
}
}


public static void main(String[] args){

display();
display("mubeen","ali");
display("mubeen","ali","is","good");

}
}

o/p -
1.
2.mubeen ali
3.mubeen ali is good



Regular Expressions:
---------------------

What is regular expression?
Regular expression is a sequence of characters that can help to search,edit and manipulate data by using a specialized syntax in a pattern

Package name?
java.util.regex.*

Package primalrly consist of:

Pattern Class - A patter object holds the compiled regular expression
Ex: Pattern p = pattern.compile(regex);


Match Class - A matcher object is the engine that interprets the pattern and perform operation on the String
Matcher m = p.matcher(String);

PatternSyntaxtException - This object is an unchecked exception that indicates syntax error in regular expression


Sample Code:
-------------
import java.util.regex.Matcher;
import java.util.regex.Pattern;
public class RegularExpression {

	public static void main(String[] args) {
		
		String regex = ".m";
		String str = "am";
		
		Pattern p = Pattern.compile(regex);
		Matcher m = p.matcher(str);
		
		Boolean b = m.matches();
		System.out.println(b);
		System.out.println("-------------------------");
		//OR
				System.out.println(Pattern.matches(regex, str));
		System.out.println(Pattern.matches("[abc]", "ab"));   //false - String should be single char and matches any in regex
		System.out.println(Pattern.matches("[amn]", "m"));	  //true - String has m, it matches any in regex
		System.out.println(Pattern.matches("[^amn]", "m"));   //false - regex excepts any other than a,m or n
		System.out.println(Pattern.matches("[a-zA-S]", "T")); //false - it will excpet any single char between range
		System.out.println(Pattern.matches("[a-dk-u]", "m")); //true - "m" is with in the range of regex
		
		System.out.println("---------------------------");
		
		System.out.println(Pattern.matches("[AM][a-z]{1,5}", "Mubeen")); //true - Capital 'M' matches, 1 is min and 5 is max
	    System.out.println(Pattern.matches("[xy]+","xxy"));      //true []+ , patter should occor 1 or more
	    System.out.println(Pattern.matches("[xyz]?", "xy"));    //false, occur 1s or not at all
	    System.out.println(Pattern.matches("[xy]*", "xyy"));   //true, occurs 0 or more times
	
	    System.out.println("------------------");
	    
	    //  \d  -  digit
	    System.out.println(Pattern.matches("\\d", "1"));   //true - is number
	    System.out.println(Pattern.matches("\\d", "1a"));  //false -is alphanumeric
	    
	    // \D - for Characters
	    System.out.println(Pattern.matches("\\D", "m"));  //true - its char
	    System.out.println(Pattern.matches("\\D", "1m")); //false- it is alphanumeric

	    // length of string
	    System.out.println(Pattern.matches("[a-zA-Z0-9]{5,}", "Mubeen"));  //true  - accepts alphanumeric, min 5 chars, max any

	}

}

o/p  - 
true
-------------------------
true
false
true
false
false
true
---------------------------
true
true
false
true
------------------
true
false
true
false
false

JAVA - OOPS
------------

Super -  Super keyword is to access the members and variables of parent class.

Sample:
String s = "mubeen";

Super.s --> to access s in parent class
Super.display() ---> to access display method of parent class 


Super Keyword in Contructor:
------------------------------

Super() -> to invoke parent class method with no arguments
Super(values) -> to invokde parent class with arguments


Sample Code using Super() in constructor

 to invoke Parent:
----------------------------------------------

public class parents{

String name;

parents(){

}

parents(String name){
this.name = name;

}

}


--------------------

public class childs extends parents{
int id;

childs(){
super();
}

childs(String name, int id){
super(name);
this.id = id;
}

public void display(){
syso(name+id);
}


public static void main(String args[]){

childs c = new childs();
childs c1 = new childs("mubeen",2);
c1.display();
}
}


Is A relation ship
----------------
if class extends or implements another class or interface, the instance variable of the class IS A relation ship super class or interface

Intanceof keyword
--------------------

instanceof keyword is to check if the instance variable can be an instance of parent class being inherited or implemented


public interface person{}
public class Employee implements class1{}
public class Sceienceteacher extends Employee{

pubcli static void main(string args[]){
Employee e = new Employee();
Sceienceteacher sc = new Sceienceteacher();

syso(e instanceof person);
syso(sc instanceof Employee);
}
}

o/p - true, true


HAS A relationship
----------------------

Inheritnce Types:

Supports Single Inheritance, Multilevel inheritance and does not support multiple inherticane


Encapsulation:
Data hiding is acheived using Encapsulation where the variables and related code are made private. It can be access in other class
only using getter and setter method.




User Defined Exception:
-----------------------
If we try to create a user defined exception, it is mandaotory that it extends Throwable of Exception class

Code1:
public class Exceptionhandling(){
public static void main(){

try{
throw new AnException("This is user defined Exception")
}
Catch(AnException e){
syso("Catch block is executed");
}
}
}

Code2:
------
public class AnException extends Throwable{				//extends Throwable is mandatory
String str1;
public static void main(){

class AnException(String str2){						//constructor is called when new AnException("This is user defined Exception") is called
this.str1 = str2;
}

public String toString(String str1){
syso("The Exception is-->"+str1)
}

}
}

O/P
The Exception is-->This is user defined Exception


Java Files and Input/Output Stream:
-------------------------------------
Stream means sequence of data
Inputstream - Reading data from an external source is inputstream
Outputstream - Writing data in destination is outputstream


Object  ---Extends ---Inputstream
	-------------->Outputstream

Syntax for reading:
--------------------
File f = new File("c:/mubeen/file1.txt");
InputStream f = new FileinputStream(f);

Or

Inputstream f = new FileInputStream("c:/mubeen/file1.txt");

Syntax for writing:
-------------------
File f = new File("c:/mubeen/file1.txt");
OutputStream f = new FileoutputStream(f);

Or

OutputStream f = new FileOutputStream("c:/mubeen/file1.txt");


Copy Byte data from One file and Write to another file
---------------------------------------------------------

public Class CopyFile{

public static void main(String args[]){

try{
InputStream in = FileInputStream("C:/mubeen/file.txt");
InputStream out = FileInputStream("C:/mubeen/file1.txt");
int c;				//data in file stored in byte format can bestored in int
while(c = in.read() != -1){
out.write(c);
}
}
finally{
if(in != null){
in.close();
}
if(out != null){
out.close();
}
}
}

}
o/p - Reads byte data from file and copies to file1.txt. Since data is byte it can be stored in int 


To read Char  Byte from a file
--------------------------------

try{
FileInputStream in = new FileInputStream("C://mubeen/file.txt");
Int I = in.read();
syso((char)I);			//it will convert the byte integer to corresponding ASCII by ((char)I)
}

finaly{
in.close();
}


To Write stream of Charactersto a file: Using FileWriter
----------------------------------------------

FileWriter fw = null

try{
fw = new FileWriter("C://mubeen/file.txt");
fw.write("This is to write character stream of data to afile");
}
finally{
if(fw != null)
fw.close();
}

To Read Character stream from a file: Using File Reader
---------------------------------------------------------


try{
FileReader in = new FileReader("C://mubeen/file.txt");
Int I = in.read();
syso((char)I);			//it will convert the byte integer to corresponding ASCII by ((char)I)
}

finaly{
in.close();
}


Standard Input in Console:
-------------------------

InputStreamReader in = new InputStreamReader(System.in);
Or
Scanner sc = new Scanner(System.in);
sc.next();


How to create a directory
---------------------------

File f1 = new File("E://Mubeen/cd");
if(!f1.exist()){
f1.mkdir();
syso("directory is created");
}
else
syso("Creating directory is failed");


How to list all files and dirs in a path:
---------------------------------------------
File f1 = new File("E://Mubeen/cd");
String paths = f1.list();
for(String path : paths){
syso(path);	
}


Serialization and deserialization:  It is recommended to use Objectinputstream and Objectoutputstream for this
---------------------------------------------------------------------------------------------------------------
Serialization : Is to convert the object data into byte and store it in disk
Deserialization: Is opposite of Serialization where the object data stored in disk is converted back to an object
This concept is platform independent, it can be serialized in one platoform and deserialized in another platform

Employee e = new Employee();
e.name= "mubeen";
e.address = "Tigard";
 here e object can be stored in an output file - this is serialization

Package - java.io.Serializable.*


Serialization Code: Data from object copied to file in disk
----------------------------------------------
public class Emp implements Serializable{
String name;
String address;
}

------

public class serializationclass{
public static void main(String args[]){

Emp emp = new Emp();
emp.name = "mubeen";
emp.address = "Tigard";

try{
FileOutputstream fileout = new Fileoutputstream("E://mubeen/char.txt");
Objectoutputstream out = new Objectoutputstream(fileout);
out.writeObject(emp);
out.close();
fileout.close();
syso("Serialization is completed")
}

}

}

Deserialization Code: Data copied from  file in disk to object
--------------------------------------------------------------
try{
FileInputStream filein = new FileInputSream("E://mubeen/char.txt");
ObjectInputStream in = new ObjectInputStream(filein);
emp = (Emp)in.readObject();
}
finally
syso("First name read from object"+emp.name);
syso("Address read from object"+emp.address);
}

Java Generics:
--------------

1.Generics - For a method, in generics we dont need to provide the specific paratemter type. Instead we can add key word <E> or any other
alphabet which means it will accept any type of parameter. Here <E> is called type paramter


public class generics{

public static <E> void printarray([E] inputarray){

for(E element : inputarray){
syso(element);
}

}

public static void main(String args[]){

Integer[] int = {4,5,62,1,4};
Character[] char = {'a','d','b','z'};
Double[] dou = {1.2,3.2,1.4,2,1};
printarray(int);
printarray(char);
printarray(dou);
}

}

----------

2.Generics can be also used to mention the data types in array
ArrayList<String, Integer> arr = new ArrayList<>();



Multithreading:
------------------

Java is a multi threading programming language where two or more can run parallely by optimal use of resources

A thread goes through various stages in life cycle

New thread ---start()----> Runnable----run()-----> Running-------------------------Dead
						      |  			     |	
							 -----Sleep(), Wait()-----waiting


1. We can set priority for each thread, by default the priority is 5
2. Priority ranges from 1 to 10
3. The class either extends Thread or implements Runnable interface
4. If you sleep a thread for sometime, then meanwhile other thread will invoke


Methods:
start()
run()
setName() - Set name for thread
setPriority - Set priority for thread from 1 to 10
getName()- Gets name of thread
join(3000) - If we use join method with a thread, for 3 seconds only this thread will run
MIN_Priority - Sets priority to minimum
MAX_Priority - Sets priority to maximum



Sample Code1:

public class ThreadExam extends Thread{


public void run(){
syso("Thread1 is running");
}
public static void main(String args[]){
ThreadExam thread1 = new ThreadExam();
thread1.start();
}
}

o/p - Thread is running

--------------

Sample Code2:

public class ThreadExam extends Thread{


public void run(){
syso("Thread is running");
}
public static void main(String args[]){
ThreadExam thread1 = new ThreadExam();
ThreadExam thread2 = new ThreadExam();
thread1.start();
thread2.start();
}
}

o/p - Thread is running
      Thread is running


----------------------


Sample Code3:

public class ThreadExam extends Thread{


public void run(){

for(int i=0;i<5;i++){
syso(i);
}

}
public static void main(String args[]){
ThreadExam thread1 = new ThreadExam();
ThreadExam thread2 = new ThreadExam();
thread1.start();
thread2.start();
}
}

o/p -
0
0
1
1
2
2
3
3
4
4

-------------------------

Sample Code4:

public class ThreadExam extends Thread{


public void run(){

for(int i=0;i<5;i++){
Thread.sleep(100);
syso(i);
}

}
public static void main(String args[]){
ThreadExam thread1 = new ThreadExam();
thread1.start();
thread1.join(3000);
ThreadExam thread2 = new ThreadExam();
ThreadExam thread3 = new ThreadExam();

thread2.start();
thread3.start();
}
}

o/p -
0
1
2
3
4  --till here thread1
0  --thread2
0  --thread3
1
1
2
2
3
3
4
4



==========================================================================================================================================================
------------------------------------------------Java File Handling GC Reddy-------------------------------------------------------------------------------

File Handling -  Using fileclass we can handle computer files


1.File class can be used for inbuilt files like notepads. 
2. It cannot be used with xls or db files
3. We can use file class for creating/deleting xlsx files but not read/write xls files.
4. File class considers all files as flat file



Creating Folder and Files
---------------------------
import java.io.File;
import java.io.IOException;

public class filehandling {

	public static void main(String[] args) throws IOException {
		
		File fileobj = new File("C:\\Users\\mubeen\\Desktop\\ABC1");
		fileobj.mkdir();  //create folder ABC1
		
		boolean folderexist = fileobj.exists(); //folder existence
		
		if(folderexist == true){
			System.out.println("fodler exist");
		}
		else 
			System.out.println("folder doenot exist");
		
		fileobj.delete();  //deletes the folder ABC1
		
		
		//creat a textfile
		
		File fileobj1 = new File("C:\\Users\\mubeen\\Desktop\\file2.xlsx");
		fileobj1.createNewFile();
		
		//delete files
		fileobj1.delete();
		
	}}



Reading and Writing using File Class
------------------------------------

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;

public class filereader {

	public static void main(String[] args) throws IOException {
	//file readin
		String line;
		FileReader file = new FileReader("C:\\Users\\mubeen\\Desktop\\file1.txt");
		BufferedReader bf = new BufferedReader(file);
		
		while((line = bf.readLine()) !=null){
			System.out.println(bf.readLine());
			
		}
		//write data to textfile
		
		FileWriter fw = new FileWriter("C:\\Users\\mubeen\\Desktop\\file1.txt");
		BufferedWriter bw = new BufferedWriter(fw);
		bw.write("Naznin Ali");
		
	bw.flush();
		bw.close();
		fw.close();
		bf.close();
		file.close();
		
		
		
	
	}}

===================================================================================================================================================================================
===================================================================================================================================================================================

---------------------------------------------------------SELENIUM COURSE-------------------------------------------------------------------------------------------------------
Github
mubeenali85
Hightime9

Module9-TESTNG Framework/ANT/Maven/TestNG Integration - 5 hours
---------------------------------------------------------------

Testng is responsible for managing the testcase. Webdriver cannot manage test cases


How to install TestNG
---------------------
1. search eclipse testng in google
2. browse - http://testng.org/doc/eclipse.html	
3. click on install the plugin link
4. copy url http://beust.com/eclipse
5. go to eclipse - help
6. Install new softwares
7. paste the link and hit enter
8. check testng - next - next - finish and Install TestNg



How to verify if TestNG is installed
------------------------------------
Window - Show view - Others - Java - TestNG

How to view Reports:Index.html
---------------------
If a testng suit is run, right click on project folder and refresh. We can see Test-output folder created. Inside which we have
index.html file. Right click and get the path of html file. Go tp browser open the html file to see the reports.


TestNG Prioritizing testcase:
-----------------------------
1. Test cases are by default executed in alphabetic order of the test function
2. @Test(priority=1), @Test(Priority=2) is how we can prioritize test cases



Different Annotation availble:
--------------------------------
1. @BeforeSuite - Run this before any suite, that means if test cases are in multiple files. 1st this will be run
2. @AfterSuite
3. @BEforeTest - Before a test case is executed in 1 java file, this is run
4. @AfterTest
5. @BeforeMethod - before any method or test case, this will be run
6. @AfterMethod
7. @Test - This is the testcase


Code:
public class testngtutorial {

	@BeforeSuite
	public void beforesuit(){
		System.out.println("before suit");
	}
	@AfterSuite
	public void aftersuit(){
		System.out.println("after suit");
	}
	@BeforeMethod
	public void beforemethods(){
		System.out.println("before each method");
	}
	
	@AfterMethod
	public void aftermethods(){
		System.out.println("after each method");
	}
	
	@BeforeTest
	public void beforetesting(){
		System.out.println("before test");
	}
	
	@AfterTest
	public void aftertesting(){
		System.out.println("After test");
	}
	@Test(priority=3)
	public void logout(){
	System.out.println("logout");
	}

	@Test(priority=2)
	public void passwdchange(){
		System.out.println("password change");
	}
	@Test(priority=1)
	public void login(){
	System.out.println("login");
	}	

}


O/P
before suit
before test
before each method
login
after each method
before each method
password change
after each method
before each method
logout
after each method
After test
After suit




How to create a testng Java class with default annotations:
-------------------------------------------------------------

Rightclick on a package - select new - other - testng - create class - we can create testng class with all list of annotation checklist


Skip TestCase:
--------------

Code: throw new SkipException("skip test case");

Example:
	@Test(priority=1)
	public void login(){
		throw new SkipException("skip test case");
		//System.out.println("login");
	}
	


DependsonMethod:
------------------
If we skip a test then we need to at time skip the dependent test cases also

Below is the syntax for skipping dependent test or testcases

Syntax:
Suppose testcase1 is skipped then test case 2 and 3 can also be skipped
	1.@Test(priority=2,dependsOnMethods={"login"})
	2.@Test(priority=3,dependsOnMethods={"login","passwdchange"})


Code:
	@Test(priority=1)
	public void login(){
		throw new SkipException("skip test case");
		//System.out.println("login");
	}

	@Test(priority=3,dependsOnMethods={"login","passwdchange"})
	public void logout(){
	System.out.println("logout");
	}

	@Test(priority=2,dependsOnMethods={"login"})
	public void passwdchange(){
		System.out.println("password change");
	}

O/p -

All 3 test cases are skipped



Assertion:

Assert is used to report error. If assertion understands there is failure. then the code is stopped. In order to continue testing as
the failure is not critical we need to use soft assertion.

Syntax:
	  System.out.println("Starting");
	  String x= "xx";
	  String y="xx";
	  Assert.assertEquals(x, y);
	  Assert.assertTrue(2>11, "mathematical error");
	  System.out.println("stop");



SoftAssert:
If test case execution has to continue if one test case fails , we need to use soft assert

1. SoftAssert sf = new SoftAssert();
2. sf.assertEquals(x, y);
3. It is important to have sf.assertAll();   otherwise soft assert will not report the failure of test case. It will keep executing.

Syntax:
SoftAssert sf = new SoftAssert();
		String x= "xx";
		String y = "xx1";
		
		System.out.println("A");
		sf.assertEquals(x, y);
		System.out.println("B");
		sf.assertAll();


How to Fail a testcase using assertion:
---------------------------------------
Assert.fail("Error message");


How to use Soft Assertion in multiple testcases:
------------------------------------------------

Initialize the object of SoftAssert Class like
SoftAssert Soft;

Then in each testcase create a reference of the object like
Soft = new SoftAssert();

Remember to do Soft.Assertall() after each test case


Syntax:

public class softassert2 {
SoftAssert soft;

	@Test(priority=3)
	public void logout(){
		String x="a";
		String y="b";
		soft =new SoftAssert();
		soft.assertEquals(x, y);
	System.out.println("logout");
	soft.assertAll();
	}

	@Test(priority=2)
	public void passwdchange(){
		String i="aa1";
		String j="aa";
		soft =new SoftAssert();
		soft.assertEquals(i, j);
		System.out.println("password change");
		soft.assertAll();
	}
	@Test(priority=1)
	public void login(){
		System.out.println("login");
	}
}


O/P -
2 test cases will fail.



Data Provider:-
Data provider is used in TestNG to parametrize testcases

1. Data provider uses Object array[][]
2. Object[][] can hold any data type unlike String array or Integer array
3. Object[][] array is super set of all arrays


Important notes to create Data Provider.

1. @DataProvider annotation to be created
2. Create a data provider function with all parameter values
3. Use return
4. In test case provide the data provider name
5. In test case, intialize the exact no.of parameters as per data provider.

Code:

@Test(dataProvider="getdata")
	public void login1(String user,
			String pass,
			String browser,
			String status){
		//System.out.println("login test");
	}

@DataProvider
public Object[][] getdata(){
		Object[][] data = new Object[3][4];
		data[0][0] ="u1";
		data[0][1] ="p1";
		data[0][2] ="mozilla";		
		data[0][3] ="pass";
		
		data[1][0] ="u2";
		data[1][1] ="p2";
		data[1][2] ="chrome";
		data[1][3] ="pass";
		
		data[2][0] ="u3";
		data[2][1] ="p3";
		data[2][2] ="IE";
		data[2][3] ="pass";
		return data;
	}

TestNG.xml - 
-------------
Test suite can be run serially or parallely in multiple java classes with help of TestNG.xml
Configure the xml file. Right click and run as TestNG Suite.

Index.html Reports:
-------------------

1. These are basics reports.
2. When TestNG.xml is run
3. Refresh the project
4. Go to test-outputs folder
5. Get path of Index.html
6. Open the path to see basic report generated


Sample TestNG.xml file to run serially
-----------------------------------------
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd">
<suite name="My testng Suit">
  <test name="testng tutorial" allow-return-values="true">
    <classes>
      <class name="testngcases.testngtutorial"/>
    </classes>
  </test> <!-- Test -->
  
   <test name="data provider" allow-return-values="true">
    <classes>
      <class name="testngcases.dataproviderlearning"/>
    </classes>
  </test>
</suite> 


Note:
1. Suite name and Test Name can be anything
2. Class name in which test cases are present, should be provided with packagename.classname format


How to run test cases parallely
--------------------------------

In the testng.xml add a line parallel="test"
this will run test cases parallely

Sample:
<suite name="My testng Suit" parallel="test">
  <test name="testng tutorial" allow-return-values="true">
    <classes>
      <class name="testngcases.testngtutorial"/>
    </classes>
  </test> <!-- Test -->

How to run a Data provider in Test cases parallely
----------------------------------------------------
@DataProvider(parallel=true)
	public Object[][] getdata(){


Running different parameters in data provider in parallel is different from runnnign test cases in parallel
-----------------------------------------------------------------------------------------------------------
RUnning test cases in parallel
Ans: In TestNG.xml we have to give parallel="test"

Running different parameters in a test cases parallely
Ans: In @DataProvider(parallel=true)



Advntage of TestNG over JUNIT:
--------------------------------
1. Parallel testcases can be executed better in TESTNG
2. Better Reporting


TestNG Part5:
--------------
Continuation of Data Provider - DataProvider separate class with all data providers
--------------------------------------------------------------------------------------

It is better to have all Data providers in 1 class. In such cases we need to give names to data provider and not just call
the data provider by the function name. Also in test cases we need to give the full class name and name of data provider.


Syntax:

Dataprovider Class:
--------------------
public class dataproviderrepo {

	@DataProvider(name="DataProviderfordoreg")
	public static Object[][] getdata(){
	Object[][] data = new Object[2][2];
	
	data[0][0]="user1";
	data[0][1]="pass1";
	
	data[1][0]="user2";
	data[1][1]="pass2";
	
	return data;
	}}


Test Case Class:
----------------
	@Test(priority=1,dataProviderClass=dataproviderrepo.class,dataProvider="DataProviderfordoreg")
	public void login(String user,
			String password){
	
		System.out.println(user+""+password+""+"login test");
		
	}


O/p -
for login test, dataprovider present in separate class dataproviderrepo  is called using its class and name of data provider


Remember:
Separate DataProvider class when created, the function is static in nature. So that it can be called using Class name



Multiple TestCases with same Data Provider and different Values is POssible:
------------------------------------------------------------------------------

Below code has 2 classes, 
1. testcases.class
2. dataprovider.class


Remember:
1. data provider function is made static. So it can be called by class name
2. Object data[][]=null; is initialized
3. Method overloading is used. 2 test cases can use same data provider class with same or different parameters
4. public static Object[][] getdata(Method m) is used
5. if(m.getName().equals("testA")) is used to get the method or test case name. Accordinlgy Object array is initalized



Code1:
public class testcase {
	@Test(dataProviderClass=dataproviders.class,dataProvider="dp1")
	public void testA(String user, String pass){
		System.out.println("login testA");
	}
	
	@Test(dataProviderClass=dataproviders.class,dataProvider="dp1")
	public void testB(String user2, String pass2){
		System.out.println("Login testB");
	}
}


Code2:
public class dataproviders {
	@DataProvider(name="dp1")
	public static Object[][] getdata(Method m){
		
	Object data[][]=null;
		
		if(m.getName().equals("testA")){
		data = new Object[2][2];
		data[0][0]="user1";
		data[0][1]="pass1";
		
		data[1][0]="user2";
		data[1][1]="pass2";
		}else if(m.getName().equals("testB")){
			data = new Object[2][2];
			data[0][0]="user3";
			data[0][1]="pass3";
			
			data[1][0]="user4";
			data[1][1]="pass4";
			}
		return data;
	}


ANT-
-----
Ant helps to run program from Command prompts

How to Install ANT
-------------------
1. Google: download apache ant
2. Download ANT zip file
3. Copy the path where ANT is located in local
C:\apache-ant-1.9.7-bin\apache-ant-1.9.7
4. Right click - My Computer or This PC
5. Go to advanced settings
6. Click on Environment variables
7. Click on New to add a new variable ANT_HOME
8. Give value as the path of ant -  C:\apache-ant-1.9.7-bin\apache-ant-1.9.7
9. Now add vairable to existing variable Path
10. Value to add  - C:\apache-ant-1.9.7-bin\apache-ant-1.9.7\bin   (note: add \bin)
11. Always Open new command prompt, to load latest environement variables
12. enter command ANT
13. if you get the message "build.xml" doesnot exist. that means ant is configured


Build.xml for ANT:
------------------
Build.xml is heart of ANT. This xml file is used to run the testcases in TestNG.xml from command prompts

COmmands:
1. go to path of project in cmd
2. cd C:\Users\mubeen\workspace\newproject   - Path to where build.xml is lying
3. ant  - if sucessfull, confirms that everything is good to proceed. 
3. ant compile   -  creates class file, when refreshed can see a build folder with all Java class files generated
4. ant run
5. ant makexsltreports
6. ant report_email    - target to be added to send email using ANT, for sending email we need 3 java files 
			SendMail.java, FileFilterDateIntervalUtils.java and Zip.java. Usually xslt reports are
			zipped and sent since it is the folder of reports which is been sent

Sample Build.xml:
-------------------

updates:
1. need to give path for project, testng.xml path. These are present by default. no need to change
2. "ws.jars" path needs to be updated with folder which has all the jars
3. Will have targets for compile, run and makexsltreports


    <property name="ws.home" value="${basedir}"/>
    <property name="ws.jars" value="C:\Users\mubeen\Desktop\seleniumjars3.8.1\AllJars3.8.1"/>
    <property name="test.dest" value="${ws.home}/build"/>
    <property name="test.src" value="${ws.home}/src"/>
    <property name="ng.result" value="test-output"/>

    <target name="compile" depends="init, clean" > 
    <target name="run" depends="compile">
    <target name="makexsltreports">
	        <mkdir dir="${ws.home}/XSLT_Reports/output"/>
	        <xslt in="${ng.result}/testng-results.xml" style="testng-results.xsl"



MakeXSLTREports:
----------------

1. XSLT Reports are wrapper around Index.html
2. XSLT Reports are built based on the Index.html reports generted from testng.xml
3. This reports have better display and rich content than normal index.html reports
4. Need to place testng-results.xsl file parallely to build.xml file
5. In Build.xml provide the path of testng-results.xsl file in the style path
like     <xslt in="${ng.result}/testng-results.xml" style="testng-results.xsl"
6. ant makexsltreports in cmd
7. refresh the project in eclipse.
8. Go to XSLT_Reports folder, Right click on INdex.html file and copy path.
9. open the link to see the rich content, better display xslt reports


Note: makesure to have the Saxon-8.7 andSaxonLiasion Jar files in the list of Jars.

Sample: makexsltreports target in Build.xml
-------------------------------------------------
  <target name="makexsltreports">
	        <mkdir dir="${ws.home}/XSLT_Reports/output"/>

	        <xslt in="${ng.result}/testng-results.xml" style="testng-results.xsl"
	              out="${ws.home}/XSLT_Reports/output/index.html" classpathref="test.c" processor="SaxonLiaison">
	            <param name="testNgXslt.outputDir" expression="${ws.home}/XSLT_Reports/output/"/>
	            <param name="testNgXslt.showRuntimeTotals" expression="true"/>
	        </xslt>
	    </target>


ANT Run from BAT File-
----------------------
1. Go to physical location where the project is available in machine
2. create a notepad with command
3. ant clean compile run makexsltreports
4. save as testrunner.bat format  (save it in double codes)
5. double click it will run and execute the test cases in testng.xml with the help of Build.xml file

-------------------------------------------

TestListenerAdapter:
--------------------

TestListenerAdapter is a class with many methods. This helps in capturing the status of a testcase, the status can be put into a
log file or reports as an when required.

JavaDoc:
--------
Below Java doc has all the methods in TestListenerAdapter class
http://static.javadoc.io/org.testng/testng/6.11/org/testng/TestListenerAdapter.html

Remember:
-----------
1.TestListenerAdapter class can be used for TestNG testcases
2. Need to execute the testcases from Testng.xml file by right click and run 
3. Need to add listener class in testng.xml


Explanation of TestListenerAdapter.

We have 2 classes.
1. testcases.java   - All the testcases available here
2. Customlistener.java   - The listener class is here. This class extends to inherit all the properties of TestListenerAdapater class
3. Testng.xml - Add listener tag


Code: basictest.java
---------------------
	@Test(priority=1)
	public void login(){
		System.out.println("logged in");
	}
	@Test(priority=3)
	public void logout(){
		Assert.assertEquals("A", "B");
	}
	@Test(priority=2)
	public void passwdchange(){
		throw new SkipException("Skipping passwdchange");
	}

Code: Customlistener.java
-------------------------
public class customlistener extends TestListenerAdapter {

public void	onTestSuccess(ITestResult tr){
	System.out.println("Success-->"+tr.getName());
}

public void	onTestFailure(ITestResult tr){
	System.out.println("Failure-->"+tr.getName());
}
public void	onTestSkipped(ITestResult tr){
	System.out.println("Skipped-->  "+tr.getName());
}
public void	onTestStart(ITestResult result){
	System.out.println("started-->  "+result.getName());
}
}

Code: Testng.xml
-----------------
<suite name="Testing Listeners">  
<listeners>
<listener class-name="listeners.customlistener"/>
</listeners>

  <test name="testcase" allow-return-values="true">
    <classes>
      <class name="listeners.basictest"/>
    </classes>
  </test> <!-- Test -->
</suite> 


O/P-
----
started-->  login   (from listener)
logged in   (from testcase execution)
Success-->login   (from listener)
started-->  passwdchange    (from listener)
Skipped-->  passwdchange   (from listener)
started-->  logout     (from listener)
Failure-->logout     (from listener)


Part6:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
More on TestListenerAdapter, not explained properly. hence skipping


TestNG Integration with Maven (Part6;9.27min):
-----------------------------------------------
Trainer recommended to learn Module37 - Apache Maven before learning the integration.
Completed Part1 and Part2 of Module37 - Apache Maven



Module9 - Part6;9.27min onwards continuation:
-----------------------------------------------

#Create a maven project and execute testcases using testng
1. Open command prompt
2. mkdir mubeenmaven
3. cd mubeenmaven
4. mvn archetype:generate
5. enter, enter, groupid = com.mubeenmaven (i.e package name)
6. artifact id = mubeenmavenproject, enter, enter
7. go to cd mubeenmavenproject
8. we can see the src/main/java, src/test/java and pom.xml
9. in cmd, mvn eclipse:eclipse
10. .classpath is created
11. Now the project can be loaded to eclipse
12. right click - import - browse the projct
13. create M2_REPO variable by right click on project
14  give path of .m2/Repository like C:/users/mubeen/.m2/repository
15. Go to google search - testng eclipse
16. click on maven tab and download testng dependency
17. in eclipse copy the testng dependency
18. create testcases in src/test/java folder
18. refresh the project
19. mvn eclipse:eclipse
20. mvn compile
21. mvn package - should execute test cases.


#run test cases from testng.xml using maven and create surefire report.
--------------------------------------------------------------------------
Remember:
copy testng.xml in src/test/resources folder and provide the same path in the pom.xml plugin below
do - mvn clean, if any change in test case

22. create a source folder - right click on right console - select sourcefolder
23. name it src/test/resources - copy testng.xml
24. In POM.xml copy below dependency
25. Make sure to give testng.xml path as mentioned below in pom.xml file

 <build>
<plugins>
<plugin>
<groupId>org.apache.maven.plugins</groupId>
<artifactId>maven-surefire-report-plugin</artifactId>
<configuration>
<suiteXmlFiles>
<suiteXmlFile>src/test/resources/testng.xml</suiteXmlFile>
</suiteXmlFiles>
<!-- Skip the normal tests, we'll run them in the integration-test phase -->
<skip>true</skip>
</configuration>
</plugin>
</plugins>
</build>


26. mvn eclipse:eclipse
27. mvn compile
28. mvn test - should execute the test cases in testng.xml
29. mvn surefire-report:report - surefire report should be generated. refresh the project. 
30. got to target folder - site folder - to view the surefire report

Query to Ashish, What is mvn test,site and package?
-----------------------------------------------------
test - test the compiled source code using a suitable unit testing framework. These tests should not require the code be packaged or deployed
site - 
package - take the compiled code and package it in its distributable format, such as a JAR.

Also refer this url
https://stackoverflow.com/questions/16205778/what-are-maven-goals-and-phases-and-what-is-their-difference

#run test cases from testng.xml and generate xslt report using maven
---------------------------------------------------------------------

add below plugin

</reporting>
<pluginRepositories>
<pluginRepository>
<id>reporty-ng</id>
<url>https://github.com/cosminaru/reporty-ng/raw/master/dist/maven</url>
</pluginRepository>
</pluginRepositories>

31. this will generate xslt reports with below commmand
32. mvn test site
33. refresh project to see the xslt reports in target -site folder
teh github link in the above plugin is the location from which xslt reports template is downloaded


Part7 - How to run testng.xml programatically from code rather than testng.xml
Code to be added


Part8 and Part9 - Custom report. Very complicated, hence skipped
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

--------------------------------------------------------------------------End---------------------------------------------------------------------------------------------------------------------------------------------------

Module37 - Apache Maven
------------------------

Maven is a community server, which has all the manufactures jar file and other dependencies. So rather than loading 
jar files in SVN or Github along with source code. Jar files are pulled into eclipse to run selenium scripts from Maven
which always has the latest jar files.


Installation of Maven:
----------------------
similar to ANT installation

1. Google - Apache Maven - Go to download
2. Download latest Maven zip file - https://maven.apache.org/download.cgi
3. Extract the zip file - C:\apache-maven-3.3.9-bin\apache-maven-3.3.9
4. Go to My Computer or This PC. Right Click - Properties - Click Advanced settings - Environment variable
5. Create new variable M2_HOME and value as C:\apache-maven-3.3.9-bin\apache-maven-3.3.9
6. Go to Path variable -  Value of PATH variable C:\apache-maven-3.3.9-bin\apache-maven-3.3.9\bin     (make sure to add \bin at the end of the value)
7. Create another variable JAVA_HOME if not present
8. Value of JAVA_HOME  C:\Program Files\Java\jdk1.8.0_101
9. Go to cmd
10. type mvn --version
11. If it gives the version details. That means maven is succesfully installed


Maven Project:
----------------

1. Install Maven
2. type in cmd, mkdir mubeen, cd mubeen
3. mvn --version
4. mvn archetype:generate    (many archetypes are available in maven. All gets downloaded. )
5. Enter, Enter
6. Group ID - Package name like - com.testing
8. Artifact Name - Give your project name
9. Enter for Y
10. Build Success message will come
11. If we go to the path in local, can see maven project created with src/java/main, src/java/test and POM.xml (POM.xml is heart of project)
12. This needs to be imported to eclipse. In Step 11 format it cannot be imported as there is no class file
13. in cmd, go inside the project path where until you see the src and pom.xml
14. cd mubeenmavenproject
15. mvn eclipse:eclipse  (will create .classpath that will be in a format that can be exported to eclipse)
16. will see message BUILD SUCCESS.
17. In Eclipse, import the project. Right click - Import - Existing project - browse the project


How to download latest Jars using Maven
----------------------------------------

18. As per above steps, we can see POM.xml in eclipse
19. Check the dependencies, by default you can see JUNIT dependency and the Jar version number
20. Go to google, search maven repository
21. Select link - https://mvnrepository.com/
22. In Search, type junit
23. click first link for junit and select any latest version
24. Copy the dependency into pom.xml or rename the new version
25. go to cmd
26. mvn compile   (this will download the latest Jars for JUNIT)

before step26.
27. In eclipse, right click on project - Properties. Add variable M2_REPO
28. Add value - C:/Users/Mubeen/.m2/repository
29. This is the path where all jars are downloaded.



How to download selenium jars using Maven
-------------------------------------------

1. Google - http://search.maven.org
2. search selenium
3. download selenium-server dependencies.
4. Latest as of now is 
<dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-server</artifactId>
    <version>3.9.1</version>
</dependency>

 <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
<dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-java</artifactId>
    <version>3.9.1</version>
</dependency>



5. mvn compile
6. All selenium jars will be downloaded to .m2/Repository/org
7. In order to reflect the downloaded jars in your eclipse project
8. mvn eclipse:eclipse
9. This will make all the downloaded jars recogonizable by eclipse and we can see the jars added to project in eclipse properties
10 mvn validate - validates if the folder structure in eclipse is recognizable by eclipse
11. mvn package - will execute all the programs in test and main folder
12. mvn test - will execute all the programs in test folder of eclipse project
13. mvn package - command combines mvn validate and mvn compile


quick summary of maven:
------------------------
1. mkdir test
2. cd test
3. mvn --version
4. mvn archetype:generate  provide groupid and artifact id
5. mvn eclipse:eclipse  .class file is created
6. Export to eclipse
7. add dependencies in pom.xml
8. mvn compile
9. mvn eclipse:eclipse
10. mvn validate  - validates the folder structure
11. mvn package executes all programs in test and main    (before executing, it will perform mvn validate+mvn compile)
12. mvn test - executes all programs in testng.xml  (copy testng.xml in src/resources/java and provide the same path in pom.xml)
13. mvn surefire-report:report  (surefire report will be generated)
14. mvn test site (add dependency of xslt template from github here in pom.xml) mvn test site = mvn test +mvn site

Part3 -XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
Did not understand ANT integrtion with Maven - Skipped

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
=======================================================================CORE-SELENIUM========================================================================================================================

Module11 selenium webdriver - 1.5hrs
--------------------------------------


Download selenium jars3.8.1 from selenium hq


For Firefox v55:
System.setProperty("webdriver.gecko.driver", "C:\\Users\\mubeen\\Desktop\\seleniumjars3.8.1\\geckodriver.exe");
		FirefoxDriver driver=new FirefoxDriver();
		driver.get("http://yahoo.com");

For Chrome latest:
System.setProperty("webdriver.chrome.driver", "C:\\Users\\mubeen\\Desktop\\seleniumjars3.8.1\\chromedriver.exe");
		ChromeDriver driver=new ChromeDriver();
		driver1.get("http://yahoo.com");


For Internet explorer:

Download IE.exe based on your IE is 64bit or 32bit
Change view to 100%
propetected mode - turn off
Security setting to allow active content


System.setProperty("webdriver.ie.driver", "C:\\Users\\mubeen\\Desktop\\seleniumjars3.8.1\\IEDriverserver.exe");
		InternetExplorer ie =new InternetExplorer ();
		ie.get("http://yahoo.com");



How to avoid using System.setProperty(key,value)??(not working for me)
-----------------------------------------------------------------------
Go to PC - Right Click - Properties - Environment vairable - select path - edit it - add the path of where exe drivers are available
Click OK - Restart eclipse. You dont have to write System.Setproperty then. directly FirefoxDriver driver = new FireFoxDriver(); should work



how to close the webbroswer driver after the code is run??
--------------------------------------------------------
it is important to write 
driver.quit();
else, in background the wbbrowser driver will keep running in background


What is driver.close()??
-----------------------
driver.close(); is to close the session of web broswer. it will not close the driver exe

What is javadoc??
----------------
javadoc is documentation for selenium classes available in documents tab under

https://www.seleniumhq.org/download/

1. Click on javadoc
2. copy the url  - http://seleniumhq.github.io/selenium/docs/api/java/index.html
3. Go to module in eclipse
4. Right click - select properties - build path - in main selenium standalone jar(double click) - you can see java doc - 
double click - add the path copied in step2 - remove index.html from the url and select OK  -- (http://seleniumhq.github.io/selenium/docs/api/java/)
5. Now if we hover mouse on any class or webdriver - it will give good documentation in eclipse itself.


How to import all packages at once when code is copied from else where?>
-------------------------------------------------------------------------
cntrl+shift+o


How to avoid logs in the console while running selenium code for FirefoxDriver?
--------------------------------------------------------------
add below code - this wiill disbale the logs to generate in the Console
System.setProperty(FirefoxDriver.SystemProperty.BROWSER_LOGFILE, "null");


How to have the same logs in a log file instead of console output?
-------------------------------------------------------------------
System.setProperty(FirefoxDriver.SystemProperty.BROWSER_LOGFILE, "C://desktop//firefox.log");


What is Firefoxoptions class used for?
----------------------------------------
FirefoxOptions opt=new FirefoxOptions();
opt.setPageLoadStrategy(PageLoadStrategy.EAGER);
System.setProperty("webdriver.gecko.driver", "C:\\Users\\mubeen\\Desktop\\seleniumjars3.8.1\\drivers\\geckodriver.exe");
FirefoxDriver driver=new FirefoxDriver(opt);


note - Firefoxoptions class has many methods. We can set browser binary. We can also enter keys to field before the page is fully loaded
.EAGER - key input will load very fast
.NONE -  key input will load very fast (same as EAGER)
.NORMAL - This is normal mode, browser opens. entire page is loaded only then the input paramters are keyed as values in browser


Profiling using Options class mentioned above?
--------------------------------------------------
Profiling is nothing but trying to open the specifc profile browser using selenium code. This is used when the tester needs
to launch browser profile with personal setting 


go to run -> firefox.exe -p profilemanager
create a new profile - mubeen

	FirefoxOptions opt=new FirefoxOptions();
	ProfilesIni allProf = new ProfilesIni();     //represents all profiles in browser
	FirefoxProfile prof = allProf.getProfile("selenium");    //prof points to "selenium" profile
	opt.setProfile(prof);                                    //options class used to point to prof
	FirefoxDriver driver=new FirefoxDriver(opt);             //opt is passed as constructor here
	driver.get("http://yahoo.com");


Notification disable using Options in Firefox?    (broswer opens with some notifications. how to disable the notification)
-----------------------------------------------
	FirefoxOptions opt=new FirefoxOptions();
	ProfilesIni allProf = new ProfilesIni();
	FirefoxProfile prof = allProf.getProfile("selenium");

	prof.setPreference("dom.webnotifications.enabled", false);
	opt.setProfile(prof);

	FirefoxDriver driver=new FirefoxDriver(opt);
	driver.get("http://yahoo.com");


Disable certificates in browser?
---------------------------------
	FirefoxOptions opt=new FirefoxOptions();
	ProfilesIni allProf = new ProfilesIni();
	FirefoxProfile prof = allProf.getProfile("selenium");
	
	prof.setAcceptUntrustedCertificates(true);
	prof.setAssumeUntrustedCertificateIssuer(false);
	opt.setProfile(prof);

	FirefoxDriver driver=new FirefoxDriver(opt);
	driver.get("http://yahoo.com");


Proxy server using Options Classes?
------------------------------------
to use proxy servers to browse any sites.. then use below code

	FirefoxOptions opt=new FirefoxOptions();
	ProfilesIni allProf = new ProfilesIni();
	FirefoxProfile prof = allProf.getProfile("selenium");


	prof.setPreference("network.proxy.type", 1);
	prof.setPreference("network.proxy.socks", "83.209.94.87");
	prof.setPreference("network.proxy.socks_port", 35923);

	opt.setProfile(prof);
	FirefoxDriver driver=new FirefoxDriver(opt);
	driver.get("http://yahoo.com");


Debug in Eclipse
------------------
fn+f6  - to execute line by line in debug mode
fn+f8  - to run in normal
fn+f5  -  when calling a method, in debug mode - click f5 on add method. it will go inside the method and execute line by line up on pressing f6
		add(a,b)
		
		public static void add(int a,int b){
		int c = a+b;
		}


Import project in eclipse?
-------------------------
File - Import - General - Exisitng project to workspace - browse for project.
cntrl+shoft+o - to import everything
while importing you might see errors because, you are importing Ashish jar file. need to replace with your Jars


------------------------------------------------------------------------------------------------------------------------------------------------------------

Module12 - Selenium Webdriver 3
-------------------------------

What is Webdriver?
-----------------
WebDriver is an Interface and FirefoxDriver, ChromeDriver etc are classes that implements the Interface Webdriver. So the implementing classes can use the
functions of webdriver interface like get, findelement, quit etc


if not for webdriver, we would have to write separate  code for Firefoxdriver, Chromedriver and IEDriver etc. Using webdriver we can simplify the code
and dynamically use any browser based on the String value


Dynamically test using any broswer using webdriver Interface:
---------------------------------------------------------------

public static void main(String args[]){
String browser="Mozilla"
Webdriver driver = null;

if(browser.equals("Mozilla")){
driver = new FirefoxDriver();
}

else if(browser.equals("Chrome")){
driver = new ChromeDriver();
}

driver.get("yahoo.com");
 }

O/P
Yahoo page can be opened using any broswer based on String value


Identify the Objects:
----------------------
Webelemnt is an HTML reference(data type) which has many feature like findelement, get function etc
By is a class



To identify elements
---------------------

Objects				Tag Name			Mandatory Attributes			Option Attributes
----------			---------			--------------------			-----------------
Text Field			input				type="text"				id,name,class
Radio Button			input				type="radio"				id,name,class, selected(true,false)
Checkbox			input				type="checkbox"				id,name,class
button				input				type="submit"				id,name,class
Link				a				href					id,name,class
Image				img				src				        id,name,class
Text				div,i,p...	
Dropdown			select				


Code:
public static void main(String[] args) {
	String browser="mozilla";
	 WebDriver driver =null;
	 
	 if(browser.equals("mozilla")){	
		 System.setProperty(FirefoxDriver.SystemProperty.BROWSER_LOGFILE, "null");
		System.setProperty("webdriver.gecko.driver", "C:\\Users\\mubeen\\Desktop\\seleniumjars3.8.1\\drivers\\geckodriver.exe");
		 driver = new FirefoxDriver();
		 
	 }
	 else if(browser.equals("chrome")){
		 System.setProperty("webdriver.chrome.driver", "C:\\Users\\mubeen\\Desktop\\seleniumjars3.8.1\\drivers\\chromedriver.exe");
		 driver = new ChromeDriver();	 
	 }
	driver.get("https://mail.rediff.com/cgi-bin/login.cgi");
	WebElement username = driver.findElement(By.id("login1"));
	username.sendKeys("mubeen85");
	System.out.println(username.getLocation().x);
	System.out.println(username.getLocation().y);
	
	//WebElement passwd = driver.findElement(By.name("passwd"));
	//passwd.sendKeys("Hightime");
	
    driver.findElement(By.name("passwd")).sendKeys("Hightime");
	WebElement button = driver.findElement(By.name("proceed"));
	button.click();
	driver.quit();
	}



Xpath - Is the address of webelement in web page
-------------------------------------------------


Absolute Xpath -very accurate but any small change in path will have to change the absolute xpath also
--------------------------------------------------------------------------------------------------------
html/body/div/div[1]/div[1]/a/img

To click on a link using absolute pth

Code:
driver.get("https://mail.rediff.com/cgi-bin/login.cgi");
driver.findElement(By.xpath("html/body/div/div[1]/div[1]/a/img")).click();
    


Partial Xpath - 
-------------------

Menu - Web developer - Get more tools - Extension - search xpath finder - install -(will see icon for xpath finder)

Or

alternate method to find the xpath:-
-------------------------------------

1. click on the field to find xpath. 
2. go to the elements
3. right click -> copy ->xpath (gives you the xpath)



//* - represents all xpath
//a - all the links on webpage
//*[@id='login'] are the same as //input[@id='login']
	

note: while copying xpath make sure double quotes changed to single quotes


Can 2 elements have same xpath
-----------------------------
Yes, 2 elements can have same xpath. In such case we need to traverse a level up to make sure we get the unique xpath

Can 1 element have multiple xpath
------------------------------------

Yes,
xpath1 = //input[@id='login']
is same as //input[@name='login1']

can also be wirttent as //name[@id='login' and @name='login1']


How to try xpath in Chrome and Firefox if it is valid
-----------------------------------------------------

In Firefox:
download addin Try xpath
enter the xpath and hit execute. We can find if the xpath is valid


In Chrome:
Click F12 to open page source
Cntrl+F -> this opens xpath search bar
Enter the xpath, and if it is valid it will provide the list



CSS Selector: 
-------------
faster in execution when compared to xpath, similar to xpath with slight difference


site: https://mail.rediff.com/cgi-bin/login.cgi


xpath = //input[@id='login1']
css = input[id=login1]


xpath = //input[@id='login' and @name='login1']
css = input[id=login][name=login1]



xpath = //input[@id='login1]/div[2]/input
css = div[class=login-form]>div:nth-child(2)>#login1
or css = div[class=login-form]>:nth-child(2)>#login1       ('>' is used instead of '/' and '(2)' is used instead of '[2]' in xpath)


in css
input[id=login1] is same as #login1
id= #
class = .


in.rediff.com - Shopping link

CSS path = div[class=divicon relative]  (this will not work)
instead css = .divicon.relative (this will work, use dot instead of class and again use dot if there are spaces)


in https://mail.rediff.com/cgi-bin/login.cgi, home button

CSS can be presented in both ways
.head-wrapper>.floatR
.head-wrapper>:nth-child(2)>a


In CSS, better to use :nth-child(2) instead of div:nth-child(2)



XPATh with text() function:
---------------------------

We can create xpath with visible text in page source, no need to find any id or class in this case. It is easy

Syntax:
//input[text()='signin']  (not possible with css selector)



Starts-with and contains function in xpath:
-------------------------------------------

Suppose we have id's that keep changin each type a web page is restored. in such case we can analyze the patter 
how id is changing and use starts-with and contains function along with xpath 


ID example,
yui_3_001_1_1202020
yui_3_001_1_1200303


//a[starts-with(@id='yui_3_001')]
or
//a[contains(@id='yui_3_001')]

note: there is no ends with function in xpath, it is available in css


---------------------------------------------------------------------------------------------------------------------------------------------


Module13 Part1- Selenium webdriver-3
-------------------------------

ImplicitlyWait-
---------------
Web page takes time to load, some times xpath may not detect and will throw error as the page is not completely loaded.
In such case implicitlyWait can be used to detect the xpath until the page is loaded.

driver.manage().timeouts().implicitlyWait(20,Timeunit.Seconds);


Difference between Thread.Sleep(20) and Implicitly Wait:-
--------------------------------------------------------

Thread.Sleep(20) - Will always wait for 20 seconds before the xpath is detected
Implicitly Wait -  Wait dynamically until 20 seconds to load the page and detect the xpath. If xpath is identified before 20 seconds.
Then the line will be executed. Hence better than thread.sleep(20)


Remember:
Implicitly Wait is applicable to all driver.findelements



How to maximize the page
------------------------
driver.manage().window().maximize();


Code:
----------
public class sel1 {

		@Test
		public void firefox(){
			System.setProperty(FirefoxDriver.SystemProperty.BROWSER_LOGFILE, "null");
		System.setProperty("webdriver.gecko.driver", "C:\\Users\\mubeen\\Desktop\\seleniumjars3.8.1\\drivers\\geckodriver.exe");
			WebDriver driver=new FirefoxDriver();
			driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
			driver.manage().window().maximize();
			driver.get("http://cnn.com");
		String test = 	driver.findElement(By.xpath("/html/body/div[6]/section[1]/div[2]/div/div[1]/ul/li[1]/article/a/h2")).getText();
			System.out.println(test);
		driver.quit();
	}



getAttribute:
--------------
getAttribute get the property value of a webelement like name, value, max length, id etc

gettext can fetch the webelement string between the tags. Rest of the property values can be fetched only by getAttribute.


Code:
driver.get("https://mail.rediff.com/cgi-bin/login.cgi");
		String t = driver.findElement(By.id("login1")).getAttribute("maxlength");
		System.out.println(t);


Remember:
Checkbox attribute name is "Checked"


Part2:
------

Options class is used for setting all options for broswer like PageloadStrategy, ProfilesIni, setPreference, setAcceptUntrustedCertificates

in below code, separate function itself is created for options class. So based on the browser value provided in the String. The browser settings
can be applied using the funciton

Remember:
Broswer options are different for chrome,IE etc when compared to below code of Firefoxdriver using Firefoxoptions
Certificates, Notifications are part of browser profileing. So at the end we need to add line opt.setprofile(prof);


Code:
public class options {

	@Test
	public void optionslearning(){
		String browser = "firefox";
		if(browser.equals("firefox")){
			WebDriver driver=null;
			driver = new FirefoxDriver(loadfirefox());
			driver.get("http://google.com");
			System.out.println("**************");
			driver.quit();
		}
		
	}
	
	public FirefoxOptions loadfirefox(){
		System.setProperty(FirefoxDriver.SystemProperty.BROWSER_LOGFILE, "null");
		FirefoxOptions opt = new FirefoxOptions();
		System.setProperty("webdriver.gecko.driver", "C:\\Users\\mubeen\\Desktop\\seleniumjars3.8.1\\drivers\\geckodriver.exe");
		opt.setPageLoadStrategy(PageLoadStrategy.EAGER);
		
		ProfilesIni allProf= new ProfilesIni();
		FirefoxProfile prof = allProf.getProfile("selenium");
		//turnoff notification
		prof.setPreference("dom.webnotification.enabled", false);
		//certificate
		prof.setAcceptUntrustedCertificates(true);
		prof.setAssumeUntrustedCertificateIssuer(false);
		
		opt.setProfile(prof);
		return opt;
		
	}
}

SimpleDateFormat:
--------------------

	
		String dates = "01/02/2018";
		SimpleDateFormat sd = new SimpleDateFormat("dd/MM/yyyy");
	
		java.util.Date formatteddates = sd.parse(dates);
		System.out.println(formatteddates);
		
		String day = new SimpleDateFormat("dd").format(formatteddates);
		String month = new SimpleDateFormat("MMM").format(formatteddates);
		String year = new SimpleDateFormat("yyyy").format(formatteddates);
		System.out.println(day+month+year);
		int year1 = Integer.parseInt(year);
		

How to extract all links from a website
-------------------------------------------

Remember:
1. links are weblement, need to extract the string by gettext() function
2. isDisplayed() will be display the links as true for which are visible
3. link.click() will navigate to the link.


	List<WebElement> links = driver.findElements(By.tagName("a"));
		System.out.println(links.size());
		WebElement link1 = links.get(10);
		String tenthlink = link1.getText();
		System.out.println(tenthlink);
Method1--

	for(int i=0;i<links.size();i++){
			WebElement link = links.get(i);
			System.out.println(link.getText()+"--"+link.isDisplayed());
		}

Method2--
//OR
		
		for(WebElement elink:links){
			System.out.println(elink.getText()));
		}
		driver.quit();



How to extract all links from a box
--------------------------------------

Remember:
If we need to extract all links in a box and click on it and get title of page

1. In for loop, give the cnn link. and again extract Webelement Links. 1st 2 steps in Method1. Because when selenium clicks on a link
and navigate to next page. It looses memory. So in for loop each time page is navigated. Comeback to cnn.com and extract the links By tagname
and continue getting title
2. to get title of a page - driver.gettitle()

Method1:
--------
	WebElement Box = driver.findElement(By.xpath("/html/body/div[7]/section[1]/div[2]/div/div[2]"));
        List<WebElement> links = Box.findElements(By.tagName("a"));
	System.out.println(links.size());
	
	for(int i=0;i<links.size();i++){
		WebElement link1 = links.get(i);
		System.out.println(link1.getText()+link1.isDisplayed());
		}



Method2:
--------
In this method, driver doesnot loose memory. when it comes back to cnn page after click on the link each time.
Here xpaths for each link is extracted in pattern

Remember:
1. if we want to navigate back page then use
driver.navigate().to("http://cnn.com") instead of driver.get("http://cnn.com")
driver.navigate().back() - for back ward navigation

2. In below pattern. Links are not lost since we are not extracting all at once and moving to next page

Code:
String path1 = "//a[@class='abc']/div/div/div["
String path2 = ]/div/div/a

for (i=2;i<9;i++){
driver.findelement(By.xpath(path+i+path2)).click();
String text = driver.gettitle();
syso(text);
driver.navigate().back();
}


How to extract links in a box dynamically, click on the link if response code is 200 and using isElementpresent function
----------------------------------------------------------------------------------------------------------------------------

Remember:
1. To get response code, need to download Jar fluent-hc-4.2.2
2. If response code is200 , click on link
3. getAttribute("href") will give the url to click
4. isElementpresent function created, will help to determine if the xpath is valid if the size of weblement in list is greater than0
5. while(condition) or if(condition) returns true. So in function need to return true for the code to execute. read code below to understand
6. For response code fucntion to work, make sure to import below package
import org.apache.http.client.fluent.Request;


Code:
Note: not working,as xpath is not correct. But good code

	static WebDriver driver;
	public static void main(String[] args) {
		String value="C:\\Users\\mubeen\\Desktop\\seleniumjars3.8.1\\drivers\\geckodriver.exe";
		System.setProperty(FirefoxDriver.SystemProperty.BROWSER_LOGFILE, "null");
		System.setProperty("webdriver.gecko.driver", value);
		driver = new FirefoxDriver();
		driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
		driver.manage().window().maximize();
		driver.navigate().to("http://cnn.com");
		
String part1 ="//*[@id='intl_homepage-zone-1']/div[2]/div/div[3]/ul/li[";
String part2 ="]/article/div/div/h3/a";
int i=2;
String xpath = null;

while(isElementpresent(part1+i+part2, xpath)){
	String text = driver.findElement(By.xpath(part1+i+part2)).getText();
	
	String url =driver.findElement(By.xpath(part1+i+part2)).getAttribute("href");
	if(getresponsecode(url)){
		driver.findElement(By.xpath(part1+i+part2)).click();
	    System.out.println(text+"--"+driver.getTitle());	
	    driver.navigate().back();
	}
	else{
		//report failure
	}
    i++;

  }
	/*	while(getresponsecode("http://google.com")){
			System.out.println("its working");
			break;
		}*/
	}
public static boolean isElementpresent(String locator, String locatortype){
	List<WebElement> allElements=driver.findElements(By.xpath(locator));
	if(allElements.size()==0)
	return false;
	else
	return true;
}
public static boolean getresponsecode(String url1){
	int resp_code=0;
	try{
resp_code = Request.Get(url1).execute().returnResponse().getStatusLine().getStatusCode();
System.out.println(url1+"-->"+resp_code);
} catch (Exception e){
		e.printStackTrace();
	}
	if(resp_code==200){
		
		return true;
	}
	else
	return false;
}}


Dropdown values and Select Class
--------------------------------

SELECT is an inbuilt class. With select class if we pass the webelement of dropdown. then it can
1. select any option
2. extract all values in dropdown
3. dropdown is an option tag with values.
4. So we can use s.getoption() method to extract all list of webelements and gettext
5. Tag option values can either be numberic or anything else depending on the page.
6. SELECT class can select on any dropdown value by its index, visible text or option values
	s.selectByValue("10");
	s.selectByIndex(3);
	s.selectByVisibleText("India");
7. to retrive the text of any selected value, use the function s.getFirstSelectedOption().getText());
8. To select multiple option
	s.selectByIndex(3);
	s.selectByIndex(4);
	s.selectByIndex(5);
	and 
	s.getAllSelectedOptions();  This will print all the selected options

Code:
-----
driver.navigate().to("http://qtpselenium.com/home/contact_trainer");
WebElement dropdown = driver.findElement(By.name("country_id"));
Select s = new Select(dropdown);
//s.selectByValue("10");
s.selectByIndex(3);
//s.selectByVisibleText("India");
System.out.println("Currently Selected---"+s.getFirstSelectedOption().getText());

List<WebElement> options = s.getOptions();
System.out.println(options.size());

for(WebElement e:options){
	System.out.println(e.getText());
}


Radio Buttons
--------------
Remember:
1. Radio buttons have getattribute as selected
2. If selected, is true that means that radio button is selected
3. All radio buttons in a group has same name



Code:
-----
		driver.navigate().to("https://tutorialehtml.com/en/html-tutorial-radio-buttons/");
		List<WebElement> allRadiobutton = driver.findElements(By.name("citizenship"));
		allRadiobutton.size();
		allRadiobutton.get(0).click();
		System.out.println(allRadiobutton.get(0).getAttribute("selected"));	
		System.out.println(allRadiobutton.get(1).getAttribute("selected"));		
		System.out.println(allRadiobutton.get(2).getAttribute("selected"));	

o/p

true or false



Take Screenshots:
-----------------
Remember
1. commons-io-2.6 jar file is required to take screenshots
2. make driver static by initalizing on top
3. takescreenshot function is static and void
4. copy the below code as below


import java.io.File;
import java.io.IOException;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;


public class radiobutton {
static WebDriver driver;
	public static void main(String[] args) {
	
		String value="C:\\Users\\mubeen\\Desktop\\seleniumjars3.8.1\\drivers\\geckodriver.exe";
		System.setProperty(FirefoxDriver.SystemProperty.BROWSER_LOGFILE, "null");
		System.setProperty("webdriver.gecko.driver", value);
		driver = new FirefoxDriver();
		driver.navigate().to("https://tutorialehtml.com/en/html-tutorial-radio-buttons/");
		List<WebElement> allRadiobutton = driver.findElements(By.name("citizenship"));
		allRadiobutton.size();
		allRadiobutton.get(0).click();
		takescreenshot();
		driver.quit();
	}
			public static void takescreenshot(){
			File srcfile =((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
			
			try{ 
				FileUtils.copyFile(srcfile, new File(System.getProperty("user.dir")+"//radio.png"));
				
			}catch(IOException e){
				e.printStackTrace();
			}	
	}}


------------------------------------------------------------------------------------------------------------------------------------------------------

Module14: 45min
---------

What is the difference between Implicit Wait and Explicit Wait
----------------------------------------------------------------

Implicit wait typically waits for all driver actions until the page is loaded and able to find the element or elements
whereas explicit not only waits for the page or wbeelement to load but it also waits for the element to be visible. Selenium will detect elements only if it is visible.
So in certain cases we would require to use explicit instead of implicit.

Also, we can use Thread.sleep(3000) in some cases. Same as explicit wait. But donot have much features like explicit wait.

Remember:-
ExpectedConditions is a class with many inbuilt function, visibility of element is one among them

Code:
-----
		driver.get("http://portfolio.rediff.com/portfolio-login");
		driver.findElement(By.name("email-id")).sendKeys("mubeenali85");
		driver.findElement(By.id("emailsubmit")).click();
		Thread.sleep(3000);
		WebDriverWait wait = new WebDriverWait(driver,10);
		wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.name("passwd"))));
		driver.findElement(By.name("passwd")).sendKeys("Hightime@999");
		driver.findElement(By.id("loginsubmit")).click();
		

O/p
In above code, password field though page was displayed, it was not visibile to selenium. So explicit wait is used 
here so the selenium driver wait explicitly for that particular driver action to wait until the element is displayed




Pageloadtimeout:
-----------------
Pageloadtimeout function is used for selenium to wait before it shows exception because of page load time out. So in this
case it wait for the no.of seconds mentioned  before it shows exception

Code:
driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);


Difference between Implicitwait, Explicit wait, fluent wait and pageloadtimeout
--------------------------------------------------------------------------------

Implicitwait:
An implicit wait tell dom to wait for a certain amount of time when trying to find an element or elements if they are immediately not available

Explicit wait,
An explicit wait - For a certain code to wait until specific condition or behaviour is occured

Fluent wait:  advanced version of explicit wait 
The fluent wait is used to tell the webdriver to wait until the certain condition is occured, also we can customize the frequency
with which to check for the condition occurs with out the code throwing any nosuchelementexception or elementnotvisibleexception

Pageloadtimeout:
pageloadtimeout is the time alloted to a script for a page to load, if the page does not load within this time then a timeout exception is 
thrown and script is stopped

setScriptTimeout:ajax
-------------------------
Waits until all ajax components are loaded in the page to proceed.

Code:
driver.manage().timeouts().setScriptTimeout(20, TimeUnit.SECONDS);


How to avoid POP Ups or Manage PopUps using Set and Iterator()
--------------------------------------------------------------

To manage popup or close all popup windows, we use Set Class. Set is similar to List, it can keep adding data to itself
and can use iterator to iterate among each value

Remember:
1. Set will not add duplicate values
2. Set.size() will not count duplicate values
3. Ierator is used to navigate to each value inside se/t.add()
4. it.hasnext(), will iterate to each value until the list is complete
5. it.next() is used to iterate among each value

Sample Code to understand Set and Iterator
-------------------------------------------

		Set<String> s=new HashSet<String>();
		System.out.println(s.size());
		s.add("India");
		s.add("UK");
		s.add("london");
		s.add("India");
		System.out.println(s.size());
		Iterator<String> it = s.iterator();
		System.out.println(it.next());
		while(it.hasNext()){
			System.out.println("------------------");
			System.out.println(it.next());
}}}

O/p - 
0
3
london
------------------
UK
------------------
India




PopUp Handling using Set Class:
------------------------------
Switches between popups and closes it

Remember:
1. Set<String> WinIds = driver.getWindowHandles();
2. Iterator<String> it = WinIds.iterator();
3. it.next();
4. it.hasnext(); -> //if any other window id's are available
5. driver.switchTo().window(MainWindID);
6. driver.switchTo().defaultcontent;
7. Iterator initally point to no where, when it.next() command is passed. It points to the first value or window ID

Sample Code:
------------
	driver.get("http://naukri.com");

		Set<String> WinIds = driver.getWindowHandles();
		System.out.println(WinIds.size());
			
			Iterator<String> it = WinIds.iterator();
			String MainWindID = it.next();
			String firstpop = it.next();
			String secpop = it.next();
			String thirdpop = it.next();
			System.out.println(MainWindID);
			System.out.println(firstpop);
			System.out.println(secpop);
			System.out.println(thirdpop);
			driver.switchTo().window(firstpop);
			driver.close();
			driver.switchTo().window(secpop);
			driver.close();
			driver.switchTo().window(thirdpop);
			driver.close();
			driver.switchTo().window(MainWindID);
			or
			//driver.switchTo().defaultcontent;   //goes to main page
			Thread.sleep(5000);


Alerts:
--------


Alerts are like message boxes, they are popups. You cannot get the page source for alerts. Best thing is to use
Alert interface and click Ok, dismiss to cancell and then switch back to default content

Remember:
1. There will be only one Alert in a page at a time
2. It is important to switch to default content as we are switching to Alert page

Navigate:
----------
https://mail.rediff.com/cgi-bin/login.cgi
enter unsername and click Go. Alert will be displayed

Alert al = driver.switchTo().alert();
system.out.println(al.getText());
al.accept(); //clicks Ok
al.dismiss();  //clicks cancel
driver.switchTo().defaultcontent;

Or

//in one line
driver.switchTo().alert().accept();
driver.switchTo().defaultContent();


How to wait for Alert to display using Explicit wait:-
------------------------------------------------------

At time, it will take time for alert to load 

WebDriverWait wait = new WebDriverWait(driver,20);
wait.until(Expectedconditions.alertIsPresent());
Alert al = driver.switchTo().alert();

---------------------------------------------------------------------------------------------------------------------------------------------------------

Module15 - Selenium Features-3 2Hours:
---------------------------------------
Frames - 
Page embedded inside another page. If there are multiple frames. need to switch between frames so that driver can detect the webelement.

All frames has tagname as iframe. So detect the no.of frames, can search in page source for iframes tagname.

Remember:
1. int frames= driver.findelements(By.tagname("iframe")).size();  //will give no.of frames in pagesource

Code:

	driver.navigate().to("http://paytm.com");
		driver.findElement(By.xpath("/html/body/div[1]/div/div[2]/div[2]/div[3]/div[3]/div")).click();			//click on login
		int total1 = driver.findElements(By.tagName("iframe")).size();
		System.out.println("total frame1"+"--"+total1);
		//driver.switchTo().frame(0);
		//Thread.sleep(5000);
		//driver.findElement(By.id("input_0")).sendKeys("1234");
		for(int i=0;i<total1;i++){
			driver.switchTo().frame(i);	
			int size = driver.findElements(By.id("input_0")).size();
			if (size==0)					//if size is 0, comeback to main page and then again switch to next frame
				driver.switchTo().defaultContent();
			else
				break;
		}
		//Thread.sleep(5000);
		driver.findElement(By.id("input_0")).sendKeys("123411");
		driver.quit();
	}}



Actions Class and Moving mouse to Interact with WebElement using Actions:
--------------------------------------------------------------------------

Some time you need to hover mouse over a webelement to detect the webelements inside it. In such cases to move 
the mouse over the tab to reflect other webelements, we need to use Actions class


Remember:

1. Actions act = new Actions(driver);
2. act.movetoelement(webelementname).build().perform();
3. It is mandatory to write build().perform() to all actions class


Code:
	driver.get("https://www.americangolf.co.uk");
	WebElement golf=driver.findElement(By.xpath("//*[@id='header-navigation']/div[1]/ul/li[2]/a"));
	Actions act = new Actions(driver);
		act.moveToElement(golf).build().perform();
		WebDriverWait wait = new WebDriverWait(driver,20);
		wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath("//*[@id='CLUBS_1']/ul/li[3]/ul/li/a/span[1]"))));
		driver.findElement(By.xpath("//*[@id='CLUBS_1']/ul/li[3]/ul/li/a/span[1]")).click();
		driver.quit();





Actions Class to Drag and Drop
-------------------------------
Draggable

Remember:
act.dragAndDropBy(e, 100, 100).build().perform();;

Code:
	driver.navigate().to("http://jqueryui.com/draggable");
	driver.switchTo().frame(0);
	WebElement e = driver.findElement(By.xpath("//*[@id='draggable']"));
	Actions act = new Actions(driver);
	act.dragAndDropBy(e, 100, 100).build().perform();;
	driver.switchTo().defaultContent();


Droppabale:
--------------

Remember:
act.dragAndDrop(draggable,droppable).build().perform();

Code:
	driver.navigate().to("http://jqueryui.com/draggable");
	driver.switchTo().frame(0);
	WebElement draggable = driver.findElement(By.xpath("//*[@id='draggable']"));
	WebElement droppable= driver.findElement(By.xpath("//*[@id='droppable']"));
	Actions act = new Actions(driver);
	act.dragAndDrop(draggable,droppable).build().perform();
	driver.switchTo().defaultContent();


O/p
Drag and drop are both frames, but using action class we can simply drop it to droppable destination



Randomly Click on any link:
---------------------------

Random class is used to randomly display any number

Random r = new Random();
r.nextInt(); //will dispay any random number
r.nextInt(100);  //will display random number between 0-99

Same concept is used to click on random links with in the size of links


Code:
	    driver.get("https://www.americangolf.co.uk");
	    WebElement golf=driver.findElement(By.xpath("//*[@id='header-navigation']/div[1]/ul/li[2]/a"));
	    Actions act = new Actions(driver);
		act.moveToElement(golf).build().perform();
		WebElement box = driver.findElement(By.xpath("//*[@id='CLUBS_1']"));
		List<WebElement>links = box.findElements(By.tagName("a"));
		Random r = new Random();
		int n=r.nextInt(links.size());
		System.out.println(links.size());
		System.out.println(n);
		System.out.println(links.get(2).getText());




Webtables - Part3:
-----------------

Webtables will have by default below tags

//table[@class='dataTable'] - represents complete table
//table[@class='dataTable']/thead - represents the heading
//table[@class='dataTable']/tbody - represents the body of table with data
//table[@class='dataTable']/tbody/tr - all rows
//table[@class='dataTable']/tbody/tr/td[5] - each cell in 5th column, driver.findelements


CSS:

.dataTable>tbody>tr:nth-child>td:nth-child(5) -  - each cell in 5th column, driver.findelements

.dataTable = represents //table[@class='dataTable']



Code:

Extract the 4th column cell value associated for a particular company name in column1

		driver.get("https://money.rediff.com/gainers/bse/daily/groupa?src=gain_lose");
		
		String companyname="Thermax";
		
		List<WebElement> Comp = driver.findElements(By.xpath("//table[@class='dataTable']/tbody/tr/td[1]"));
		List<WebElement> price = driver.findElements(By.xpath("//table[@class='dataTable']/tbody/tr/td[4]"));
		
		for(int i=0;i<Comp.size();i++){
			if(companyname.equals(Comp.get(i).getText())){
				System.out.println("Company Name"+"--"+Comp.get(i).getText()+"--Price---"+price.get(i).getText());
			break;
			}
		}


O/p
Company Name--Thermax--Price---1,210.65


Webtable link - http://demo.guru99.com/test/web-table-element.php
Explanation link - https://www.guru99.com/handling-dynamic-selenium-webdriver.html


No.of Columns in table - //table[@id='container']/table/thead/tr/th
No.of Rows in a table - //table[@id='container']/table/tbody/tr/td[1]

------------------------------------------------------------------------------------------------------------------------------------------------------------

Module16 - Selenium Features-5 1.40Hours:
---------------------------------------

Ajax Auto Suggestions: li tag
-----------------------

When we type "hello" in google, the auto suggestions in drop down are Ajax components. These dropdowns has li tags. values can be extracted as follows
.Did not get full code to extract the text

Code:
-------

		driver.get("http://google.com");
		driver.findElement(By.name("q")).sendKeys("hello");
		List<WebElement> box = driver.findElements(By.xpath("//ul[@role='listbox']/li"));
		System.out.println(box.size());
driver.quit();




Cookies:
---------

How to delete cookies
How to rename cookie value
How to display all cookies


Code:
		driver.get("https://cnn.com");
		
		Set<Cookie> cookie = driver.manage().getCookies();
		Iterator<Cookie> it = cookie.iterator();
		while(it.hasNext()){
			Cookie c=it.next();
			System.out.println(c.getName()+"----value"+c.getValue());
			if(c.getName().equals("countryCode")){
				driver.manage().deleteCookie(c);
				Cookie mycookie = new Cookie("countryCode", "UK");
				driver.manage().addCookie(mycookie);
				break;
			}
		
		}


Javascriptexecutor
------------------

Selenium codes in Java/Python interacts with Browser by converting it to JS, at times we can use
JS commands directly to interact with browser as browser understands only JS

For this we use Javascriptexecutor



Part2:

How to upload files
----------------------

driver.findelement(By.xpath("").sendkeys(C://user//mubeen//a.jpg);
http://qtpselenium.com/test/uploadform/contactform.php

If this doesnot work, then use AutoIT. download AutoIT to upload files/JPG's

Not covering AutoIT
XXXXXXXXXXXXXXXXXXXXXXX


Part3, Part4
XXXXXXXXXXXXXXXXXX
did not cover AUTO IT to upload files, file downloading

-----------------------------------------------------------------------------------------------------------------------------------------------------

Module17:
--------
Functions Used in Part1 to Part7, Rediff testcases
--------------------------------------------------

Remember:
1. If unable to click from drop down of search, use Action class to click
Action act = new Action(driver);
act.click(e).build().perform();
here e, is the webelement of the drop down to click

2. To input a int variable inside an xpath   

int day =2;
//input[@id='"+day+"']


Function1: Checks if xpath is valid, by returning the size of a webelement, if it returns 0, then it is no valid path
----------
	public boolean isElementPresent(String xpathExp){
	int s= driver.findElements(By.xpath(xpathExp)).size();
		if(s==0){
		return false;
		}
		else return true;	
	}

Function2: Waits for page to completely and all Ajax components are loaded and status becomes 0
---------------------------------------------------------------------------------------------------
1.pageloadstatus java script

public void waitforpageload() throws InterruptedException{
		JavascriptExecutor js = (JavascriptExecutor)driver;
		int i =0;
		while(i!=10){
		String state = (String) js.executeScript("return document.readyState;");
		System.out.println(state+"---------------");
		if(state.equals("complete")){
			break;
		}
		else
			Thread.sleep(1000);
		i++;
		}
	 i=0;



2.ajax/jquery javascript page status

	while(i!=10){
	Long d=(Long) js.executeScript("return jQuery.active;");
	System.out.println(d+"*************");
	if(d.longValue()==0){
		break;
	}
	else
		Thread.sleep(2000);
	i++;
	}}




Function3: Input a string and the function tells the row in webtable the desired data is present
------------------------------------------------------------------------------------------------
Remember:
1.!cell.getText().trim().equals("") = after trimming cell.gettext(), it should not equal blank

Code:
public int getRowWithCellData(String data){
	List<WebElement> rows=driver.findElements(By.xpath("//table[@id='stock']/tbody/tr"));
	for(int rNum=0;rNum<rows.size();rNum++){
		WebElement row=rows.get(rNum);
		List<WebElement> cells = row.findElements(By.tagName("td"));
		for(int cNum=0;cNum<cells.size();cNum++){
         WebElement cell=cells.get(cNum);
if(!cell.getText().trim().equals("") && data.contains(cell.getText()))
	return ++rNum;
		}}
	return -1;


Function4: Selects a date from Calender, XXXnot working
--------------------------------------------------------

public void selectDate(String d) throws ParseException{
		Date currentDate = new Date();
		System.out.println(currentDate);
	SimpleDateFormat sd = new SimpleDateFormat("dd/MM/yyyy");
	Date formatteddate = sd.parse(d);
		
	String day = new SimpleDateFormat("dd").format(formatteddate);
	String month = new SimpleDateFormat("MMMM").format(formatteddate);
	String year = new SimpleDateFormat("yy").format(formatteddate);
	
	String	desireddate = month+" "+year;

	while(true){
		
	String displayedmonthyear=	driver.findElement(By.xpath("//div[@class='dpTitleText']")).getText();
	
	if(desireddate.equals(displayedmonthyear)){
		System.out.println(displayedmonthyear);
		System.out.println(desireddate);
		driver.findElement(By.xpath("//td[text()='"+day+"']")).click();
			break;
	}else{
		if(formatteddate.compareTo(currentDate) > 0){
			driver.findElement(By.xpath("//*[@id='datepicker']/table/tbody/tr[1]/td[4]/button")).click();
		}else if(formatteddate.compareTo(currentDate) < 0){
		driver.findElement(By.xpath("//*[@id='datepicker']/table/tbody/tr[1]/td[2]/button")).click();
		}}}}
	
Part8:
How to encrypt and decrypt password:
--------------------------------------

Remember:
1. Use base64 class to encode and decode
2. getEncoder() function in Base64 can convert the Bytes password to String
3. Getdecoder() function in Base64 class can decode the password into bytes and later convert to String

Code:	
	String mypassword="pass";
	byte[] message=	mypassword.getBytes(StandardCharsets.UTF_8);
	String encoded=	Base64.getEncoder().encodeToString(message);
	System.out.println(encoded);
	
	byte[] decoded = Base64.getDecoder().decode(encoded);
	System.out.println(new String(decoded, StandardCharsets.UTF_8));
	

o/p:
----
cGFzcw==
pass

1. Encode - Convert String to Bytes and then encode using Base64.getEncoder() the bytes

2. Decode - Use Base64.getDecoder() on the encoded String in Byte format and then conver to string


-----------------------------------------------------------------------------------------------------------------------------------------------------------

Module34 - Java Database Connectivity
---------------------------------------

Remember:
1. mysql connector jar file is required to connect to database
2. driver is nothing but jar file
3. in db connection everything should be in try catch block
4. import java.sql.*;   - import this package would suffice all db needs

Interfaces in JDBC
1. Connection  - it is an interface that helps you connect to db
2. Statement  - Interface helps to fire simple queries
3. PreparedStatement - Interface helps to fire queries with condition
4. where place=?   (value of ? can be passed seprately. need not be with in the query)

Prerequisite:
1. Open xampp controller from C:\xampp
2. click start on mysql to start the db

In cmd:
-------
1. mysql bin folder path - C:\xampp\mysql\bin
2. cd C:\xampp\mysql\bin
3. mysql -u root
4. show databases;
5. create database testing;
6. use testing;
7. show tables;
8. CREATE TABLE EMPLOYEE(NAME VARCHAR(50),PRICE VARCHAR(50), AGE INTEGER);
9. INSERT INTO EMPLOYEE VALUES('MUBEEN','TIGARD',32);
10. INSERT INTO EMPLOYEE VALUES('FEBIN','TIGARD',26);

To change password:
-------------------
cd C:\xampp\mysql\bin
mysqladmin.exe -u root password NEWPASS


Code: Working
--------------

import java.sql.*;
public class dbConnection {
	public static void main(String[] args) throws SQLException {
	Connection conn=null;	
	
	  String url = "jdbc:mysql://localhost:3306/";
	  String driver = "com.mysql.jdbc.Driver";   //driver class inside mysql jar
	  String dbName = "testing";
	  String username="root";
	  String password="root";
	
	try{
	//connect to db
		//create object of driver class
		Class.forName(driver).newInstance();  //creates object of Driver class. no need to write new object
		//initialize the connection
		conn=DriverManager.getConnection(url+dbName, username, password);
		System.out.println(conn.isClosed());
		
		//fire queries
		Statement st=conn.createStatement();
		ResultSet rs = st.executeQuery("select * from employee");
		
	while(rs.next()){
		System.out.println(rs.getString(1)+" -- "+rs.getString("Name")+" -- "+rs.getString("Place")+" -- "+rs.getString("AGE")+" -- "+rs.getInt(3));
	}
	
	//st.executeUpdate("INSTER INTO EMPLOYEE VALUE('PAPPA','LONDON',60)"); //to update tables
	System.out.println("***************************************************");

	//prepared statement
	PreparedStatement ps = conn.prepareStatement("select * from EMPLOYEE where place=? and age=?");
	ps.setString(1, "CALICUT");
	ps.setInt(2, 14);
	rs = ps.executeQuery();
	
	while(rs.next()){
	System.out.println(rs.getString(1));
	}

	ps.executeUpdate("INSERT INTO EMPLOYEE VALUES('Ali','India',35)");
	
	/*********executing store procedures and callable statement***************************/

	}catch(Exception e){
		e.printStackTrace();
	}finally{
		if((conn!=null) && (!conn.isClosed())){
			conn.close();
	}}}}



Module35:
----------
SkippedXXXX - Module34 is enough

============================================================================================================================================================
===================================================================STARTING FRAMEWORKS FROM NOW=============================================================

-----------------------------------------------------------------------Data Driven Framework by Naveen-------------------------------------------------------


Video1: Simple Java Proj on how to read data from excel

1. Copy XLS_Reader to utility package from Video1 link in Naveen
2. create a package com.excel.utility
3. Create java class and copy XLS_reader.Java, rename to import com.excel.utility
4. Once all Jars are uploaded related Apached POI, the error will go
5. Download Apache POI apache from poi.apache.org
6. Downlaod tar file from Binary distribution
7. unzip and upload the jar files by going to properties/ java build path / external jar files


8. create a package com.datadriven.test
9. create a class DataDrivenTest.Java

10.Create excel sheet
11. Tab name - RegTestData
12. create columns firstname, lastname, address, emailadd etc   (no space in col names)
13. Save the file, halfebaytestdata.xlsx   (save it with xlsx only)
14. Automate Registration on www.half.ebay.com


15. create a package com.testdata  (copy the excel file with test data here)

16. create a package com.test, create a class DataDrivenTest
17. write following code in DataDrivenTest.Java

Code: Reading one row of data
----------------------------------
Ex: firstname lastname age address1 address2
    mubeen    ali      30  downtown LO

public static void main(String args[]){

XLS_Reader reader = new XLS_Reader("path of test data in eclipse");

String firstname = reader.getCellData("Sheet Name","Col Name",2);    //2 is row number
syso(firstname);

String lastname = reader.getCellData("Sheet Name","Col Name",2);
syso(lastname);

String Address1 = reader.getCellData("Sheet Name","Col Name",2);
syso(Address1);

String Address2 = reader.getCellData("Sheet Name","Col Name",2);
syso(Address2);

System.setProperty("webDriver.Chrome.Driver","exe file path");
WebDriver driver = new ChromeDriver();
driver.get("half.ebay.com registeration link");

driver.findElement(By.xpath("@id='FirstName'")).sendKeys(firstname);
driver.findElement(By.xpath("@id='LastName'")).sendKeys(lastname);
driver.findElement(By.xpath("@id='Address'")).sendKeys(addresstname);

}


Video2:

Code : Parameterization - Reading multiple rows from excel file
---------------------------------------------------
Ex: firstname lastname age address1 address2
    mubeen    ali      30  downtown LO
    naznin    ali      4   down     LO
    feb       pa       25  downtown LO


public static void main(String args[]){

System.setProperty("webDriver.Chrome.Driver","exe file path");
WebDriver driver = new ChromeDriver();
driver.get("half.ebay.com registeration link");

XLS_Reader reader = new XLS_Reader("path of test data in eclipse");
int rowCount = getRowCount("SheetName");  //gives total rows

for(int rowNum=2; rowNum<=rowCount;rowNum++){

String firstname = reader.getCellData("Sheet Name","Col Name",rowNum);    //2 is row number
syso(firstname);

String lastname = reader.getCellData("Sheet Name","Col Name",rowNum);
syso(lastname);

String Address1 = reader.getCellData("Sheet Name","Col Name",rowNum);
syso(Address1);

String Address2 = reader.getCellData("Sheet Name","Col Name",rowNum);
syso(Address2);

driver.findElement(By.xpath("@id='FirstName'")).cler();
driver.findElement(By.xpath("@id='FirstName'")).sendKeys(firstname);
driver.findElement(By.xpath("@id='LastName'")).clear();
driver.findElement(By.xpath("@id='LastName'")).sendKeys(lastname);
driver.findElement(By.xpath("@id='Address'")).clear();
driver.findElement(By.xpath("@id='Address'")).sendKeys(addresstname);


}


How to Add a column Status and update each row of data as Pass/Fail
----------------------------------------------------------------------

Ex: firstname lastname age address1 address2 Status
    mubeen    ali      30  downtown LO		Pass
    naznin    ali      4   down     LO		Pass
    feb       pa       25  downtown LO		Pass

note: for writing on excel, ensure it is closed

Code:

public static void main(String args[]){

System.setProperty("webDriver.Chrome.Driver","exe file path");
WebDriver driver = new ChromeDriver();
driver.get("half.ebay.com registeration link");

XLS_Reader reader = new XLS_Reader("path of test data in eclipse");
int rowCount = getRowCount("SheetName");  //gives total rows

reader.addColumn("SheetName","ColName");				//this code will add col name Status at the end

for(int rowNum=2; rowNum<=rowCount;rowNum++){

String firstname = reader.getCellData("Sheet Name","Col Name",rowNum);    //2 is row number
syso(firstname);

String lastname = reader.getCellData("Sheet Name","Col Name",rowNum);
syso(lastname);

String Address1 = reader.getCellData("Sheet Name","Col Name",rowNum);
syso(Address1);

String Address2 = reader.getCellData("Sheet Name","Col Name",rowNum);
syso(Address2);

driver.findElement(By.xpath("@id='FirstName'")).cler();
driver.findElement(By.xpath("@id='FirstName'")).sendKeys(firstname);
driver.findElement(By.xpath("@id='LastName'")).clear();
driver.findElement(By.xpath("@id='LastName'")).sendKeys(lastname);
driver.findElement(By.xpath("@id='Address'")).clear();
driver.findElement(By.xpath("@id='Address'")).sendKeys(addresstname);


reader.setData("RegTestData", "Status", rowNum, "Pass");   		//status is col name  //this will help in updating row as Pass/Fail


}
 


How to add sheet
-----------------
reader.addSheet("New Sheet Name");

To check if Sheet exist
----------------------

if(!reader.isSheetExist("SheetName"){
reader.addSheetName("SheetName");
}

How to get the total columns in a tab
--------------------------------------
reader.getColumnCount("SheetName");



Video3:
Using @DataProvider and fetching data from Excel
-------------------------------------------------

1. Create a testng test case


@BeforeMethod
public void setUp(){

//WebDriver Setup here
}

-----------

@AfterMethod
public void tearDown(){
driver.quit();
}

--------------------

@Test(DataProvider="getData")
public void testcase1(String firstname, String lastname, String Address1, String Address2){

driver.findElement(By.xpath("@id='FirstName'")).sendKeys(firstname);
driver.findElement(By.xpath("@id='LastName'")).sendKeys(lastname);
driver.findElement(By.xpath("@id='Address1'")).sendKeys(address1);
driver.findElement(By.xpath("@id='Address2'")).sendKeys(address2);
}

---------------


@DataProvider
public Iterator<Object[]> getData(){

ArrayList<Object[]> testData = TestUtil.testDataFromExcel();

return testData.iterator();

}



2. Create another package for TestUtility and create a static TestUtil
this will contain the method to fetch data from excel


public class TestUtil{

static Xls_Reader reader;
public static ArrayList<Object[]> testDataFromExcel(){

ArrayList<Object[]> myData = new ArrayList<Object[]>();

try{
reader = new XLS_Reader("path of testdata excel file");

}
catch(Exception e){
e.printstackrace();
}

for(int rowNum=2; rowNum<=rowCount;rowNum++){

String firstname = reader.getCellData("Sheet Name","Col Name",rowNum);    //2 is row number
String lastname = reader.getCellData("Sheet Name","Col Name",rowNum);
String Address1 = reader.getCellData("Sheet Name","Col Name",rowNum);
String Address2 = reader.getCellData("Sheet Name","Col Name",rowNum);

Object[] obj = {firstname,lastname,address1,address2};

return myData(obj); 
}
}


Video4:
Use @Parameter to read environment variables from TestNg.xml

ususally @Paramter is used for env variables which are generic like browsername, url and email id etc



1. Create TestNG.xml

add Parameter tags like below 

<parameter name = "browser" value = "chrome"/>
<parameter name = "url" value = "www.google.com"/>
<parameter name = "emailid" value = "mubeen85@gmail.com"/>

<classes>
<class name = "com.testcase1" />
</classes>



2. 

@Test
@Parameter{"browser","url","emailid"}
public void testcase1(String browser, String url, String emailid){

if(browser.equals("chrome"){
driver = new ChromeDriver();
driver.get(url);
driver.findElement(By.xpath("@id='email'")).sendKeys(emailid);

}


Video-4
Data from WebTable copying to Excel - Nothing great in this video


----------------------------------------------------------------------HYBRID FRAMEWORK-----------------------------------------------------------------------


Module21 - Hybrid Framework
----------------------------
Framework - creating an outside structure, creating provision for reporting, logs, reading data from xls

Hybrid Requirement:
-------------------
1. Maven project
2. Read data from xls
3. implement test and validation
4. Report - XSLT , Extent
5. Loggin in reports
6. Screenshots - putting in reports
7. Run proj in ANT/MAVEN
8. Implement Grid
9. Reusabuility
10. Diff environemtn - Prod, Test
11. Integrate with Jenkins
12. Emailing reports
13. Implement keyword effectively
14. Easy to change


Steps to follow:
1. Create Maven Project
2. Create packages
3. Creat dummy test
4. Built generickeywords class
5. reading locators from property file
6. make common function for element extraction (getelement(String locatorykey))
7. implemented keyword function
8. read parameters from property file
9. execute test and associated keywords from xls
10.convert keywords to executekyword fucntion and call the keywords class from gmailtest
11. Create extent report
12. Create reportfailure and takescreenshot function
13. return type for keyword functions
14. central codde to report errors
7. Introduce dependency
8. Make testng.xmlfor batch running
6. Built base test and functions in base test
7. Build validation function	
8. Built generic function
9. build report generation function
10. initiate the properties file
11. build centralized/reusable functions to extract objects
12. generate reports and loggin in reports
13. put screenshots in report
14. genearating reports for each run
15. build validation function
16. softassertion - prevent test to stop for minor issues
17. reading data from xls - parametrizing
18. build utility function for reading data
19. selectively/optionally run


Create Maven project:
===============================
1. create a folder hybrid1 -> cd C:\Users\mubeen\hybrid1
2. mvn archetype:generate
3. groupid: com.qtpselenium.core.hybrid
4. artifactid: CORE_Hybrid_Framework
5. hit enter enter yes
6. Project will be created here C:\Users\mubeen\hybrid1\CORE_Hybrid_Framework
7. replace pom.xml with current and latest pom.xml -  dependencies for tetsng, java emailign, reports, selenium jars, extent reports
8. cd C:\Users\mubeen\hybrid1\CORE_Hybrid_Framework
9. mvn compile   -> all jars as per pom.xml will be downloaded to M2_REPO path
10. mvn eclipse:eclipse   -> WIll convert project to classpath recogonizable by eclipse
11. Go to eclipse, file -> import - existing projects -> import the project to eclipse
12. In eclipse, under reference libraries, all the downloaded jars will be present
13. src/test/java  -> Testcases will be placed
14. src/main/java  -> Utility files are placed


Should be able to reuse the frame work for any website

2. Create packages
===================
1. In src/test/java folder, create packages com.qtpselenium.hybrid and com.qtpselenium.hybrid.testcases - Testcases.java, BaseTest.java
2. In src/main/java  folder, create packages - com.qtpselenium.hybrid  - Generickeywords.java, Keywords.java, Appkeywords.java
					       com.qtpselenium.hybrid.util - XLS_Reader, Constants, ExtentManager.java,DataUtil.java etc
					       com.qtpselenium.com.hybrid.mail - sendmail, filefilterdatautil,zip.java - all 3 files to send email
3. In src/test/resources - create project.properties, suiteA.xml, suiteB.xml, testng.xml, test-results.xsl file

3. Creat dummy test
=====================
create a simple GmailLogin test inside src/test/java folder
Create basic gmail login test code

a. write element present after each line of code
b. we need to read data from xls file
c. we need to run the script in different browser
d. xpaths should be in propertiesfile
e. username, password - Should be kept in xls
f. xpath, environment - data which doesnot change freq is kept in properties file
g. properties file is central file where all locators are kept


4. Built in generickeywords class
=======================================

In src/main/java, packages com.qtpselenium.hybrid - create 2 classes Keywords.java and generickeywords.java

In Generickeywords - general functions are created
------------------
openbrowser, 
navigate,
click, 
input, 
verify title, 
verify text


public openBrowser(String browser type){
if browser-mozilla{
open mozilla
}
else if broswer=chrome{
then open chrome
}
}
public navigate(String url){
driver.get(url)
}
public click(String locator){
}
public input(String locator, String data){
}
public verifytext(String locator, String expectedtext){
}


In keywords.java class - 
------------------------------
Executekeywords function is created based on keywords read from xls and called in keywords.java which then navigates to generickeywords.java and appkeywords.java.
The functions are implemented above in generickeywords

Important:
-----------
Actual flow is - Testcase ---> Keywords ---> generickeywords
By writing keywordws class -  we can reuse it in another testcases


public class Keywords {
public static void main{String [args]{
Generickeywords app = new Genericskeywords();
app.openBroswer("Mozilla")
app.navigate("http://google.com")
app.click("loctor of gmail");
app.input("Email","mubeen85");
app.click("next");
}}


5. Reading locators from properties file
==============================================

In keywords.java, values should not be hard code locators as shown above instead use properties file

in properties file - type of locator is mentioned as _xpath, _css, _id

In source folder  src/test/resources - create project.properties file

url=http://google.com
gmailink_xpath=	//a[gmail]
email_id=Email
nextButton_id=next


Now in Keywords.java, all values replaced by key from properties file

app.openBroswer("Mozilla")
app.navigate(url)
app.click("gmaillink_xpath");
app.input("email_id","mubeen85");
app.click("nextButton_id");



In generickeywords class, we are passing key value from properties file instead of values direclty. Generickeywords functions will be capable enough to get the value from key using prop.getproperty(key)

So need to initalize properties class in generickeywords and also replace parameter to key names

In generickeywords class
-------------------------
1. Declare properties prop
2. create a constructor of generickeywords.
3. so in keywords class if object of generickeywords is created, it will go inside the generickeywords construcotr
4. properties object prop is initalized
5. then goes to generickeywords, functions executed. Keys read from properties file
5. prop.getproperty(urlkey)  - gets the value of the key


public geneickeywords{
prop = new Properties();
FileInputStream fs = new FileInputStream(system.getproperty("user.dir")+"//src/test/resources/project.properties")
prop.load(fs);
}


public generickeywords
public openBrowser(String browsertype){
if browser-mozilla{
open mozilla

}
else if broswer=chrome{
then open chrome
}
}

public void navigate(String urlkey){
syso("navigating to url"+prop.getproperty(urlkey))
//driver.get(url)
}

public void click(String locatorkey){
syso("clicking on"+prop.getproperty(locatorkey))
}

public void input(String locatorkey, String datakey){
syso("typing in "+prop.getproperty(locatorkey))
}

public void verifytext(String locatorkey, String expectedtext){

}


6.common Function for element extaction: getElement(String locatorkey)
=======================================================================

Create function to click based on xpath or id as per the _xpath/_id in properties file
------------------------------------------------------------------------------------

To avoid writing driver.findelement(BY.id) or By.xpath in each functions implemented in Generickeywords class
A function is created for this task

public webelement getelement(string locatorkey){
Webelement e=null;

try{
if(locatorykey.contains("_xpath"))
driver.findelement(by.xpath(prop.getpropert(locatorykey)))
}

if(locatorykey.contains("_id"))
driver.findelement(by.id(prop.getpropert(locatorykey)))
}
if(locatorykey.contains("_name"))
driver.findelement(by.name(prop.getpropert(locatorykey)))
}
}catch (Exception e){
Asert.fail("failure in element extraction"+locatorykey)
}

return e;
}


And functions implemented in generickeywords will be updated like below:

public navigate(String urlkey){
Webelement e = getelemenet(urlkey)
e.click();
}
-------------------------------------------------------------------------------


7.Keywords in keywords.java class generally called from xls file
===============================================================
1. Create a folder data 
2. create 3 excel files SuiteA, SuiteB, SuitC
3. In suiteA , create a tab called keywordssheet

tabname = keywords

TCID	   Description	Keyword	     	object			data
----------------------------------------------------------------------------
GmailTest		openBrowser				chrome
GmailTest		navigate	url	
GmailTest		click		gmailLink_xpath	
GmailTest		click		signIn_xpath	
GmailTest		input		email_xpath		mubeen85
GmailTest		click		nextButton_xpath	
GmailTest		closeBrowser		


1. Object columns will have keys in propertiesfile
2. Copy xls_reader file In src/main/java  folder, com.qtpselenium.hybrid.util
3. instead of writing in Keywords class like below

app.openBroswer("Mozilla")
app.navigate(url)

We are going to read the keywords from xls file

In keywords.java
--------------------
String testunderexecution = gmailtest;
Generickeywords app = new Genericskeywords();
Xls_Reader xls  = new Xls_Reader(System.getproperty(user.dir)+"//data//SuiteA.xls")
int rows = xls.getrowcount("keywords")

for (int rnum=2;rnum<rows;rnum++){

String TCID = xls.getcelldata("keywordsheet","TCID",rNUm);
if (TCID.equals(testunderexecution)){
String Keywords= xls.getcelldata("keywordsheet","keywords",rNUm);
String Objects= xls.getcelldata("keywordsheet","object",rNUm);
String data= xls.getcelldata("keywordsheet","data",rNUm);
syso(TCID+Keywords+Object+data)
}}

In order to run the above script only for TCID=gMail test, we create a variable testunderexecution=gmailtest
So now keywords, object, data will be read only TCID is matched with testunderexecution

So now since all data is read from xls, we execute functions based on keywords read from SuiteA file

in Keywords.class
--------------------
if(keywords.equals("openBrowser"))
app.openBrowser(data)
if(keywords.equals("navigate"))
app.openBrowser(object)
if(keywords.equals("click"))
app.navigate(object)
if(keywords.equals("input"))
app.input(object,data)

if(keywords.equals("closebrowser"))
app.closebrowsers()

---------------------------------------------

8. Contants.java created in Src/main/java - com.qtpselenium.hybrid.util package
================================================================================
we create Contants.class, where all contants are stored for easy maintenance

package com.qtpselenium.hybrid.util;

public class Constants {
	public static final String SUITEA_XLS = System.getProperty("user.dir")+"\\data\\SuiteA.xlsx";
	public static final String KEYWORDS_SHEET = "KeywordSheet";
	public static final String TCID_COL="TCID";
	public static final String KEYWORD_COL="Keyword";
	public static final String OBJECT_COL="object";
	public static final String DATA_COL="data";
	public static final String REPORT_PATH = "C:\\Users\\mubeen\\Desktop\\Reports\\";
}

in Keywords.java
-------------
instead of 
Xls_Reader xls  = new Xls_Reader(System.getproperty(user.dir)+"//data//SuiteA.xls")

new will be
Xls_Reader xls  = new Xls_Reader("Contants.SUITEA_XLS")

Similarly, column names can be stored in Contants class for easy maintainability


In keywords class

String TCID = xls.getcelldata(Contants.Keywords_Sheet,Contants.TCID_COL,rNUm);
if (TCID=testunderexecution){
String Keywords= xls.getcelldata(Contants.Keywords_Sheet,Contants.Keywords_COL,rNUm);
String Objects= xls.getcelldata(Contants.Keywords_Sheet,Contants.Object_Col,rNUm);
String data= xls.getcelldata(Contants.Keywords_Sheet,Contants.data_col,rNUm);
syso(TCID+Keywords+Object+data)
}
}

------------------------------------------------

9. Creating Dummy testcase gmailtest - In src/test/java
=====================================
Till now keywords.class was considered like main function, but in real time that is not the case

Gmail Test (dologin test) ----------->   Keywords.java (executeKeywords function) -----------------> Generickeywords.java (all functions implemented)

GmailTest:
----------
public gmailTest{
String testname = "gmailtest"
@Test
public void doLogin(){
Xls_Reader xls  = new Xls_Reader("Contants.SUITEA_XLS")

Keywords app = new Keywords();
app.executekeywords(testname, xls);

}}

Keywords:
----------
Create function executeKeywords

public keywords{

public void executekeywords(String testunderexecution, Xls_Reader xls)

GenericKeywords app = new Generickeywords();
String TCID = xls.getcelldata(Contants.Keywords_Sheet,Contants.TCID_COL,rNUm);
if (TCID=testunderexecution){
String Keywords= xls.getcelldata(Contants.Keywords_Sheet,Contants.Keywords_COL,rNUm);
String Objects= xls.getcelldata(Contants.Keywords_Sheet,Contants.Object_Col,rNUm);
String data= xls.getcelldata(Contants.Keywords_Sheet,Contants.data_col,rNUm);
syso(TCID+Keywords+Object+data)
}
if(keywords.equals("openBrowser"))
app.openBrowser(data)
if(keywords.equals("navigate"))
app.openBrowser(object)
if(keywords.equals("click"))
app.navigate(object)
if(keywords.equals("input"))
app.input(object,data)

if(keywords.equals("closebrowser"))
app.closebrowsers()

}}

-----------------------------------------

10. Create Extent Reports
==========================
1. Copy ReportsConfig.xml file in project main folder
2. Copy ExtentManager.java file in src/main/java/hybrid.util
3. In ExtentManager class, we declare the path where the report should be generated
4. initalize -- 
	ExtentReports rep = ExtentManager.getInstance();
5. inside the test -- 
	ExtentTest test = rep.startTest(testname);

6. Main commands in ExtentReports:
   test.log(logstaus.info,"Starting gmail login test");
   test.log(logstaus.PASS,"Passed");
   test.log(logstatus.FAIL,"failure message");   //this can be given instead of assert.fail (in place ofexceptions catch)
   test.log(logstatus.skip,"Skipping the tets");
   test.log(logstatus.info,test.addscreenshot("path of screenshot"))

8. At the end, it is import to end the test from extent reports like below
 
@AfterTest
public void quittest();
 rep.endtest(testname);
 rep.flush();

9. To generate reports with filename based on dates and newest on top

In ExtendManager.java class below code is required
Date d=new Date();
String fileName=d.toString().replace(":", "_").replace(" ", "_")+".html";
extent = new ExtentReports(Constants.REPORT_PATH+fileName, true, DisplayOrder.NEWEST_FIRST);

10. Reports path can be placed in Constants.java class

from GmailTest.java:
--------------------

public gmailTest{
String testname = "gmailtest"

ExtentReports rep = ExtentManager.getInstance();
@Test

public void doLogin(){

ExtentTest test = rep.startTest(testname);
test.log(logstaus.info,"Starting gmail login test");

Xls_Reader xls  = new Xls_Reader("Contants.SUITEA_XLS")
Keywords app = new Keywords();
test.log(logstaus.info,"execute keywords");
app.executekeywords(testname, xls);
test.log(logstaus.PASS,"Passed");
}}


11. till now, we could only generate reports and its log at test case gmailTest level. 
How to create reports for Keywords and GenericKeywords


in gmail Test, when Keywords class object is created, pass the ExtentTest test into it like below

Keywords app = new Keywords(test);


In Keywords.class
---------------------
declare on top
ExtentTest test;     //global declaration

Also create a constructor, so when the Keywords class is called anywhere with test passed to it, then the constructor in Keywords is called

public Keywords(ExtentTest test){
this.test = test;           //test variable from gmailtest comes to constructor and it is assigned to the global test variable this.test in Keywords.class
}

So where system.out.println used in Keywords can be replaced with test.log(logstatus.info..)

syso(TCID+Keywords+Object+data) can be replaced by
test.log(LogStatus.INFO,tcid+" -- "+keyword+" -- "+object+" -- "+data ); 


12. In generickeywords, Similarly to step11, same logs should be generated insider generickeywords where functions are implemented


In Keywords.class:
----------------------

GenericKeywords app = new Generickeywords(test);


in generickeywords
----------------------

ExtentTest test;

public geneickeywords(Extenttest test){
this.test = test;  		//test variable from gmailtest comes to constructor and it is assigned to the global test variable this.test in Keywords.class
prop = new Properties();
FileInputStream fs = new FileInputStream(system.getproperty("user.dir")+"//src/test/resources/project.properties")
prop.load(fs);
}


public generickeywords

public openBrowser(String browsertype){

if browser-mozilla{
test.log(logstatus.info,"open browser")
open mozilla
}
else if broswer=chrome{
then open chrome
}
}

public navigate(String urlkey){
test.log(logstatus.info,"navigating to url"+prop.getproperty(urlkey))
//syso("navigating to url"+prop.getproperty(urlkey))
//driver.get(url)
}


-------------------------------------

11.Function: Takescreenshot() and reportFailure()
====================================================
takescreenshot() and reportFailure() is created and called in GenericKeywords.java whenever there is a failure

For ex, in genericKeywords - GetElement() is catch block if we want to report a failure on locatorkey not available

In GenericKeywords class
------------------------

public webelement getelement(string locatorkey){
Webelement e=null;
try{
if(locatorykey.contains("_xpath"))
driver.findelement(by.xpath(prop.getpropert(locatorykey)))
}nt(by.name(prop.getpropert(locatorykey)))
}
}catch (Exception e){
//Asert.fail("failure in element extraction"+locatorykey)
//test.log(logstatus.info,"Element not found"+locatorkey)
reportFailure("Element not found"+locatorykey);         <---------------
}
return e;
}


public void reportFailure(String failuremessage){
takescreenshot();
test.log(logstatus.fail,failuremessage))
}


public void takeScreenshot(){
Date d = new Date();
		String screenshotFile=d.toString().replace(":", "_").replace(" ","_")+".png";
		String path=Constants.SCREENSHOT_PATH+screenshotFile;
		// takescreenshot
		File srcFile = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);
		try {
			FileUtils.copyFile(srcFile, new File(path));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		test.log(logstatus.info,test.addscreenshot("path of screenshot"))
		}



important:
12. Now that we created the reportFailure() function in GenericKeywords, how can it be used in gmailTest class
================================================================================================================

Architecture is like this
Gmail Test (dologin test) ----------->   Keywords.java (make Generickeywords app global) -----------------> Generickeywords.java (reportFailure())



In keywordsclass create a function
-----------------------------------
public keywords{

GenericKeywords app;
app = new GenericKeywords(test);

----
---
----

public GenericKeywords getgenericKeywords(){
return app
}


In Gmailtest class,
-----------------------

Keywords app = new Keywords(test);

app. = below app is keywords app which calls getgenerickeywords() which returns app of generickeywords class and then calls reportfailure and takescreenshotfunction
app.getGenericKeywords().reportFailure("Failuremessage");   //this report failure will automaticlly take screenshots


Question may arise, why reportfailure cannot beused like other functions in generickeywords. Report failure is needed anytime in gmailtest
so in that case we need to create the generickeywords app return function in keywords class as shown above

-------------------------------------------------------------


13. Separate project - Reading data sets from xls
============================================
Tab=TestCases

TCID 	RunMode
TestA	Y
TestB	N
TestC	N


Tab=Data
TestA
RunMode Col1  Col2 	Col3
Y	a1	a2	a3
N	a4	a5	a6
N	a7	a8	a9


TestB
RunMode Col1  Col2
Y	b1	b2
N	b4	b5
	

Xls_Reader xls = new XLs_Reader(path);

string sheetName = "Data";
string testCaseName = "TestB"

teststartrownum=1
while(xls.getcelldata(sheetname,0,teststartrownum).equals(testCaseName)){
teststartrownum++;
}
int colstartrownum = teststartrownnum+1;
int datastartrownum = teststartrownnum+2;

//count total no.of rows
int rows=0;

while(xls.getcelldata(sheetname,0,datastartrownum).equals(""){
rows++;
}
syso("total data rows"+rows)

//count total columns
int cols=1;
while(xls.getcelldata(sheetname,col-1,colastartrownum).equals(""){
colss++;
}

syso("total cols "+cols)


//now you have rows and cols, read the data


for(int rNum=datastartrownum;rNum<datastartrownum+data;rNum++){
for(int cNum=0;cNum<cols;cNum++){
syso(xls.getcelldata(sheetName,cNum,rNum));
}}
//this will print all the data


Now, data from xls is not printed in real time,. instead it is fed to data provider


@Test(DataProvider="getData")
public void testing(String runmod,string col1, string col2){
}


@DataProvider
public object[][] getData(){

Xls_Reader xls = new XLs_Reader(path);

string sheetName = "Data";
string testCaseName = "TestB"

teststartrownum=1
while(xls.getcelldata(sheetname,0,teststartrownum).equals(testCaseName)){
teststartrownum++;
}
int colstartrownum = teststartrownnum+1;
int datastartrownum = teststartrownnum+2;

//count total no.of rows
int rows=0;

while(xls.getcelldata(sheetname,0,datastartrownum).equals(""){
rows++;
}
syso("total data rows"+rows)

//count total columns
int cols=1;
while(xls.getcelldata(sheetname,col-1,colastartrownum).equals(""){
colss++;
}

syso("total cols "+cols)

Object[][] d = new Object[rows][cols];
//now you have rows and cols, read the data
int dataRow=0;

for(int rNum=datastartrownum;rNum<datastartrownum+data;rNum++){
for(int cNum=0;cNum<cols;cNum++){
syso(xls.getcelldata(sheetName,cNum,rNum));

data[dataRow][cNum] = xls.getcelldata(sheetName,cNum,rNum);
}
dataRow++
}
return data[][];
}

But above logic in testcase to read the data, we need to keep changing parameters. instead we use hashtable which acts as a bag

Hashtable has key value pair and it will store each set of record in 1 column by creating a new hashtable


hashtable1  = Runmode = Y
	      col1 = A1
	      col2 = A2
	      col3  = A3

hashtable1  = Runmode = Y
	      col1 = A4
	      col2 = A5
	      col3  = A6

hashtable1  = Runmode = N
	      col1 = A1
	      col2 = A2
	      col3  = A3


In data provoder

Object[][] data=new Object[rows][1];

Hashtable()<String,String> table = null;


for(int rNum=datastartrownum;rNum<datastartrownum+data;rNum++){
table = new Hashtable()<>; //hash table table is created newly for each row
for(int cNum=0;cNum<cols;cNum++){
String key = xls.getcelldata(sheetName,col,colstartrownum));
String valie = xls.getcelldata(sheetName,cNum,rNum));

table.put(key,value)
}
data[datarow][0]=table;
dataRow++
}
return data;
}


@Test(DataProvider="getData")
public void testing(Hashtable<> data){
syso(data.get("runmod") +data.get("col1")+data.get("col2")+data.get("col2")) ;   //column names are the keys
}


---------------------------------------------------------

Now, coming back to gmail test


GmailTest:
----------

public gmailTest{
String testname = "gmailtest"
Xls_Reader xls  = new Xls_Reader("Contants.SUITEA_XLS")

@Test(Dataprovider="getdata")
public void doLogin(Hashtable<> data){

if(data.get("runmod").equals("N"))}
test.log(logstatus.skip,"Skipping the tets");

throw new skip exception("Skipping test");
}

ExtentTest test = rep.startTest(testname);
test.log(logstaus.info,"Starting gmail login test");

Xls_Reader xls  = new Xls_Reader("Contants.SUITEA_XLS")
Keywords app = new Keywords();
test.log(logstaus.info,"execute keywords");
app.executekeywords(testname, xls);
test.log(logstaus.PASS,"Passed");
}}




Now, in realtime we dont create dataprovider like this for each test like gmailtest

instead, 
create a class DataUtil in src/main/java/hybrid1.util


public class DataUtil{
public static object[][] getdata(Xls_reader xls, String testname)
write above code to read data from xls.........
}



---


@DataProvideer
public object[][] getdata{
return DataUtil.getdata(xls,testname);
}

---------------------------


Now data is in hashtable, how to read that data instead of data column in Keywordsheet


tab = Keywordsheet
TCID	Description	Keyword		object			data

GmailTest		openBrowser				chrome(REPLACE WITH KEY BROWSER FROM BELOW)
GmailTest		navigate	url	
GmailTest		click		gmailLink_xpath	
GmailTest		click		signIn_xpath	
GmailTest		input		email_xpath		mubeen85(REPLACE WITH KEY USERNAME FROM BELOW)
GmailTest		click		nextButton_xpath	
GmailTest		closeBrowser		


tab=data

GmailTest			
Runmode	Browser		Username	Password
Y	Mozilla		mubeen85	Hightime
N	Chrome		U2		P2
N	Mozilla		U3		P3


In gmailtest class,
---------
pass the hashtable data

app.executekeywords(testname,xls,data);    //pass the hash table data


In Keywords class,
------------------

public void executekeywords(String testunderexecution, xls_reader xls, Hashtable<> testdata)

if (TCID=testunderexecution){
String Keywords= xls.getcelldata(Contants.Keywords_Sheet,Contants.Keywords_COL,rNUm);
String Objects= xls.getcelldata(Contants.Keywords_Sheet,Contants.Object_Col,rNUm);
String key = xls.getcelldata(Contants.Keywords_Sheet,Contants.data_col,rNUm);  
String data = testdata.get(key);    //browser and username will act as key and corresponding value is retrieved from data sheet
syso(TCID+Keywords+Object+data)
}



14. How to optionally run the testcases
============================================


tab1 = TestCases
tab2 = Keywords
tab3 = Data


tab1 = TestCases

TCID   			Runmodes
gmailTets		Y
Facebooktest		N
xyztest			N


tab2 = Keywordsheet
TCID	Description	Keyword		object			data

GmailTest		openBrowser				chrome(REPLACE WITH KEY BROWSER FROM BELOW)
GmailTest		navigate	url	
GmailTest		click		gmailLink_xpath	
GmailTest		click		signIn_xpath	
GmailTest		input		email_xpath		mubeen85(REPLACE WITH KEY USERNAME FROM BELOW)
GmailTest		click		nextButton_xpath	
GmailTest		closeBrowser		


tab3=data

GmailTest			
Runmode	Browser		Username	Password
Y	Mozilla		mubeen85	Hightime
N	Chrome		U2		P2
N	Mozilla		U3		P3



Based on tab1 runnability a test case will be executed and corresponding data set in tab3 is executable for runmode Y


Implementing optional run
-----------------------------

in Datautil class other than the dataprovider, we create another function


public static boolean isSkippable(xls_reader, String testname){

int rows  =xls.getrowcount(CONSTANTS.TESTCASES_SHEET)

for(int rNum=2;rNum<rows;rNum++)
String tcid = xls.getcelldata(CONSTANTS.TESTCASE_SHEET,CONSTANTS.TCID_COL,rNum);
if(TCID.equals(testname))
String runmod = xls.getcelldata(CONSTANTS.TESTCASE_SHEET,CONSTANTS.RUNMOD_COL,rNum);
if runmod.equals("Y")
return false
else
return true;   //that mean you need to skip test cases

//true - N	
//false - Y
}

In Gmailtest
------------------

if(Datautil.isSkippable(xls, testName) || data.get("runmod").equals("N"))}    //skip if this line is true
----

@Test(Dataprovider="getdata")
public void doLogin(Hashtable<> data){

if(Datautil.isSkippable(xls, testName) || data.get("runmod").equals("N"))}  
test.log(logstatus.skip,"Skipping the tets");

throw new skip exception("Skipping test");
}

ExtentTest test = rep.startTest(testname);
test.log(logstaus.info,"Starting gmail login test");

--------------------------------

15. Implementing Application specifc keywords
=================================================

1. Create Appkeywords in src/main/java baside keywords and geenrickeywords
2. This will have functions specifc to test and cannot be used for other testing
3. this class will extend generickeywords
4. 

public class Appkeywords extends generickeywords{

public Appkeywords(ExtenTest test){
super(test);    //reference to test in generickeywords
}

public void verifylogindetails(){
}



In keywords class
replace 
app = new genericKeywords(test)

to 
app = new AppKeywords(test)


also replace

public Appkeywords getgenericKeywords{
return app
}


Also

in Keywords class

add below line to read the name of title from hastable of data sheet


elseif(keywords.equals("verifylogindetail"))
app.verifylogindetails(testdata)


in Appkeywords

public void verifylogindetails(Hashtable<>,testdata){

//name
String expectedName = testdata.get("name");
String expID = testdata.get("username");

//below write actualvalue and give results
}

GmailTest			
Runmode	Browser		Username	Password      Name
Y	Mozilla		mubeen85	Hightime      Mubeen
N	Chrome		U2		P2		x
N	Mozilla		U3		P3		x



---------------------------------------------------------------


Interesting thing

16. Return value assigned to all functions
============================================

Till now all functions implemented in Generic keywords and Appkeywords are returning void. Instead of that we return Pass of Fail
with associated error message. Then this error message is captured in keywords.class

In Constants class
add
public static String PASS = "PASS"
pubcli static String FAIL = "FAIL"


In GenericKeywords and Appkeywords, replace void with String and add return type


public string navigate(String urlkey){
syso("navigating to url"+prop.getproperty(urlkey))
//driver.get(url)
return Constants.PASS
}

public string click(String locatorkey){
syso("clicking on"+prop.getproperty(locatorkey))
return Constants.PASS
}

public string input(String locatorkey, String datakey){
syso
return Constants.PASS
}



In Keywords class

if(keywords.equals("openBrowser"))
result = app.openBrowser(data)
elseif(keywords.equals("navigate"))
result = app.openBrowser(object)
elseif(keywords.equals("click"))
result = app.navigate(object)
else if(keywords.equals("input"))
result = app.input(object,data)

if (!result.equals(Constants.PASS))
app.reportfailure(result);  //this will take screenshot
assert.fail(result);  //will fail tcs



17. Implement ANT
===================
refer ANT topics


18. Emailing Reports:
=======================

Create a new package qtp.selenium.com.hybrid.mail

in the package keep below 3 files
1. FileFilterDateIntervalUtils.Java
2. SendMail.Java
3. Zip.java

in pom.xml -- dependency mail.jar has to be added


in Constants file add the Extent Reports path


In SendMail.java
--------------------

1. provide the path of Extent Reports.
2. using FileFilterDateIntervalUtils class find the latest extent report in the path provided
3. Using File class, get the latest file based on the filefilter class above
4. use sendmail function to send email
5. need following details like username,passwords, host, port, auth and also provide attachment path etc

For xslt report, it is avaialable in test-output folder. whcih needs to be zipped and send
hence we use zip.java class

To send XSL reports from ANT, add target report_email with package path sendmail.java

1. ANT report_email will send the email




---------------------------------------------------------------------END of CORE HYBRID FRAMEWORK-----------------------------------------------------------------------------------------------------

-----------------------------------------------------------STARTING WEBSITE test using HYBRID--------------------------------------------------------------------------------------------------------


Learn Data driven frameowrk from Naveen.




------------------------------------------------------------------------CUCUMBER By Naveen---------------------------------------------------------------------------------------------------
=============================================================================================================================================================
1. Learn Cucumber first
2. The POM
3. POM with Cucumber
4. Data driven framwoek

Cucumber
-----------

Gherkin - Language used in behavior driver framework
Gherkin Keywords - @Given, @When, @Then etc

Feature file- .feature ext file (uses Gherkin keywords)



login.feature file						Step definition file					Test runner
-------------------						--------------------					-----------

Feature:
Scenario/Scenario Outline:

Given								Selenium+Java+Annotation				
when															Junit
then															To run your feature
as 				------------------->						--------------->	to generate report
but															


Feature - Feature is the functionality you will test in the feature file
Feature File - Is an entry point to cucumber testing, it containes one or more scenarios to test
Gherkins - Gherkins are keywords which is used to write structured test and documentation. Gherkin keywords
are not automation keywords but cucumber is used for automation
Background - pre req are mentioned in Background

Keywords:
-----------
Given - pre condition
When - Test Execution steps
Then - Validation
And - Add conditions to your steps (can be added after when or then)
But - add negative conditions

It is not important to use any specific keywords, even if keywords are interchanged nothing will happen to code. Code
is completely dependent on step definition class.



Maven dependencies
Cucumber-java
Cucumber-jvm
Cucumber-junit
Cucumber-reporting
Cucmber-gherkin

Create Maven Project in Eclipse
--------------------------------
1.Right click -> create Maven project -> provide groupid and artifact id -> new maven project is created with src/main/java and src/test/java


2.In src/main/java ->create package Feature -> create file login.feature

download natural plugin for BDD -> drag and drop to eclipse so that gherkin language written in feature file is recogonized
https://marketplace.eclipse.org/content/natural


In login.feature file
---------------------

Feature: Free CRM Login Feature

Scenario: Free CRM Login Test Scenario

Given User is already on Login Page
When title of login page is Free CRM
Then user enters username and password
Then user clicks on login button
Then user is on home page


In src/main/java ->create package stepDefinitions -> create class LoginStepDefinitions
-------------------------------------------------------------------------------------

In LoginStepDefinition
-----------------------

package stepDefinitions;

public class LoginStepDefinition {
WebDriver driver;
	
	@Given("^user is already on Login Page$")
	public void user_is_already_on_Login_Page(){
		//driver = new ChromeDriver();
		driver = new FirefoxDriver();
		//System.setProperty("webDriver.chrome.driver", "C:\\Users\\mubeen\\Desktop\\seleniumjars3.8.1\\drivers\\chromedriver.exe");	
		System.setProperty("webDriver.gecko.driver", "C:\\Users\\mubeen\\Desktop\\seleniumjars3.8.1\\drivers\\geckodriver.exe");
		driver.get("https://www.freecrm.com");
	}
	
	@When("^title of login page is Free CRM$")
	public void title_of_login_page_is_Free_CRM(){
		String title = driver.getTitle();
		System.out.println(title);
		Assert.assertEquals("Free CRM software in the cloud powers sales and customer service", title);
	}
	
	@Then("^user enters username and password$")
	public void user_enters_username_and_password(){
		driver.findElement(By.name("username")).sendKeys("mubeen85");
		driver.findElement(By.name("password")).sendKeys("Hightime");
	}
	
	@Then("^user clicks on login button$")
	public void user_clicks_on_login_button(){
		WebElement loginBtn = driver.findElement(By.xpath("//input[@type='submit']"));
		JavascriptExecutor js = (JavascriptExecutor)driver;
		js.executeScript("arguments[0].click();", loginBtn);
	}
	
	@Then("^user is on home page$")
	public void user_is_on_home_page(){
		String title = driver.getTitle();
		System.out.println("Home page title is::"+ title);
		Assert.assertEquals("CRMPRO", title);
	}
	
	
}

In src/main/java ->create package MyRunner-> create class TestRunner
-------------------------------------------------------------------

Default code: Will not change
--------------------------------

package MyRunner;

import org.junit.runner.RunWith;
import cucumber.api.CucumberOptions;
import cucumber.api.junit.Cucumber;

@RunWith(Cucumber.class)
@CucumberOptions(
	features = "C:/Users/mubeen/workspace1/FreeCrmBDDFramework/src/main/java/Features/login.feature",
	glue={"stepDefinitions"},
	format= {"pretty","html:test-output","json:json-output/cucumber.json","junit:junit-xml/cucumber.xml"}  //will display reports in both html and json format
	,dryRun = true       //ensure the gherkin keywords in feature file are correctly mapped in stepdefinition tab
	,strict = true   //when we need to use dryRun=false, then we use strict = true to ensure all keywords are implemented
	,monochrome = true   //display the console output in readable format
		
		)
public class TestRunner {
}


Cucumber Options:
-----------------
1. dryRun
2. Features
3. Glue
4. Tags
5. Monochrome
6. Format
7. Strict

Notes:
1. method name can be anything
2. @Given,@Then etc in stepDefinition should be same as in login.feature file
3. steps are executed in same format of feature file
4. format= {"pretty","html:test-outout"}  - //this gives a good ouput in console


All cucumber options are defined in runner class
Tags alone is defined in feature file

1. dryRun=true - Ensures all gherkin keywords are correctly mapped in stepdefinition class. It will not execute test cses
instead this will only check if all gherking keywords mentioned in feature file is defined in stepdefinition class

Inorder to execute testcase, change dryRun=false

2. features - will give the path where feature file is located. if multiplel files are available it can be given with comma
separated or give the Feature package path

3. glue = path of stepDefinitions

4. monochrome = true,  Usuall in console we see 32m 30m, inorder to avoid this and generate pretty output. we use monochrome=true

monochrome=false will generate bad output

5. format= {"pretty","html:test-output","json:json-output/cucumber.json","junit:junit-output/cucumber.xml"}
This will display output in both html and json format or xml
Format is used to generate html, json and xml reports

6. strict = true
throws pending exception when the program is run with dryrun=false. This ensures all keywords are implemented

important: 
7. dryRun to check mapping of keywords and strict=true to check if keywords are implemented

8. To comment and uncomment in feature file use select all + cntrl+/


Different Data Driven testing using Cucumber:-
--------------------------------------------
1. Simple data driver - without examples keyword,    Pass data directly in Feature File ex:"mubeen85", Use Regular expression in Step definition
2. With examples keyword +scenario outline	     Pass data in "Examples" in Feature File ex:"<username>", Use Regular expression in Step definition	 
3. Using tables with List Object		     Pass data below each gherkin keyword, use Datatable object and raw method to pull data like data.get(0).get(0) - 0th row, 0th col
						     No column name only data for each gherkin, need more line of codes for multiple loops. not prefered
 
4. Using tables with Map Objects		     Pass data below each gherkin keyword with col name, use Datatable object and asMaps method to pull data using for loop
						     Column name is used, can run multiple loops 


1.Data driven without examples Keyword
------------------------------------
We use regular expression to pass the data from feature file to stepdefinition class

Two types of regular expressions:
1. \"(.*)\"
2. \"([^\"]*)\"

In Feature File:
----------------

Then user enters "mubeen85" and "Hightime"

In stepDefinition File:
------------------------

	@Then("^user enters \"(.*)\" and \"(.*)\"$")
	public void user_enters_username_and_password(String username,String password){
		driver.findElement(By.name("username")).sendKeys(username);
		driver.findElement(By.name("password")).sendKeys(password);
	}

	
2. With Examples Keyword
-------------------------
Notes: while using examples, we have to use keyword "Scenario Outline" instead of "Scenario" in the feature file and based on no.of examples
that many browsers will open

Scenario Outline: Free CRM Login Test Scenario

Given user is already on Login Page
When title of login page is Free CRM
Then user enters "<username>" and "<password>"
Then user clicks on login button
Then user is on home page

Examples:
   | username | password |
   | mubeen85 | Hightime |
   | mubeenal |	testing  |


stepDefinitions:
------------------

@Then("^user enters \"(.*)\" and \"(.*)\"$")
	public void user_enters_username_and_password(String username,String password){
		driver.findElement(By.name("username")).sendKeys(username);
		driver.findElement(By.name("password")).sendKeys(password);
}

Remember:
----------
1. Two features should not look alike as in below: it is not correct, cucumber gets confused

Incorrect:
Then user enters "<username>"
Then user enters "<firstname>" and "<lastname>"

Correct:
Then user enters "<username>"
Then user enters details "<firstname>" and "<lastname>"

2. With examples we can have  multiple iterations

3. Remember to use Scenario Outline instead of Scenario when using examples



Test Runner:
-------------
package MyRunner;

import org.junit.runner.RunWith;
import cucumber.api.CucumberOptions;
import cucumber.api.junit.Cucumber;

@RunWith(Cucumber.class)
@CucumberOptions(
	features = "C:/Users/mubeen/workspace1/FreeCrmBDDFramework/src/main/java/Features/login.feature",
	glue={"stepDefinitions"},
	format= {"pretty","html:test-output","json:json-output/cucumber.json","junit:junit-xml/cucumber.xml"}  //will display reports in both html and json format
	,dryRun = false       //ensure the gherkin keywords in feature file are correctly mapped in stepdefinition tab
	,strict = true   //when we need to use dryRun=false, then we use strict = true to ensure all keywords are implemented
	,monochrome = true   //display the console output in readable format
		)
public class TestRunner {
}


Feature File:
--------------
Feature: Free CRM Login Feature

Scenario Outline: Free CRM Login Test Scenario

Given user is already on Login Page
When title of login page is Free CRM
Then user enters "<username>" and "<password>"
Then user clicks on login button
Then user is on home page
Then user moves to contact page
Then user enters contact details "<firstname>" and "<lastname>" and "<position>"
Then close the browser

Examples:
   | username | password | firstname	 | lastname | position |
   | mubeen85 | Hightime | mubeen	 | ali      | sse      |
   | mubeen   | Hightime1| mubeen1	 | ali1     | Manager  |


StepDefinition:
---------------------
package stepDefinitions;
public class LoginStepDefinition {
	
	WebDriver driver;
	
	@Given("^user is already on Login Page$")
	public void user_is_already_on_Login_Page(){
		//driver = new ChromeDriver();
		driver = new FirefoxDriver();
		System.setProperty(FirefoxDriver.SystemProperty.BROWSER_LOGFILE, "null");
		//System.setProperty("webDriver.chrome.driver", "C:\\Users\\mubeen\\Desktop\\seleniumjars3.8.1\\drivers\\chromedriver.exe");	
		System.setProperty("webDriver.gecko.driver", "C:\\Users\\mubeen\\Desktop\\seleniumjars3.8.1\\drivers\\geckodriver.exe");
		driver.get("https://www.freecrm.com");
		driver.manage().window().maximize();
	}
	
	@When("^title of login page is Free CRM$")
	public void title_of_login_page_is_Free_CRM(){
		String title = driver.getTitle();
		System.out.println(title);
		Assert.assertEquals("Free CRM software in the cloud powers sales and customer service", title);
	}
	
	@Then("^user enters \"(.*)\" and \"(.*)\"$")
	public void user_enters_username_and_password(String username,String password){
		driver.findElement(By.name("username")).sendKeys(username);
		driver.findElement(By.name("password")).sendKeys(password);
	}
	
	@Then("^user clicks on login button$")
	public void user_clicks_on_login_button(){
		WebElement loginBtn = driver.findElement(By.xpath("//input[@type='submit']"));
	JavascriptExecutor js = (JavascriptExecutor)driver;
	js.executeScript("arguments[0].click();", loginBtn);
	}
	
	@Then("^user is on home page$")
	public void user_is_on_home_page() throws InterruptedException{
		Thread.sleep(5000);
		String title = driver.getTitle();
		System.out.println("Home page title is::"+ title);
		Assert.assertEquals("CRMPRO", title);
	}
	
	@Then("^user moves to contact page$")
	public void user_moves_to_contact_page(){
		driver.switchTo().frame("mainpanel");
		Actions action = new Actions(driver);
		action.moveToElement(driver.findElement(By.xpath("//a[contains(text(),'Contacts')]"))).build().perform();
		driver.findElement(By.xpath("//a[contains(text(),'New Contact')]")).click();
	}
	
	@Then("^Then user enters contact details \"(.*)\" and \"(.*)\" and \"(.*)\"$")
	public void user_enters_name_position(String firstname, String lastname, String position){
	driver.findElement(By.id("first_name")).sendKeys(firstname);
	driver.findElement(By.id("surname")).sendKeys(lastname);
	driver.findElement(By.id("company_position")).sendKeys(position);
	driver.findElement(By.xpath("//input[@type='submit' and @value='Save']")).click();
	}


	@Then("^close the browser$")
	public void close_the_browser(){
		driver.quit();
	}}


3. Using tables with List object
-----------------------------------
1. Scenario outline is not used in tables
2. in this method we provide the paramters data for each feature in the immediate next line
3. In examples keyword, we provide the entire data at the end
4. In tables, the data provided is applicable only for the line the data is declared
5. No regular expressions used in tables method
6. In tables, rather passing strings we create DataTable objects

	@Then("^user enters username and password$")
	public void user_enters_username_and_password(DataTable credentails){
		List<List<String>> data = credentails.raw();
		driver.findElement(By.name("username")).sendKeys(data.get(0).get(0));
		driver.findElement(By.name("password")).sendKeys(data.get(0).get(1));
	}
	
7. (data.get(0).get(0)); - means zeroth row zeroth column data
8. (data.get(0).get(1)); - means zeroth row first column data
9. (data.get(1).get(1)); - means first row first column data'
10. Examples keyword is preferred over using tables
11. Problem is in using tables, in output we cannot see which data is used. It doesnot show in console or in left corner
12. DataTable is a class. raw() method is used to return List<List<String>>
13. Another issue using tables is, if we have multiple iteration then the code has to be written so many times
but in example keyword format, each set of data in example section is executed with just one set of code

	

Syntax using Tables:-
-----------------------
Features
-----------

Feature: Deal data creation

Scenario: Free CRM Login a new deal Scenario

Given user is already on Login Page
When title of login page is Free CRM
Then user enters username and password
| mubeen85 | Hightime |

Then user clicks on login button
Then user is on home page
Then user moves to new deal page
Then user enters contact details
| test deal | 1000 | 50 | 10 |
Then close the browser


stepDefinition
--------------
package stepDefinitions;
public class DealStepDefinition {
		
	@Then("^user enters username and password$")
	public void user_enters_username_and_password(DataTable credentails){
		List<List<String>> data = credentails.raw();
		driver.findElement(By.name("username")).sendKeys(data.get(0).get(0));
		driver.findElement(By.name("password")).sendKeys(data.get(0).get(1));
	}
	
	@Then("^user enters contact details$")
	public void user_enters_name_position(DataTable dealData){
	List<List<String>> dealValues = dealData.raw();	
		
	driver.findElement(By.id("title")).sendKeys(dealValues.get(0).get(0));
	driver.findElement(By.id("amount")).sendKeys(dealValues.get(0).get(1));
	driver.findElement(By.id("probability")).sendKeys(dealValues.get(0).get(2));
	driver.findElement(By.id("commission")).sendKeys(dealValues.get(0).get(3));
	driver.findElement(By.xpath("//input[@type='submit' and @value='Save']")).click();
	}

TestRunner
-------------
package MyRunner;

import org.junit.runner.RunWith;
import cucumber.api.CucumberOptions;
import cucumber.api.junit.Cucumber;

@RunWith(Cucumber.class)
@CucumberOptions(
	features = "C:/Users/mubeen/workspace1/FreeCrmBDDFramework/src/main/java/Features/deals.feature",
	glue={"stepDefinitions"},
	format= {"pretty","html:test-output","json:json-output/cucumber.json","junit:junit-xml/cucumber.xml"}  //will display reports in both html and json format
	,dryRun = false       //ensure the gherkin keywords in feature file are correctly mapped in stepdefinition tab
	,strict = true   //when we need to use dryRun=false, then we use strict = true to ensure all keywords are implemented
	,monochrome = true   //display the console output in readable format
)

public class TestRunner {	
}


4.Using data tables with Map Object
-------------------------------------
Very powerful technique

1. the disadvantage of using tables with List is not there in using tables with Map object
2. We can run the code for multilple data
3. Can provide column names, this will identify what value is being passed
4. for this we use map object with asMaps method instead of List object and raw method.
5. Remember we use forloop to iterate or to execute multiple data in 1 browser
6. In below code, username and password passed are column names from feature file

@Then("^user enters username and password$")
	public void user_enters_username_and_password(DataTable credentails){
		
		for(Map<String, String> data : credentails.asMaps(String.class, String.class)){
			
		driver.findElement(By.name("username")).sendKeys(data.get("username"));
		driver.findElement(By.name("password")).sendKeys(data.get("password"));
		}

Syntax:
----------
Feature

	Then user enters username and password 
		| username | password |
		| mubeen85 | Hightime |

	Then user enters contact details 
		| title | amount | probability | commission |
		| test deal1 | 1000 | 50 | 10 |
		| test deal2 | 2000 | 50 | 20 |
		| test deal3 | 3000 | 50 | 30 |


stepDefinition:


	@Then("^user enters username and password$")
	public void user_enters_username_and_password(DataTable credentails){
		
		for(Map<String, String> data : credentails.asMaps(String.class, String.class)){
			
		driver.findElement(By.name("username")).sendKeys(data.get("username"));
		driver.findElement(By.name("password")).sendKeys(data.get("password"));
		}


	@Then("^user enters contact details$")
	public void user_enters_name_position(DataTable dealData){
	for(Map<String, String> dealValues : dealData.asMaps(String.class, String.class)){	
	driver.findElement(By.id("title")).sendKeys(dealValues.get("title"));
	driver.findElement(By.id("amount")).sendKeys(dealValues.get("amount"));
	driver.findElement(By.id("probability")).sendKeys(dealValues.get("probability"));
	driver.findElement(By.id("commission")).sendKeys(dealValues.get("commission"));
	driver.findElement(By.xpath("//input[@type='submit' and @value='Save']")).click();
	
	Actions action = new Actions(driver);
	WebDriverWait wait = new WebDriverWait(driver,30);
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath("//a[contains(text(),'Deals')]"))));
	action.moveToElement(driver.findElement(By.xpath("//a[contains(text(),'Deals')]"))).build().perform();
	
	wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath("//a[contains(text(),'New Deal')]"))));
	driver.findElement(By.xpath("//a[contains(text(),'New Deal')]")).click();
	
	}}



Difference between all 3 data driven approach
---------------------------------------------

without examples			with examples			using tables:List object		using tables:Map object
-----------------------			--------------			------------------------		-----------------------

Regular expression used		     Regular expression used	        No regular expression			No regular expression
Scenario: keyword		     Scenario outline:			Scenario				Scenario
No examples			     Examples used all at bottom	No examples				No examples
whcih data used is known	     yes				no, cant see which data is used	        yes, can see which data is used
one iteration			     multiple iteration			multiple iteration but more code	multiple iteration with one set of code
parmeter - "mubeen85"		     "<username>"			row details mentioned			username			
				     |username|									 |username|	
				     |mubeen  |									 |mubeen  |
									DataTable class raw() used		DataTable class asMap() used
														For() loop used

Tags
-------

Tags are created to group the testcases that is required to be executed. For example: smoketest, regression and end2end testcases

Notes: Grouping should be done only at feature file,  no need to touch stepDefinition

@FunctionalTest
Feature: Free CRM application testing

@SmokeTest @RegressionTest
Scenario: Login with correct username and password
Given This is a valid login test

@SmokeTest @RegressionTest
Scenario: Login with incorrect username and password
Given This is a invalid login test

@SmokeTest
Scenario: Create a contact
Given Able to create contact

@End2end
Scenario: Create a deal
Given Able to create a deal

@RegressionTest
Scenario: Create a task
Given Able to create a task

Test Runner Class:
----------------------

tags = {"@SmokeTest"}
tags = {"@SmokeTest, @RegressionTest"}  - execut all test tagged as @SmokeTest OR @RegressionTest                  
tags = {"@SmokeTest", "@RegressionTest"} - execut all test tagged as @SmokeTest AND @RegressionTest


to ignore any specifc test cases

tags = {"~@SmokeTest", "@RegressionTest"} - will ignore all smoke testcases ad execute only regression
tags = {"~@SmokeTest", "@~RegressionTest","@~End2End"} - will ignore testcases with tags, any scenario with no tags will be executed


Hooks
------
Similar to @BeforeTest and @AfterTest, we have @Before and @After that can be run before and after each test. remember that this needs to be
imported from cucumber.api and not Junit

Note:
no need to mention @Before and @After in feature file, just write the code in stepDefinition class


Syntax:

Feature
--------

Feature: A CRM test

Scenario: test the login page

Given: User is in login page
When: user logs in
Then: user should be able to login



In stepDefinition class:
-------------------------

@Before
public void beforetest(){
syso("open browser")
}

@After
public void aftertest(){
syso("close browser")
}


@Given(^User is in login page$)
public void User_is_in_login_page (){
system.out.println();

}
@When(^user logs in$)
public void user_logs_in (){
system.out.println();
}
@Then(^user should be able to login$)
public void user_should_be_able_to_login (){
system.out.println();
}


O/P
---

Before  ->  Scenario  -> After 

if multiple scenarios are available


Before  ->  Scenario1  -> After --> Before  ->  Scenario2 -> After 

Tagged Hooks:
-------------

If you want to execute pre req scenarios before certain scenario only we used tagged hooks


There are 2 types of hooks
1. Global hooks which is applicable for all scenarios
2. Hooks specific to certain scenarios known as tagged hooksw

Syntax for tagged hooks
-------------------------

Feature File
-------------
Feature: Test the hooks feature

@First
Scenario: Test the hooks1
Given User opens1 login page
When The user opens login page1


stepDefinition
-------------------


@Before										//global hook before
	public void beforetest(){
		System.out.println("Open global before");
	}
	
	@After
       public void aftertest(){							//global hook after
		System.out.println("Close global after");
	}
	
	@Before("@First")
	public void beforetest1(){						//local hook first
		System.out.println("Open local @first");
	}
	
	@After("@First")
    public void aftertest1(){
		System.out.println("Close local @first");
	}
	
	
	@Given("^User opens1 login page$")
	public void user_opens1_login_page() {
		System.out.println("Scenario1");
	}
	
	@When("^The user opens login page1$")
	public void The_user_opens_login_page1(){
		System.out.println("when pag1");
	}



O/p-

global hook before -> local tagged hook before -> given -> when -> global hook after -> local tagged hook after



Ordering in hooks:
--------------------


We can provide order id in which before and after test should be executed if there are multiple before and after

 Syntax:
-----------

  @Before(order=0)
	public void beforetest1(){
		System.out.println("Open local @first");
	}
@Before(order=1)
	public void beforetest1(){
		System.out.println("Open local @first");
	}

 @After(order=0)
    public void aftertest(){
		System.out.println("Close global after");
	}
	
@After(order=0)
    public void aftertest(){
		System.out.println("Close global after");
	}

	

O/P ->  @Before(order=0)  -> @Before(order=1) -> @After(order=0	) -> @After(order=1)

============================================================================================================================================================================================
--------------------------------------------------------------CUCUMBER with POM by Naveen------------------------------------------------------------------------------------
Only 1 video for this
https://www.youtube.com/watch?v=crpxZjB3qdo&list=PLFGoYjJG_fqoBFPevCDZDCufDX5h-o3yO&index=8


Cucumber with POM Design Pattter: By Naveen
--------------------------------------------

Architecture and its components
----------------------------------

						TestBase Class	- Parent Class
								(WebDriver initialization
								Properties initialization
								WebEventListerner initialization)

		|

PageLayer - Object Repositories					Feature File			Step Definition			Test Runner Class

1.
LoginPage							
@FindBy
WebElements
Actions: login() method
return HomePage Object

2.
HomePage
@FindBy
WebElements
Actions: homepage related method		



Links:
1. Link between Feature file and Step Definition
2. Link between Test runner class with Feature file and Step Defiition file
3. Link between Page classes and Step definition Class
				

Coding Cucumber with POM
-------------------------

1. Create a Maven Project
2. Add dependencies in POM.xml

3. Create below packages in src/main/java
i. com.qa.config - create config.properties file and 
			declare all env variables like browser, username,password and url


ii. com.qa.util  - Create TestBase class and TestUtil class with all constants   (ideally TestBase should not be in this package) by trainer kept here by mistake

iii. com.qa.pages - Create all pages here

    LoginPage - create all Object Repositories for login page
	      - initialize the PageFactory with driver
	      - create all actions of methods 
	      - remember to create a method when clicked on submit that navigates to homePage with return type HomePage class object
			(when the submit buttoon is clicked, it will return the homePage reference variable of the HomePage object
		by which the constructor of HomePage class is called and all the OR's in HomePage is initialized
	
		In loginpage -> click submit button -> return homePage reference variable return HomePage class Object ->
		-> calls HomePage class constructor -> PageFactory is initialized 

	      
    HomePage  - create all Object Repositories for home page
	      - initialize the PageFactory with driver
	      - create all actions of methods 
	      - note: not creating methods that will navigate to next page
	




iv. com.qa.features - create package for all feature files

create feature file - freecrm.feature
			
  Feature: Free CRM Application Test
  Scenario: Validate Free CRM Home Page Test

	Given user opens browser
	Then user is on login page
	Then user logs into app
	Then validate homepage title
	Then validate logged in username



v. com.qa.stepDefinitions - create package for all Step Definitions
	HomePageStepDefinition - create class

vi. com.qa.runner - create package for the TestRunner class
	TestRunner class
	- remember to give the feature file path and stepDefinitions path as shown below


@RunWith(Cucumber.class)
@CucumberOptions(
	features = "C:/Users/mubeen/workspace1/CucumberPOM/src/main/java/com/qa/features/freecrm.feature",
	glue={"com/qa/stepDefinitions"},
	format= {"pretty","html:test-output","json:json-output/cucumber.json","junit:junit-xml/cucumber.xml"}  //will display reports in both html and json format
	,dryRun = true //ensure the gherkin keywords in feature file are correctly mapped in stepdefinition tab
	,strict = true   //when we need to use dryRun=false, then we use strict = true to ensure all keywords are implemented
	,monochrome = true   //display the console output in readable format
	//,tags={"~@SmokeTest","~@RegressionTest"}	
		)

public class TestRunner {

}



4. Now with dryrun=true, this will generate all the step definition template. Copy this and place in HomePageSteps class which
is the stepDefinition class

	- remove all pending exceptions line from the methods
	- cntrl+shift+o to import all gherkins
	- again run the test runner class with dry run = true to ensure all keywords are implementeds

5. HomePageStepDefinition step definition class should extend TestBase class

	- Extend TestBase class
	- LoginPage loginPage;
	- HomePage homePage;

		Given user opens browser
		- TestBase.initialization();

		Then user is on login page
		-  loginPage = new LoginPage();
		-  loginPage.validateLoginPageTitle();

		Then user logs into app
		-  homePage = loginPage.login(prop.getProperty("username"), prop.getProperty("password"));

		Then validate homepage title
		- String homeTitle = homePage.verifyHomePageTitle();
		- Assert.assertEquals("CRMPRO", homeTitle);
		
		Then validate logged in username
		- boolean flag = homePage.verifyCorrectUserName();
		- Assert.assertTrue(flag);


6. Now run the TestRunner with dryRun=true to ensure all keywords are  mapped correctly

7. Now run the TestRunner with dryrun=false to execute all the scripts

8. Similarly create feature file for all the ContactsPage, DealsPage etc


============================================================================================================================================================================================
--------------------------------------------------------------------------Naveen ---Data driven or Hybrid POM----------------------------------------------------------------------------

Data Driven POM
----------------

Page Object Model is not a framework it is design pattern
-----------------------------------------------------------

Page Chaining Model(POM)

Notes.

1. Separate Java class is created for each page
ex: login page, home page, registration page, add to cart page etc
2. POM is not framework, it is design pattern
3. First we have to create the page layer
4. Object Repository - Is collection of all objects
5. 

POM - Architecture - Refer screenshot
--------------------------------------

Pag layer 1
Page Lib-
1. Identify each and ever page, separate java classes are created
2. Define all page web objects in respective page java class which is OR- Object Repositories (Collection of all web elements)
3. Define all the possible methods in  each page


Test Layer 2
1. Test case java class is created for each page like Loginpagetest.java
2. Test cases in this test class will be written in TestNG


TestBase.Java (Parent class) - TestBase.java is parent class for each page layer below. All page classes and test classes extends TestBase class.
1. Initalization are done in TestBase like webdriver initialization
2. Properties initalization
3. Window maximize, implicit wait and pageloadtimeouts are initalized here
4. deleteallcookies() etc
5. driver.geturl()
6. All above things will be defined in TestBase.Java, this is just one time activity. 
	



					TestBase class {Package Name =com.qa.base} (Below child classes Inherits



{packagename = com.qa.pages}							{package name = com.qa.test}			{package name = com.qa.config}
Page Layer1 									Test Layer -2 - USes TestNG			Environment variables - Config.properties                  											(All test cases are here in TestNG)		url, username, password,browser			
------------									-------------------------------------		-----------------------------------------

Login page									  Loginpagetest.java
1.Webelement or webobject2 or Object Repositories										{package name =com.qa.testdata}
2.Actions/Methods - Features example: gettitle of page, click on register etc							TestData.xlsx		
	|															--------------
	V
Homepage															{package name = com.qa.util}
1.Webelement or webobject2 or Object Repositories				  HomePageTest.java				TestUtil.java
2.Actions/Methods - Features example: clickonsigninlink(), fillregform()							(Screenshots,sendmail,common utils) and GenFunctions
	|															------------------------------------
	V																
																Test-output/reporting folder
Search page									  SearchPageTest.java				Reporting(ExtentReports,HTML, TESTNG, XML Reports)
1.Webelement or webobject2 or Object Repositories
2.Actions/Methods


Registration Page or Object Repositories					  RegPageTest.java
1.Webelement or webobject2
2.Actions/Methods - Features like clickonsignin(), fillregform(),footerlinks()


Addtocart page
1.Webelement or webobject2 or Object Repositories
2.Actions/Methods

Payment page
1.Webelement or webobject2 or Object Repositories
2.Actions/Methods




Notes:
1. Each component is placed in a package
2. Page chaining Model POM - Because all pages are interconntected, if you are able to navigate from login to home page. Here home page is 
landing page. Like this from each page you can navigate to other pages. This is called page chaining model


Other tools and technology used in POM:
------------------------------------------
Apache POI API
Extend Reports
Log4J
Jenkins
GIT
GRID
Browsers - FF/Chrome
Environments - VM/Windows/Linux


POM + Hybrid Framework
------------------------

1. Right Click in Left console
2. Select Project -> Maven Project
3. GroupID - FreeCRMAutomation
4. ArtifactID - FreeCRM
5. Delete by default packages from src/main/java and src/test/java
6. In POM.xml - Add all maven dependencies and Cntrl+S - All dependencies willbe downloaded

	Add dependencies - 
			testng - In google search webdriver maven - 6.11v    <scope should be compile>
			apache poi api -  multiple dependencies to add
			selenium webdriver - in google search webdriver maven and copy paste dependency. Now it is 3.141.x 	
			extent report - 

7. src/main/java - utilities and page classes(libraries)
8. src/test/java - only testcases under testng

9. in src/main/java - create packagename -  com.crm.qa.pages
10. in src/main/java - create packagename -  com.crm.qa.base
11. in src/main/java - create packagename -  com.crm.qa.config (env variables - properties file)
12. in src/main/java - create packagename -  com.crm.qa.testdata
14. in src/main/java - create packagename -  com.crm.qa.util
15. no package for reporting, it will automatically create a folder inside the project
15. src/test/java  - com.crm.qa.testcases


16. in src/main/java - com.crm.qa.config - create config.properties file
url = https://freecrm.com
username = mubeen85
password = Hightime
browser = chrome
Note: Don't store test data in properties file. Only very generic env variables are kept in properties file

17. in src/main/java - com.crm.qa.pages - 
	create LoginPage.java class  (dont create main method)

	package com.crm.qa.pages
		public class LoginPage{

	}

18. Similarly create Page class for each and evey page like SignUpPage, ContactsPage, DealsPage etc

19. in src/main/java - com.crm.qa.base - Create TestBase class

20. How it works

1.
LoginPageTest --LoginPageTest(Constructor invokes Super())  ---> TestBase class(initialize prop,browser,timeouts etc ---->
back to LoginPageTest class ----> Object of LoginPage ---> LoginPage constructor is called ----> which will initialize PageFactory
------> Run all test cases in LoginPageTest ---> Click on login button --> Return homePage ---->

2.
HomePageTest ---> HomePageTest(Constructor invokes Super())  ---> TestBase class(initialize prop,browser,timeouts etc ---->
back to HomeageTest class ----> Object of LoginPage(not homePage) --> Click on login returns homePage --> then execute HomePageTest test cases



Code for TestBase Class:  "No main method"
---------------------------
	package com.crm.qa.base
		public class TestBase{

	//In TestBase class, initalize properties and webdriver
		
		static WebDriver driver;
		static Properties prop;

	//create a constructor of TestBase like below and inside which write properties code

	public TestBase(){
	try {
		prop = new Properties();
		FileInputStream ip = new FileInputStream(System.getProperty("user.dir")+ "/src/main/java/com/crm"
				+ "/qa/config/config.properties");
		prop.load(ip);
	} catch (FileNotFoundException e) {
		e.printStackTrace();
	} catch (IOException e) {
		e.printStackTrace();
	}
	
//after this  In TestBase Class, static method to initalize browser

public static void initialization(){
		
	String browserName= prop.getProperty("browser");
	
	if(browserName.equals("chrome")){
		System.setProperty("webdriver.chrome.driver", "C:/Users/mubeen/Desktop/seleniumjars3.8.1/drivers/chromedriver.exe");
		driver = new ChromeDriver();
		
	}else if(browserName.equals("FF")){
		System.setProperty("webdriver.gecko.driver", "C:/Users/mubeen/Desktop/seleniumjars3.8.1/drivers/geckodriver.exe");
		driver = new FirefoxDriver();
	}

driver.manage().windows().maximize();

//driver.manage().timeouts().pageloadtimeout(20,Timeinit.SECONDS);
//driver.manage().timeouts().implicitlywait(20,Timeinit.SECONDS);

OR

driver.manage().timeouts().pageloadtimeout(TestUtil.PAGE_LOAD_TIMEOUT,Timeinit.SECONDS);		//value is coming from TestUtil clas under util package
driver.manage().timeouts().implicitlywait(TestUtil.IMPICLIT_WAIT,Timeinit.SECONDS);



driver.get(prop.getProperty("url");   //value of url will be taken from properties file

}


22.In com.cr.qa.util, create TestUtil class with constants
call the constants directly using class name since the constants are static in nature
package com.crm.qa.util;

	public class TestUtil extends TestBase {

		All common methods or values which will be reused accross will come in TestUtil
	
		public static long PAGE_LOAD_TIMEOUT=20;
		public static long IMPICLIT_WAIT=10;	

		public void switchToFrame(){
		driver.switchTo.frame("mainpanel")
		}

		}


23. LoginPage class is child of TestBase class, hence in LoginPage class TestBase class is extended or inherite
24. Similarly all pageclass should extend the testbase class


25. In page class, all object repositories should be defined

Code:
-------

	public class LoginPage extends TestBase{
	
	//page factory - Object Repository
	// @FindBy is similar to driver.findelements
	
	@FindBy(name="username")			
	WebElement username;

	@FindBy(name="password")
	WebElement password;

	@FindBy(xpath="//input[@type='submit']")
	WebElement loginBtn;

	@FindBy(xpath="//button[contains(text,'Sign Up')]")
	WebElement signUpBtn;

	@FindBy(xpath="//img[contains(@class,'img-responsive')]")
	WebElement crmLogo;

	

	// Initalize the Page Object Repositories
	//create a constructor to initialize the page objects

		public LoginPage(){

			PageFactory.initElements(driver, this); 
		//PageFactory is inbuilt class to initalize all the webelements with driver in this class using 'this' keyword which will initialize all @FindBy Elements above
	
		}

//All Actions otherwise methods should be implemented in Page class
//Actions:
	public String validateLoginPageTitle(){
		return driver.getTitle(); 
	}

	public boolean validateCRMImage(){
	return crmLogo.isDisplayed();
	}

	public HomePage login(String un, String pwd){
		username.sendKeys(un);
		password.sendKeys(pwd);
		loginBtn.click();
		return new HomePage();  			//it should return homepage class object as landing page is homepage class
 	}
	//after login, from LoginPage it lands in HomePage. Hence home page is returned here with return type HomePage


}

	
26. For LoginPage, create test case class called LoginPageTest

Code:
	public class LoginPageTest extends TestBase{

		LoginPage loginPage;
		HomePage homePage;
	
		public LoginPageTest(){				
		super();   		//by using super is used to call the TestBase class constructor in which has
					//the properties prop initalized
					// then @Before Method is executed
		}


		@BeforeMethod
		public void setUp(){
		initialization();
		loginPage = new LoginPage();			//construcotr will invoke loginPage class
		}
	
		@Test(priority=1)
		public void loginPageTitleTest(){
		String title = loginPage.validateLoginPageTitle();
		Assert.assertEquals(title, "Free CRM software in the cloud powers sales and customer service");
		}
	
		@Test(priority=2)
		public void crmLogoImageTest(){
		boolean flag = loginPage.validateCRMImage();
		Assert.assertTrue(flag);
		}
	
		@Test(priority=3)
		public void loginTest() throws InterruptedException{
		Thread.sleep(1000);
		homePage = loginPage.login(prop.getProperty("username"), prop.getProperty("password"));
		}
	
		@AfterMethod
		public void tearDown(){
		driver.quit();
		}
	}



28. Run the LoginPageTest, all methods in LoginPage will be executed
No need to write driver.findelements in LoginPageTest since it is already declared in LoginPage class using

29.In below code, since return type is HomePage type object, it is stored in homePage reference variable of HomePage Class



@Test(priority=3)
	public void loginTest() throws InterruptedException{
		Thread.sleep(1000);
		homePage = loginPage.login(prop.getProperty("username"), prop.getProperty("password"));
	}


30. LoginPageTest is complete

31. Remember when we create an Actions method to click on any link and if it navigates to nextpage
the return type should be of the newPage class type where the page is landing. this is important in POM/Page chaining model

31. Now similarly create HomePage class

Code:
-----

		public class HomePage extends Testbase{

		@FindBy(xpath="//td[contains(text(),'User:Naveen K']")			//to check user name on homepage
		WebElement userNameLabel;

		@FindBy(xpath=""//contains(text(),'Contacts']")			//to click on Contacts, get xpath of contact
		WebElement contactLink;		

		@FindBy(xpath=""//contains(text(),'Deals']")			//to click on Deals, get xpath of contact
		WebElement dealsLink;		

		@FindBy(xpath=""//contains(text(),'Tasks']")			//to click on Task, get xpath of contact
		WebElement taskLink;	

		public HomePage{
		PageFactory.initElements(driver, this); 

		}

		//awlays check title of page when you navigate to new page

		public String verifyHomePageTitle(){
		return driver.getTitle()
		}


		public ContactsPage clickonContactsLink(){			//click on contactslink tabs
		contactLink.click();
		return new ContactsPage();
		}


		public DealsPage clickondealsLink(){				//click on dealslink tabs
		dealsLink.click();
		return new DealsPage();
		}

		public Boolean userNameLabel(){
		return userNameLabel.isDislayed();
		
		}


32. Create HomePageTest class

Important thing to note here is, we are again creating object of LoginPage instead of HomePage. Since
we need to login first. After that login function in loginPage is called which returns the HomePage object
which is store in homePage object reference variable


Code: 
------

Public class HomePageTest extend TestBase{

	LoginPage loginPage;
	HomePage homePage;
	TestUtil testUtil;
	ContactsPage contactsPage;
	
	public HomePageTest(){			//constructor created and it will go inside Parent class TestBase class
	super();
	}
	

	@BeforeMethod
	public void setUp() throws InterruptedException{
		initialization();
		testUtil = new TestUtil();	
		contactsPage = new ContactsPage();
		loginPage = new LoginPage();
		Thread.sleep(1000);
		homePage = loginPage.login(prop.getProperty("username"), prop.getProperty("password"));

		//above code is same as HomePage homePage = new HomePage();
		//like how new HomePage() is object here loginPage.login(prop.getProperty("username"), prop.getProperty("password")); is an object
		
	}

	
	@Test(priority=1)
	public void verifyHomePageTitleTest(){
	String homePageTitle = homePage.verifyHomePageTitle();
	Assert.assertEquals(homePageTitle,"CRMPRO","home page is not matching");		//Assert.asserEquals(Actual,Expected,"Reason of failing"); 3rd option will be prrinted 
												when test case fails
	}	
	
	@Test(priority=2)
	public void verifyUserNameTest() throws InterruptedException{
		testUtil.switchToFrame();
		Thread.sleep(3000);
		Assert.assertTrue(homePage.verifyCorrectUserName()); 
	}

	@Test(priority=3)
	public void verifyContactsLinkTest(){
		testUtil.switchToFrame();
		contactsPage = homePage.clickOnContactsLink();	 			//it will simply click on Contacts Page object but wont do anything else
	}

	@AfterMethod
	public void tearDown(){
		driver.quit();
		}
	
	//testcases should be independent hence for every testcase the new browser is opend
	// if we use same browser instance for all test cases, the browser will be exhausted
	//and cachememory can get crashed by which execution may not be completed
	//hence for each test case browser is opened and then closed at the end
	

	}


33. Now similarly create ContactsPage class

	public class ContactsPage extends TestBase{

	@FindBy(xpath="//td[Contains(text(),'Contacts')]")			//repository for Contacts name in the contacts Page at the center
	WebElement contactsLabel;


	//initialize page factory
	public ContactsPage{
	PageFactory.initElements(driver,this);
	}

	public boolean verifyContactsLabel(){
	return contactsLabel.isDisplayed();
	}	

	public void selectContacts(String name){				//selecting name from contacts page, this is stored above @FindBy because xpath is dynamic
	driver.findelement(By.xpath("//a[text()='"+name+"'"])).click();		
	}

	}


34. Create ContactsPageTest class

	public Class ContactsPageTest extends TestBase{
	
	LoginPage loginPage;
	HomePage homePage;
	TestUtil testUtil;
	ContactsPage contactsPage;
	
	public ContactsPageTest(){			//constructor created and it will go inside Parent class TestBase class
	super();
	}
	

	@BeforeMethod
	public void setUp() throws InterruptedException{
		initialization();
		testUtil = new TestUtil();
		contactsPage = new ContactsPage();
		loginPage = new LoginPage();
		Thread.sleep(1000);
		homePage = loginPage.login(prop.getProperty("username"), prop.getProperty("password"));
		contactsPage = homePage.clickOnContactsLink();				//reference of contacts page
		testUtil.switchToframe();

		//above code is same as HomePage homePage = new HomePage();
		//like how new HomePage() is object here loginPage.login(prop.getProperty("username"), prop.getProperty("password")); is an object
		
	}
	
	@Test
	public void verifyContactsPageLabel(){
	Assert.assertTrue(contactsPage.verifyContactsLabel(),"contact label is missing");
	}

	@Test
	public void selectContactsTest(){
	contactsPage.selectContactsByName("test2 test2");
	}

	@AfterMethod
	public void tearDown(){
		driver.quit();
		}

	}

33. All the test cases should be independent from other test cases


34. Create a TestNg.xml inorder to run all the testcases created together
35. create a sourcefolder src/main/resources and create testng.xml, 
Inside which create a file naming it testng.xml

note: Function f2 to copy the name of a class
in testng.xml to comment any line. Select the line and right click - source - add block comment


Video4: not revised yet ----> Yet to go through video from here
-----------------------
Data driven approach:
We need to click on new contact add new contact details read from excel

41. Since the new contact is on home page, go to HomePage class


42. When to use @Cachelookup


Rather than calling the WebElement every time from browser we can store the WebElement in CacheMemory which will
there by increase the performance if we try to call the same element multiple times. But the catch here is
if incase the page is refreshed and webelement is changed the cachememory gets disturbed. Hence @Cachelookup
can only be used when you think there is no change in webelement or there is no chance of page getting refreshed

43. Interview question: How to improve script performance
Ans: Use @CacheLookup

@FindBy(xpath = "//td[contains(text(),'Contacts')]")
	@CacheLookup
	WebElement contactsLabel;


WebDriver Fire Event:
----------------------
44. webdriver fire event otherwise known as WebEventListener is used to display better console output
based on each actions undergone on the webpage like beforeNavigateTo, afterNavigateTo,beforeChangeValueOf,
afterChangeValueOf, beforeClickOn, afterClickOn, beforeNavigateBack, afterNavigateBack, beforeNavigateForward,
beforeFindBy, beforeScript, beforeAlertAccept, afterAlertAccept, beforeNavigateRefresh, beforeChangeValueOf


45. Write a class inside TestUtil, called WebEventListener.Java. This is a default code which extends TestBase class
and implements interface WebDriverEventListener

public class WebEventListener extends TestBase implements WebDriverEventListener {

	public void beforeNavigateTo(String url, WebDriver driver) {
		System.out.println("Before navigating to: '" + url + "'");
	}


46. in TestBase class below line of code should be added for the event firing using WebElementListener to work

	public  static EventFiringWebDriver e_driver;
	public static WebEventListener eventListener;

	e_driver = new EventFiringWebDriver(driver);
	// Now create object of EventListerHandler to register it with EventFiringWebDriver
	eventListener = new WebEventListener();
	e_driver.register(eventListener);
	driver = e_driver;


47. Advantage of using webdriver fire event is along with getting detail output on console it also helps in capturing any exceptions
and take a screenshot of it on when there is an error or exception.

	public void onException(Throwable error, WebDriver driver) {
		System.out.println("Exception occured: " + error);
		try {
			TestUtil.takeScreenshotAtEndOfTest();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}


48. How to generate HTML report

ExtentReports:
----------------

Add below dependencies
	
<dependency>
			<groupId>com.relevantcodes</groupId>
			<artifactId>extentreports</artifactId>
			<version>2.41.2</version>
		</dependency>



1. Create a package com.qa.ExtentReportListener
2. Create a class ExtentReporterNG.java -  this will have default code provided by the company
3. Add below listener tag in testng.xml, so all the actions in script will be captured by the listener and displayed in
the Extent Report

<listeners>
		<listener class-name="com.qa.ExtentReportListener.ExtentReporterNG" />
	</listeners>
	

4. Now run the testng.xml file and extent report will be generated in test-output folder
5. Copy the Extent.html file path and it displays the report


Integrate with Jenkins:
-----------------------

pre req, download all maven plugin and testng plugin

1. Open CMD, cd C:\Program Files (x86)\Jenkins
2. RUn java-jar jenkins.war
3. User name and password is jenkins
4. Create newjob by clicking on New Item
5. Create a maven project by name - FreeCRMTestPOM
6. Build - pom.xml path
GOals: clean install
7. Post build - Generate Testng results
8. **/testng-results.xml - results will be generated here
9. Run the job


-------------------------------------------------------------------Log 4J--------------------------------------------------------------------------------

1. What is Log?
Capturing activities at the time of execution

2. 4 levels of Logs?
1. info
2. warn
3. debug
4. fatal


3. How to generate logs? Using Apache Log API (log 4j Jar file)

4. How it works? it reads log 4j configuration from log4j.properties

5. Where to create properties files? create inside resources source folder
right click on project > new > source folder > src/main/resources

6. inside the resources folder, create file > log4j.properties   (name should not be changed of file name)

Note: copy paste below configuration to log4j.properties. no need to change any value


7. This code in log4j.properties file, log4j.appender.file.Append=false. It will clear old log for new run
if it is true, then log will be appended to previous log

7. Now, run test case, we can see logs in console and when you refresh proj, application.log file is created with all the logs

8. it will have details steps what exactly is happening in the background

-----------------------

#Set level
log4j.rootCategory=debug, console, file  
  
# Appender which writes to console  
log4j.appender.console=org.apache.log4j.ConsoleAppender  
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=%d{MM-dd-yyyy HH:mm:ss} %F %-5p [%t] %c{2} %L - %m%n
  
# Appender which writes to a file  
log4j.appender.file=org.apache.log4j.RollingFileAppender
log4j.appender.file.File=application.log
  
# Defining maximum size of a log file
log4j.appender.file.MaxFileSize=10mb 
log4j.appender.file.MaxBackupIndex=10
log4j.appender.file.layout=org.apache.log4j.PatternLayout  
log4j.appender.file.layout.ConversionPattern=%d{ISO8601} %5p [%t] %c{1}:%L - %m%n
log4j.appender.file.Append=false

--------------------------




How to have customize Logs or deliberately have logs
-------------------------------------------------------	

Logger log = Logger.getLogger(LoginTest.class);

//info
log.info("browser is launching");

//warning
log.warn("warning message");

//fatal
log.fatal("fatal error message");


//debug
log.debug("this is debug message")






-------------------------------------------------------------------Selenium GRID--------------------------------------------------------------------------

Cross browser testing using Selenium Grid

In a setup, will have 1 hub and multiple nodes

Remotewebdriver is used to execute on differetn machines




Laptop				------>		Hub Server	---JSON---->		Node1  - Browsers with different version available on each node
Java code+remotewebdriver			   VM1					VM2(WIN) - FF52, Chrome x, IE10
WIN//FF/52						                                All 3 drivers gecko driver, chromedriver, iedriver should be available

											Node2
											VM3(OS) - FF51, Chrome7, IE11
											All 3 drivers gecko driver, chromedriver, iedriver should be availab

											Node3
											VM4(LIN)
											All 3 drivers gecko driver, chromedriver, iedriver should be availab




1. From laptop in the form remote webdriver, we send the desired capabilities like which OS, which Browser and which version of browser to hub
2. Hub will check with all available nodes that have this configuration
3. Webdriver command will be executed on those nodes
4. if non of nodes have that config, it will throw error



How to set up Hub and Node - Launch chrome browser and open Web app
--------------------------------------------------------------------



Laptop/Java Code	------------------>				Hub		<----------------->			Node
1. Give address/URL of hub					Pre req:Selenium Server Jar file		Pre req:Selenium Server Jar file (same as hub)	
2. Desired Capabilities						Register a node with HUB			chromedriver.exe
3. Chromeoptions - Chromeoptions 										Chrome browser
is used to launch chrome in Grid from 3.7 Selenium								Web App will be launched





How to create hub
-------------------
pre req: ensure selenium standalone jar file is available in the machine you are hosting hub

1. go to cmd
2. go to cd C:\Users\mubeen\Desktop\seleniumjars3.8.1
3. java -jar selenium-server-standalone-3.8.1.jar -role hub
4. Shows hub up and running
5. copy the ip address.
6. go to browser http://169.254.144.87:4444 or localhost:4444 - Shows hub is up and running

7. Note: TO stop hub, Cntrl+C. 

How to register node:
-------------------------

pre req:

1. Open a new terminal
2. go to cd C:\Users\mubeen\Desktop\seleniumjars3.8.1
3. java -Dwebdriver.chrome.driver="C:\Users\mubeen\Desktop\seleniumjars3.8.1\drivers\chromedriver.exe" -jar selenium-server-standalone-3.8.1.jar -role node -hub http://169.254.144.87:4444/grid/register
4. node is registered with the hub and running on  http://169.254.144.87:5555

5. refresh browser, see the hub and node configured to it. It will show max how many browsers of different type can be laucnhed



Run the project
-------------------

1. Create a maven project
2. Add seleniumjars3.8.1 dependency in pom.xml
3. Update groupid and artifactid
4. Create a class with main()
5. 

Code: Working
---------------


package gridpackage;

import java.net.MalformedURLException;
import java.net.URL;

import org.openqa.selenium.Platform;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;

public class ChromeGridTest {

	public static void main(String[] args) throws MalformedURLException {
	
		//1. define desired cap
		
		DesiredCapabilities cap = new DesiredCapabilities();
		cap.setBrowserName("chrome");
		cap.setPlatform(Platform.WINDOWS);
		
		
		//2. Chrome Option definition				//use ChromeOptions from selenium 3.7
		ChromeOptions option = new ChromeOptions();		//merge all capabilities using Chromeoption
		option.merge(cap);
		
		String hubUrl = "http://169.254.144.87:4444/wd/hub";
		WebDriver driver = new RemoteWebDriver(new URL(hubUrl),option);
		
		driver.get("http://google.com");
		driver.getTitle();
		
		
		
	}

}



5. Go to browser, regresh hub url. We can see 2 browser will be greyed out. Means it is being used
6. Goto hub and node terminal, we can see updates cmd like how many maxsession available. In node it will show the session id also

7. Note: All hub and node should be in same network


To create node2: Open it on new port -5556
---------------------------------------------
1. Open a new terminal
2. go to cd C:\Users\mubeen\Desktop\seleniumjars3.8.1
3. java -Dwebdriver.chrome.driver="C:\Users\mubeen\Desktop\seleniumjars3.8.1\drivers\chromedriver.exe" -jar selenium-server-standalone-3.8.1.jar -role node -hub http://169.254.144.87:4444/grid/register -port 5556
4. node is registered with the hub and running on  http://169.254.144.87:5556
5. regfresh hub url to see new node created with port 5556




=================================================================END OF SELENIUM=============================================================================


-----------------------------------------------------------------------JENKINS-------------------------------------------------------------------------------

Module43 - Jenkins,Git,Github Integration
-----------------------------------------

Continuation Integration:


Path Jenkins Installed in Windows: C:\Program Files (x86)\Jenkins
In CMD, cd C:\Program Files (x86)\Jenkins
java -jar jenkins.war
url: localhost:8080

Username: jenkins
Password: Jenkins


Various tabs in Jenkins
-------------------------

Source Code Management
1. Git
2. SVN
3. None

Build Triggers:
1. Build after other projects are built
2. Build Periodically
3. POLL SCM - build periodically when any change in git or other scm's

Build:
1. Execute Windows batch command
2. Execute Shell
3. Invoke ANT
4. Invoke top level Maven

Post Build Action:
1. Build Other Projects
2. Email Notification
3. Archive the artifacts




Build Periodically:
Will build the job periodically, it uses the cron logic

Minute - 0-59
Hour - 0-23
Day of Month - 1-31
Month - 1-12
Day of Week - 1-7 (1 is Monday)
* - denotes any

* * * * *  -> denotes 	every min
0-59 * * * * -> denotes 

minutes:
in 0-59 -> 59th min of next run, 0th min of previous run
50-59 * * * *    ->  Sunday, March 11, 2018 11:59:58 PM PDT; would next run at Monday, March 12, 2018 12:50:58 AM PDT.

H/20 * * * *   -> every 20min
H * * * *  - every 1 hour
* H/6 * * *  -> - every 6 hours
0-0 * * * 3   -> Wednesday, March 7, 2018 11:00:20 PM PST; would next run at Wednesday, March 14, 2018 12:00:20 AM 




Setup Email Notification
Manage Jenkins -> Configure Jenkins - Setup Email Notification

In Post Build Action:
Select Email notification



To run Ant on Jenkins
----------------------
Build:
1. Select option Invoke Ant and click on Advanced
2. Target: compile run
3. Build File: C:\Users\mubeen\workspace\newproject\build.xml



GIT and GITHUB:
-----------------
GIT is a repository and GITHUB is a server/website that maintains the repository

Remember:
Git helps in transfering files between local system and github repository server. Git has CLI interface

Download GIT:
https://git-scm.com/download/win


Github:
mubeenali85
Hightime9



How to integrate GIT with Jenkins:
---------------------------

1. Install "GIt plugin" in Jenkins ->Manage Jenkins -> Manage Plugin
2. Restart Jenkins -> 
     In CMD, cd C:\Program Files (x86)\Jenkins
     In CMD type command -> java -jar jenkins.war -> Will restart jenkins

Note: looks like the above step is not required in my machine,

3. Open Jenkins - localhost:8080
4. Enable Auto Refresh in Jenkins

Jenkins should know where git.exe is placed in local
------------------------------------------------------
5. Give git.exe path in Jenkins, Manage Jenkins -> Global tool configuration -> Git - Path to git executable -> C:\Program Files\Git\cmd\git.exe 

For security SSH Key should be generated from Git and placed in github, so Jenkins can interact with github securely
----------------------------------------------------------------------------------------------------------------------
6. Open Git bash, 
   Git Bash>   type - pwd  -> C/Users/mubeen
7. Git Bash> mkdir .ssh
8. Git Bash> cd .ssh
9. Git Bash> generate keys for encryption, ssh-keygen -t rsa -C "mubeen85@gmail.com"
10 Git Bash> Hit enter 3 times, dont enter any values
10. Go to physical location-> C:\Users\mubeen\.ssh
11. We can see 2 keys generated
12. Secret key and Public Key, we should not share secret key with anyone, .PUB file is public and can be shared with Jenkins to connect


To register github account repository with local machine
---------------------------------------------------------

13. Git Bash> ssh -v git@github.com
14.  In local path  C:\Users\mubeen\.ssh -  File called knownhost will be generated
15. github is added as known server to your local machine

SSH key generated above in .ssh folder should be pasted to ADD SSH keys in Github
------------------------------------------------------------------------------------
16. Goto github.com
17 login with github account
18. Click on Settings.
19. Add ssh key, public key from .ssh folder. Copy and save the key to github account.

Also to inform Git about the generated SSH keys, below are the steps
--------------------------------------------------------------------
20. copy .ssh folder from C:\Users\mubeen to C:\Program Files\Git
21. Open CMD(make sure not git bash) - cd C:\Program Files\Git\bin
22. ssh.exe -T git@github.com    (from the bin folder of git mentioned above)
	
GO to github and create a new repository
----------------------------------------
Ex: myrepo1234


How to upload files in local to github account using gitbash
-------------------------------------------------------------
In Git bash --> Goto the path where project lies in local   (make sure to give \\ in git)

>cd C:\\Users\\mubeen\\workspace\\newproject

  1. git init - creates .git folder inside the project under local (if not visible, make sure it is not hidden)
  2. git add .
  3. git commit -m "test"
  4. git remote add origin https://github.com/mubeen85ali/myrepo1234.git    (make sure to give correct git repo name)	
  4. git push -u origin master--  Will push files from local to github


ANT with Jenkins
---------------

1. SCM - Select GIT and provide the link
2. Build Trgger -  Build periodically
3. Build - Select Invoke ANT
4. Build Target - compile run
5. Path: Build.xml    -> no need to give full build.xml path, since build.xml is placed parallel to project. Jenkins is capable of
identifying the build.xml from github
6. Post build action - Email notification

Note: if ANT or Maven not working, give path of Maven and ANT in jenkins
	
Jenkins - configure - Maven
			name - Maven
			Maven_home - C:\apache-maven-3.3.9-bin\apache-maven-3.3.9

similarly for ANT



as mentioned above Maven can also be run by giving Root pom as pom.xml and target as test <mvn test>
---------------------------------------------------------------END OF JENKINS----------------------------------------------------------------

----------------------------------------------------------------------------------Jira By Naveen-----------------------------------------------

1. google - download jira
2. either download Jira or use Jira which is hosted on cloud
3. Click on try jira - https://www.atlassian.com/software/jira/try
4. Click on try free
5. username - mubeen85@atlassian.net
6 password - Hightime
7. Jira link for 30days - https://mubeen85.atlassian.net/onboarding/software


A Project and Epic created by Product Owner:
---------------------------------------------

1. Create a project - MubeenTest1
2. There will be multiple projects in a team
3. For project MubeenTest1 - Create an issue

Issue Type: Epic
Epic Name: Epic 1 - Implement Free CRM Login and Registeration Features 
 
Summary: Implement Free CRM Login and Registeration Features 

Description: 
Epic 1 - Implement Free CRM Login and Registeration Features
1. Login
2. Registeration
 
Priority: High

AssignTo: Mubeen Ali


Create an Issue Story1  under Epic 1
------------------------------------

1. In MubeenTest1 project, create an issue of type Story - Loin US -1
2. Link the Login US -1 story to the Epic - Epic1

Create an Issue Story2 under Epic 1
------------------------------------
1. In MubeenTest1 project, create an issue of type Story - Registration US -2 
2. Link the Registration US -2 story to the Epic - Epic1


End of Production Owners role


Tester Role starts now
-------------------------

1. Go to backlogs to see all the User stories created by Product owner/Business Analyst
2. All the user stries will be listed here
3. Creat a sprint with sprint scheduled dates
4. Remember to assign a sprint to the epic as well
5. Drag and drop all the user stories to the sprint1
6. Click on start sprint
7. Go to active sprints to see all Epic and User stories selected for a sprint
8. Now for Login - US -1 create many sub tasks
 i. QA - Login Feature - Manual Test
 ii. QA - Login Feature - Automation Test
 iii. QA - Test Case Design
 iv. DEV - BackEnd Logic
 v. DEV - UI Design
 vi. DEV - database build

9. Now goto Active Sprints to see all associated User Stories and Subtask linked to a sprint
10. Each subtask will be assigned to a dev or qa
11. In Active Sprints, we can move/drag each subtask to 'in progress' if work is in progress
12. Once all subtask are complete and moved to done
13. The user story can be marked done and so is the Epic
14. Goto reports tab to view the graph
15. Similarly we can create the next sprint and move the second set of user stories and associated sub task and drage and drop
between TO DO , In PROGRESS and DONE block and mark the User Story complete once done
 
Different Issue Type - 
------------------- 
1. Epic - Epic is a release name which is the end goal of implementing a new feature, it will list down all the features
	- Remember an Epic cannot have another Epic linked to it

2. Story - 
3. Tasks
4. Bug
5. Test


Jira UI:
-----------

For a Project - MubeenTest

1. Backlogs  
2. Active Sprints
3. Reports -  Generate different types of graph like burn down graph or velocity graph(Planned commitments vs what is achirved in bar graph)
4. Releases
5. Open Issues - Issues like User Stories that are not complete or not started
6. Pages
7. Components
8. TEsts  - will be displayed only if Zephyr plugin is installed

Then,
1. Create button or '+' icon on top - We can create Issues of any type listed above
2. We can create sprints and link issues to any sprint
3.Go to Active Sprint - To Do    ---    In Progress --- Done
 move sub tasks from To Do to in progress or Don


Story Point - A story point is an estimate of the relative complexity of a story.  It can be given any numbers based onc omplexity

Zephyr Integration with Jira
---------------------------

In Jira, there is no provision to write test cases, you can either write the testcases in excel or integrate Zephyr plugin in Jira


1. In Google - zephyr plugin for Jira
2. Click on link - https://marketplace.atlassian.com/apps/1014681/zephyr-for-jira-test-management?hosting=cloud&tab=overview
3. Click on Start free trial for Coud
4. Install Zephyr
5. Refresh Jira to see Test icon


In Test tab:
-------------

Test Summary, Test Cycle and Traceability tabs


Test Summary: How mny test cases created and executed
Test Cycle
Traceability:
	Requirement Traceability  - Requirement -> Execution -> Test -> Defects
	Defect Traceability	- Defects -> Execution -> Test -> Requirements


Initially Test Issue type wont be present, to get this added go to
Project Settings -Issue Type - Select Test Issue type


Create Issue Type - 'Test' - A zephyr plugin
--------------------------------------------

1. Create Issue Type Test - Login Test
2. Relate Issue to any User Story
3. Add Test Steps to the Test
4. Test Step, Test Data and Expected Result
5. Click on Execute icon to execute testcases
6. Different options in excution -Pass, Fail, WIP, UnExecuted, Blocked
7. Go to Test Tab, Test Cycle to see the test case passed


Raise a bug:
------------

1. Like in QC ,we create a bug and link to User story or Test
2. Can add comments. Bug can be later moved from ToDO to In Progress to Done

------------------------------------------------------------------------------------------------------------END OF JIRA-----------------------------------------------------------








































































=========================================================================ARCHIVE============================================================================================================
-----------------------------------------------------------------System Design Interview by Naveen-----------------------------------------------------------------------------------------

Whatsapp Architecture
-----------------------

1. Understand the requiremnt
2. Ask as much as questions
3. Build the feature
	i. One to one text
	ii. Send/Delivered/Read
	iii. Push notification
	iv. Load balancers - if any server goes down
	v. BackUp message

4. Build Architecture -------> Feature - Donot directly jump into Architecture without Feature

5. One to One Text

Alex sends a message to Tom

Tom ----->  Multiple Server    -----> Alex

i. Server should be setup
ii. Should be scalable
iii. Reliable
iv. secure
v. server doesnot store message, it reads and pushes the message to receipient


Scenarion 1
------------
Tom ---sends message in Q-->  Server
     <-------Ack---------

Tom sends message to Server in Q and Server acknowledges the message sent with one tick


Scenarion 2
------------
When Alex receives the message

Server -----> Tom   Another connection is set with notification of 2 ticks in grey


Scenario 3
-----------

When Alex sees the message

Alex ---> Server    -- Acknoldgement sent to server that Alex saw the message
Server ----->  Tom  -- Server sends the notification in Q to Tom that Alex saw the message with 2 blue ticks



Race Condition:
---------------

If tom sends 3 message to Alex and each message goes in different server. Then each should be send to Alex in
sequence order, this is race condition

Tom   ---Server1 Message1 -------> Alex 
Tom   ---Server2 Message2 -------> Alex 
Tom   ---Server3 Message3 -------> Alex 

Each message will have messageid to send the message in sequence

Fire and Forget
----------------
Server never stores messages, It receives reads and pushes to receipient. this concept is fire and forget


---------------------------------------------------------Java GC Reddy--------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-
Java OOPS Concept:
-----------------

Four fundamentals of OOPS
------------------------------

1. Inheritance - uses extends keywords
> It is mechanism in which one object acquires all the properties and behaviours of its parent object
> Using Inheritance we can create class that are built up on existing classes.
> When we inherit from an existing class, we can reuse methods and variables from parent class and we can also create new methods and variables.

1. non static class members can only be inherited
2. the class hwere the class members are getting inherited is called superclass or parentclass or base class.
3. the class to wchich the class members are getting inherited is called sub class or derived class or child class.
4. Inheritance is achieved using "extends" keywords

Java supports 3 types of Inheritance
--------------------------------------
i.  Single inheritance -  Class B extends Class A
ii. Multilevel Inheritance  -  Class C extends Class B, Class B extends Class A	

iii.Multiple Inheritance  note: Java doesn't support - Class B extends Class A, Class B extends Class C (not supported)


2. Polymorphism - (many forms)
It is a concept by which we can perform a single action in different ways

Two types of Polymorphism
--------------------------
i) Compile time polymorphism  - Method Overloading
ii) Run time polymorphism - Method Overriding

a. Method Overloading: Increases the readability of the program

Two ways to overload method:
--------------------------------
a1. By changing no.of arguments
add(int a, int b)
add(int a, intb, int c)

a2. By changing data types
add(int a, int b)
add(double a, double b)

b. Method Overriding: Provides specific implementation of a method that is already provided by its superclass/parent class
If two or methods having same name and same arguments available in super class and sub class. 


3. Abstraction: 
Is a process of hiding the implementation details and showing functionality to the user

> Focuses on what the object does instead of how it is done

Two ways to achieve abstraction:
--------------------------------
i. Abstract class (0% to 100%)
ii. Interfaces (100% abstract)

4. Encapsulation: Process of wrapping code and data into single unit. By which it provides control over data
Suppose we wanted to get value of id greater than 100. Use setter method from encapsulation


Java packages: Group of similar type of classes, interfaces, subpackages

Two types of packages:
-----------------------
1. Built in packages: io, util, lang, sql
2. User defined: own names


Abstraction
------------
It is aprocess of hiding implementation and showing functionality to user

Two types of methods:
1. Concrete method: Methods which are having body
ex: 

public void add(){
statement
--------
----------
}

2. Abstract Methods: Methods which are not have body, if we know the method name and dont know the functionlity. We go for abstract methods
public void add();

Abstract class contains one or more abstract methods
Java Class contains 100% concrete methods
Interface - Contains all abstract methods



Example:

Code1:
public abstract class bike{

public void engine(){
syso("bikes have engine");
}

public abstract void handle();
public abstract void seats();
}


Code2:
public class herohonda extends bike{

@override
public abstract void handle(){
syso("bikes have handle");
}

@override
public abstract void seats(){
syso("bikes have seats");
}


public static void main(String[] args){

herohonda h = new herohonda();
h.handle();
h.engine();
h.seats();

}
}

O/p
bikes have handle
bikes have engine
bikes have seats


Interfaces:

Code1:
public Interface Example1{
int a=10; int b=100;
public void engine();
void seat();

}

Code2:
public Class Example2 implements Example1{
@override
public abstract void handle(){
syso("bikes have handle");
}

@override
public abstract void seats(){
syso("bikes have seats");
}

@override
public abstract void engine(){
syso("bikes have engine");
}

public static void main(String args[]){

Example2 ex = new Example2();            
h.handle();
h.engine();
h.seats();
}

}



Notes:
From Class(concrete) to Sub-class- extends keyword and we can access super class methods
From Abstaract class to sub-class  - extends keyword and we can access super class methods
From Interface to Subclass- implements keywords and we can access super class methods


Interface in Java:
------------------
1. An interface is a collection of Abstract methods
2. Interface is not a class, Class can 100% concrete/implemented methods or partial abstract methods. But interface has 100% abstract methods
3. Selenium webdriver is interface
4. Static and final modifiers not allowed for interfaces
5. Interface should be public
6. Variables have to be declared with values like int a=10
7. Interface is going to be used using implements keyword


Object:
It is an entity that has states and behaviours is known as Objects

Ex: 
Object - Pen, Chair
States or properties - color of pen
Behaviour - moving, jumping


Class:
It is a template or blue print from which objects are created

> A class is a group of objects with common properties

Method:
>An operation on object


How to use Static class members and non static class members
--------------------------------------------------------------

Using Class name we can access Static class members


public class java1 {
	
	static int a =10, b=20 ;  //static variables
	int c=25, d=35;  //nonstatic variables
	
	//Static method
	public static void add(){
		System.out.println("add a and b"+(a+b));
	}
	//non static method
	public void add1(){
		System.out.println("adds c and d"+(c+d));
	}
	public static void main(String[] args) {
   
		//Access static methods
		java1.add();    //use class to access static 
		
		//Access nonstatic methods
		java1 j1=new java1();
		j1.add1();
	}}


------------------------------------------------------




Stack and Heap:-
-----------------

|<------------------------Heap Memory------------------------------------>|
----------------------------------------------------------------------------------------------------------------------------------------------------
|   Young generation              |       Old generation                  |          Permanent Generation                                           |
|    --------------               |       --------------                  |         ---------------------                                           |                                                                          
|    Eden Memeory                 |                                       |                                                                         |                                                                          
|                                 |      Major GC                         |   Meta data of classes/method                                           |                                                                          
|   Minor GC will be performed    |                                       |   not part of heap memory                                               |                                                                          
|                                 |                                       |   will be generated at run time                                         |                                                                          
|                                 | -----------------------------------   |                                                                         |                                                                          
|-----------------------------|---|  Memeory Pool                         |   ----------------------------------------------------------------------|                                                                          
|                             V   |                                       |   Method Area :   Class structure, local variable                       |                                                                          
|                                 |                                       |                                                                         |                                                                          
|    Survivor Memory S0           | 1. Used to store immutable objects    |									    |
|				  |	 like String class                |   Run time constant pool:						    |
|                                 |                                       |								            |
|			          |  2. Defined at the run time by        |-------------------------------------------------------------------------| 	
|				  |		JVM memeory managers      |   Stack memory 							    |
|                                 |                                       |   ------------    Used to store object references                       |                |                               |                                                                          
|                                 |                                       |   At a time stack memory space is given to a local method               |                                                                          
|---------------------------------|                                       |    once a local method is executed then stack memory given              |                                                                          
|                                 |                                       |    to next reference                                                    |                                                                          
|                                 |                                       |                                                                         |                                                                          
|   Survivor Memory S1            |                                       |  Stack memory is much elss compared to heap memory                      |                                                                          
|                                 |                                       |                                                                         |                                                                          																
---------------------------------------------------------------------------------------------------------------------------------------------------



Heap - Java heap memeory stores Class objects, JRE classes, GC(Garbage Collector) runs on heap memeory only to free some memory
by destroying some objects which has no reference

1. Java memory is divided into 2 parts, heap and Stack memory

2. Heap memory divided into 2 parts, Young generation and Old generation

3. All class object created will be stored in Young generation

4. Young generation divided into  3 parts, Eden memory, survivor memory S0 and survivor memory S1

5. New objects will be stored in Eden memory

6. If Eden memory is full, Minor GC (garbage collector) will shift some data to S0 survivor memory and then S1


Old generation memory:
--------------------

1. When S0 and S1 is filled, then new objects will be created in Old generation.

2. When Old generation is also filled, then Major GC (Garbage Collector) is called to clear the memroy but this take time
so that is why we get timeout during peak season on websites



Memory Pools: Inside Heap memeory
--------------
1. Used to store immutable objects like String class
2. Defined at the run time by JVM memeory managers





Permananet Generation: (not part of heap memory)
--------------------------

1.Meta data of the classes and methods will stored in permananet generation memeroy
2. WIll be generated at the run time.
3.  not part of heap memory
 
Method Area - Inside Permananet Generation:
-----------------------------------------------
1. Method Area-  Complete Class structure, Static Variables, COnstant variables will be in this part of memeroy.


Run time constant pool 
-----------------------
1. Used to store static variables and constant varibale
2. Part of Method area

-------------------------------------------------


Java Stack Memory: Object reference stored in this memory
---------------

1. used to execute threads
2. it contains methods specific values will be stored, like all local variables will be stored in Stack memeory
3. Object references will be stored in Stack and not in heap
4. Object references of objects in heap memory will be in stack memroy
5. Test t1 = new Test();  //t1 will be in stack and new Test() object will be in Heap memory   Interview Question
6. At a time stack memory is given to one reference. After that method is executed, stack memory is now given to 
next reference memory
7. Heap memory is big when compared to Stack memeory which only has space for object references




Singleton Patter Design in JAva
----------------------------------

In OOP, Singleton class is a class that can have only one object at a time. How many ever objects you create, changing one would affect 
all others.


How to design singleton
1. Make constructor as private
2. write a statice method that has return type  of the object of this singleton class - This is lazy initialization



Code:

public class Singleton{

private static Singleton_Instance=null;
public String str;

private Singleton(){
str = "Hey, Iam using Singleton";
}

public static Singleton getInstance(){				//method

if(Singleton_Instance==null)
Singleton_Instance = new Singleton();    //for y and z,Single_Instance is not null, so it will return the same Single_Instance of x
return Singleton_Instance;
}

public static void main(String args[]){

Singleton x= Singleton.getInstance();
Singleton y= Singleton.getInstance();
Singleton z= Singleton.getInstance();

x.str = (x.str).toUppercase();   //any change to x will affect y and z

system.out.println(x.str);
system.out.println(y.str);
system.out.println(z.str);

z.str = (z.str).toLowercase();

system.out.println(x.str);
system.out.println(y.str);
system.out.println(z.str);
}

}


O/P -

HEY, IAM USING SINGLETON
HEY, IAM USING SINGLETON
HEY, IAM USING SINGLETON
hey, iam using singleton
hey, iam using singleton
hey, iam using singleton



-------------

Same concept of Singleton is used to initialize browser in Selenium


Class1:

public class DriverInit{

private static DriverInit instanceDriver=null;
private WebDriver driver;

private DriverInit{

}
public WebDriver openBrowser(){
System.setProperty("webdriver.chromedriver","/chromedriver.exe");
driver = new ChromeDriver();
return driver;

}

public static DriverInit getInstance(){
if(instanceDriver==null)
instanceDriver = new InstanceDriver();
return instanceDriver;

}

}


Class2:

public class PageTest{

WebDriver driver;

@BeforeMethod
public void setUp(){
DriverInit instancDriver = DriverInit.getInstance();
driver = instancDriver.openBrowser();
}

@Test
driver.get("http://google.com");
System.out.println(driver.getTitle());

@AfterMethod
public void tearDown(){
driver.quit();

}

}



Note:
This is lazy initialization
Constructor should be private
write a statice method that has return type  of the object of this singleton class



Difference between normal class and Singleton class
For normal class we use constructor whereas singleton class we use getInstance() method for instantziation


-----------------------------------------------------------STARTING WEBSITE test using HYBRID--------------------------------------------------------------------------------------------------------


Flipkart:

1. create maven project

2. src/test/java
	com.qtpselenium.hybrid
	com.qtpselenium.hybrid.sessionsuite   - Best practice  - testcases will be kept here associated to SessionSuite.xls (maintain testcases in away it is not dependent on each other. should be able to execute eaach tc in different browsers)
		LoginTest.java
		ChangePasswordTest.java
3. src/main/java 
	com.qtpselenium.hybrid
		Appkeywords.java
		Generickeywords.java
		Keywords.java	

	com.qtpselenium.hybrid.util
		Constants.java
		Datautil.java
		ExtentManager.java
		XSL_Reader.java
		
  	com.qtpselenium.hybrid.mail
		FileFilterDateIntervalUtils.Java
		SendMail.Java
		Zip.java


4. src/test/resources 
	project.properties
	SessionSuite.xml -  list all the test case class associated to SessionSuite.xls
	SuiteB.xml	 -  list all the test case class associated to SuiteB.xls
	SuiteC.xml	 -  list all the test case class associated to SuiteC.xls
	testng.xml       - <suite-file path="./SessionSuite.xml" />    <suite-file path="./SuiteB.xml" />    <suite-file path="./SuiteC.xml" />
	testng-results.xsl
	


5. data folder  - Xls file to read the data
	SessionSuite.xls
	SuiteB.xls
	SuiteC.xls

6. build.xml
7. pom.xml
8. Reportsconfig.xml - ExtendReports template
9. 



LoginTest.java
---------------

SessionSuite.xls

tab1 - Testcases
tab2 - Keywords
tab3 - Data


TCID   			Runmodes
loginTest		Y
Changepassowrdtest	N



tab2 = Keywordsheet
TCID	Description	Keyword		object			data

loginTest		openBrowser				chrome(REPLACE WITH KEY BROWSER FROM BELOW)
loginTest		navigate	url	
loginTest		click		loginLink_xpath	
loginTest		input		userName_xpath		Username  (comes from data sheet)
loginTest		input		password_xpath		Password  (comes from data sheet)
loginTest		click		nextButton_xpath	
loginTest		closeBrowser		


tab3=data

loginTest			
Runmode	Browser		Username	Password	ExpectedResult
Y	Mozilla		mubeen85	Hightime	Success	
N	Chrome		U2		P2		Failure
N	Mozilla		U3		P3		Failure




In Properties file

url=http://flipkart.com

#Links
loginlink_xpath



#Text Fields
userName_xpath=//*[@test='ddd']
password_xpath=//*[@test='ddd']

#button
loginButton_xpath=//*[@tets='sss']

#
myaccount_xpath=//*[@id='ddd']
-----------------------------------------------------


Implementing logintest.java
----------------------------


public class LoginTest {

ExtentReports rep = ExtentManager.getinstance();
ExtentTest test;
Xls_Reader = new Xls_Reader(CONSTANTS.SessionSuite.xls)

String testname = "LoginTest"  ;   //very important

@Test(dataProvider="getData")
	public void loginTest(Hashtable<String,String> data){
		test = rep.startTest(testName);
		test.log(LogStatus.INFO, data.toString());
		
		if(DataUtil.isSkip(xls, testName) || data.get("Runmode").equals("N")){
			test.log(LogStatus.SKIP, "Skipping the test as runmode is N");
			throw new SkipException("Skipping the test as runmode is N");
		}
		
		test.log(LogStatus.INFO, "Starting "+testName);
		
		app = new Keywords(test);
		test.log(LogStatus.INFO, "Executing keywords");
		app.executeKeywords(testName, xls,data);
		// add the screenshot
		//app.getGenericKeyWords().reportFailure("xxxx");
		test.log(LogStatus.PASS, "PASS");
		app.getGenericKeyWords().takeScreenShot();


}

	@AfterMethod
	public void quit(){
		if(rep!=null){
			rep.endTest(test);
			rep.flush();
		}
		// quit 
		if(app!=null)
			app.getGenericKeyWords().closeBrowser();
	}
	
	@DataProvider
	public Object[][] getData(){
		return DataUtil.getData(xls, testName);
	}
}


---------------------------------------------

below keywords are not always written for login, instead it is combined to form Flipkartlogin and verifyFlipkartlogin

Replace this to
click		loginLink_xpath	
input		userName_xpath		
input		password_xpath		
click		loginButton_xpath


Instead in xls Keywordssheet write application dependent keyword and implement that in

Flipkartlogin 
verifyFlipkartlogin


-----------------

In Keywords class
-------------------
else if (keywords.equal("flipkartlogin"))
result = app.flipkartlogin(testdata)  ;  //here testdata is the hashtable

else if (keywords.equal("verifyFlipkartlogin"))
result = app.verifyFlipkartlogin(testdata.get("Expectedresult"))  ;  


In Appkeywordsclass
---------------------------

public string flipkartlogin(Hashtable<> testdata){
test.log(logstatus.info,"loggin with"+testdata.get("username")
return login(testdata.get("username"),testdata.get("password"))
}

public String login(string username, string password){
getElement("username_xpath").sendkeys(testdata.get("username"));
getElement("password_xpath").sendkeys(testdata.get("password));
getElement("loginButton_xpath").click();
return Constants.PASS
}



public string verifyFlipkartlogin(String expectedresult){

boolean result = isElementpresent("myaccount_xpath");

if(result)
actualresult="Success"
else
actualresult="Failure"

if(!actualresult.equals(expectedresult))
test.log(logstat.fail,"got actualresult as "+actualresult);
assert.fail("got actual result as "+actualresult);

OR

return False

}
return CONSTANTS.PASS
}

we have centralized place in Keywords to return failure

in kEywords.java
------------------

else if (keywords.equal("verifyFlipkartlogin"))
result = app.verifyFlipkartlogin(testdata.get("Expectedresult"))  ; 

Centralized code to report failure

if(!result.equals(CONSTANTS.PASS))
app.reportfailure(result);
Assert.fail(result);



-----------------------------------------------------

Need to close browser each time a testcase is executed
so in @After test need to implemenet

if(app!=null)
app.getgenerickeywords.closebrowser();

------------------------------


Implementing changepasswordtest.java

in properties file add default logins

username=mubeen85
Password=123pass

Keywords.java
---------------
else if(keyword.equals("defaultLogin"))
result=app.defaultLogin();

Appkeywords.java
--------------
public String defaultLogin(){
return login(prop.getProperty("username"),prop.getProperty("password"));
}


In keywords tab

TCID		Description	Keyword		Object				Data
LoginTest			openBrowser					Browser
LoginTest			navigate	url	
LoginTest			flipKartLogin		
LoginTest			verifyFlipKartLogin		
ChangePasswordTest		openBrowser					Browser
ChangePasswordTest		navigate	url	
ChangePasswordTest		defaultLogin		
ChangePasswordTest		scrollTo	changePassword_xpath	
ChangePasswordTest		wait						5000
ChangePasswordTest		click		changePassword_xpath	
ChangePasswordTest		input		oldPassword_xpath		OldPassword
ChangePasswordTest		input		newPassword_xpath		NewPassword
ChangePasswordTest		input		newPasswordRepeat_xpath		NewPassword
ChangePasswordTest		click		savePasswordChange_xpath	

Tab=Data

LoginTest				
Runmode	Browser		Username		Password	ExpectedResult
Y	Mozilla		its.thakur@gmail.com	pass@1234	Success
Y	Chrome		U2	P2				Success
N	Mozilla		U3	P3		x
				
ChangePasswordTest				
Runmode	Browser		OldPassword	NewPassword	ExpectedResult
Y	Mozilla		pass@1234	selenium@1234	Success



----------------------------------------------------------------Java Collections by Naveen-----------------------------------------------------------------
===========================================================================================================================================================
112. What is collections in Java
Collections is a frameowrk in java used to store and manipulate a group of data or object in a particular collection.
Operations: Searching, sorting, insertions, manipulating and deleting data is done using collection


Important INterfaces in Collection:
--------------------------------

1.Set
2. List
3. Queue
4. Dequeue


Important Classes
1. ArrayList
2. LinkedList
3. Vector
4. TreeSet
5. Priority Queue
6. HashSet


What is collection framework>
It is ready made architecutre in the form of API's , so programmer do not have to write code for such operations
Data can be manipulated using these operations in Collection frameowrk to make programmers life easy


JDK java development kit contains all the collections api in it inside java.util package



Collections Architecture: Refer Architecture Diagram in Desktop
---------------------------------------------------------------

		implements			 all 3 implements collection	(interface)			  (Classes)
Iterable      <------------     Collection	<------------------------	1.List <----------implements----- ArrayList, LinkedList,Vector <-----extends vector-----Stack
(interface)			(interface)					
				not collections					2.Sets <----------implements------HashSet and LinkedHashSet(Classes)

								      (interfce)Sorted Set <-------implements------TreeSet(Class)
										Soreted Set <------extends----------Set(interface)

										
										3.Queue <------implements---------PriorityQueue(Classes)
					
										Dequeue <------implements------ArrayDequeu and LinkedList(Classes)
										   (interface)
										Dequeue also extends Queue


Note:
Class extends Class
Class implements Interface
Interface implements Interface



Part2: ArrayList
----------------

Problem with Array:
--------------------
Array range is static, if the array grows then it will throw indexoutofboundexception

int a[] = new int[3]; //3 is the maximum no.of data that we can store in Array

a[0]=100;
a[1]=200;
a[2]=300;

Now, when a[3] wants to store 400, it cannot as there is no space and it will throw index out of bound exception


ArrayList: Dynamic in nature
-------------------------------
Array List can store N number of data

ArrayList arr = new ArrayList();   //package imported from Java.util, ArrayList is class

arr.add(10);
arr.add(20);
arr.add(30);

system.out.println(arr.size());   //will give size of the ArrayList
o/p - 3

Now later if we add
arr.add(40);
arr.add(50);
arr.add(50);
system.out.println(arr.size()); 
o/p - 6


Properties of ArrayList:
------------------------

1. It can contain duplicate values
2. It maintains insertion order
3. It is not synchronized  - (It is slow, not thread safe)
4. Allows random access to fetch any element because it stores value in the basis of indexes
		//arr.get(1);  o/p ->20

5. For loop can be used to print all values in the ArrayList from 0 to arr.size();
6. It is generic in nature

Generic - when we create an object of ArrayList(), we declare the data type also so that only that particular data types can be 
added. This was not available in older version

Non Generic - jdk 1.5
---------------------
For ex: ArrayList arr = new ArrayList();
	arr.add(10);
	arr.add("abc");

Generic - jdk 1.8
-------------------
For ex: ArrayList<Integer> arr = new ArrayList<Integer>();
	arr.add(10);
	arr.add(20);
Note: Only integer type can be adde

Non Generic - jdk 1.8
----------------------

if we try to create object of arraylist in non generic type, then it will show a warning but still we can do it

Important:
ArrayList with Iterator and of class object type:
--------------------------------------------------

Use iterator to iterate between the data

Class1:
-------
public classemployee{

public employee(String name, int age, String dept){  //constructor
this.name = name;
this.age = age;
this.dept = dept;
}}

Class2:
--------

public class ArrayLists{

Employee e1 = new Employee("Mubeen",30,"QA");
Employee e2 = new Employee("Munnu",3,"Ops");
Employee e3 = new Employee("Febin",25,"Dev");

ArrayList<Employee> arr1 = new ArrayList<Employee>();

arr1.add(e1);
arr1.add(e2);
arr1.add(e3);

Iterator<Employee> it = new Iterator<Employee>();

while(it.hasnext()){
Employee emp = it.next();
system.out.println(emp.(name));
system.out.println(emp.(age));
system.out.println(emp.(dept));
}
}


o/p - 
Mubeen
30
QA
Munnu
3
Ops
Febin
25
Dev


What is addAll() method in ArrayList
------------------------------------
addAll is to merge 2 arrayList


ArrayList<integer> arr1 = new ArrayList<Integer>();
arr1.add(10);
arr1.add(20);
arr1.add(30);

ArrayList<integer> arr2 = new ArrayList<Integer>();
arr2.add(40);
arr2.add(50);
arr2.add(60);

arr1.addAll(arr2);

o/p - of arr1 will be 10,20,30,40,50,60


What is removeAll() in ArrayList
--------------------------------
removeAll() is to remove one arraylist from other, opposite of addAll()

arr1.removeAll(arr2);

o/p - 10,20,30

What is retainALl() in ArrayList
--------------------------------
Only common data between 2 arraylist will be printed

ArrayList<integer> arr1 = new ArrayList<Integer>();
arr1.add(10);
arr1.add(20);
arr1.add(30);

ArrayList<integer> arr2 = new ArrayList<Integer>();
arr2.add(10);
arr2.add(50);

arr1.retainAll(arr2);

o/p - 10 only



Threading:
We can start multiple threads concurrently

Enumeration:
Enumeration is ready data one by one


==============================================================XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX==============================================================

